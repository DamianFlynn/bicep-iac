{



  //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  //                         deployments
  //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  "deployments": [
    { // Monitor Workbooks firewall
      "name": "res.arm.workbooks.firewall",
      "templatePath": "https://piacinnofactor.blob.core.windows.net/modules/res.arm.workbooks/2021-02-25/res.arm.workbooks.json",
      "canRedeploy": true,
      "force": false,
      "parameters": {
        "partnerCountry": {
          "value": "[#_central.partner.country_#]"
        },
        "workbooks": {
          "value": [
            { // Modified version of https://github.com/Azure/Azure-Network-Security/blob/master/Azure%20Firewall/Workbook%20-%20Azure%20Firewall%20Monitor%20Workbook/Azure%20Firewall_Gallery.json from commit a7b8e85 on 7 Apr 2021
              "displayName": "Azure Firewall",
              "content": {
                "version": "Notebook/1.0",
                "items": [
                  {
                    "type": 1,
                    "name": "MainTitle",
                    "content": {
                      "json": "## Azure Firewall\r\n---"
                    }
                  },
                  {
                    "type": 11,
                    "name": "MainLinks",
                    "customWidth": "60",
                    "content": {
                      "version": "LinkItem/1.0",
                      "style": "tabs",
                      "links": [
                        {
                          "id": "20847ce8-91bc-4d8b-b878-a5a41c95c31c",
                          "cellValue": "selectedTab",
                          "linkTarget": "parameter",
                          "linkLabel": "Overview",
                          "subTarget": "AFOverview",
                          "style": "link"
                        },
                        {
                          "id": "f564709d-1658-46a1-8b44-892210e13017",
                          "cellValue": "selectedTab",
                          "linkTarget": "parameter",
                          "linkLabel": "Application rules",
                          "subTarget": "AFAppRule",
                          "style": "link"
                        },
                        {
                          "id": "1f6661e2-f873-4d56-879d-4d085d8cf1d4",
                          "cellValue": "selectedTab",
                          "linkTarget": "parameter",
                          "linkLabel": "Network rules",
                          "subTarget": "AFNetRule",
                          "style": "link"
                        },
                        {
                          "id": "ef1548c5-ef55-4eaa-8a81-b049cb93b56c",
                          "cellValue": "selectedTab",
                          "linkTarget": "parameter",
                          "linkLabel": "DNS Proxy",
                          "subTarget": "AFDNSProxy",
                          "style": "link"
                        },
                        {
                          "id": "18a4a585-2176-4d9f-907c-8e8d5f984efa",
                          "cellValue": "selectedTab",
                          "linkTarget": "parameter",
                          "linkLabel": "IDPS (Premium)",
                          "subTarget": "AFIDSIPS",
                          "style": "link"
                        }
                      ]
                    }
                  },
                  {
                    "type": 9,
                    "name": "MainParameters",
                    "customWidth": "40",
                    "content": {
                      "version": "KqlParameterItem/1.0",
                      "crossComponentResources": [
                        "value::selected"
                      ],
                      "parameters": [
                        {
                          "id": "01afeffb-5ade-42b4-8ce9-e648b880e5a5",
                          "version": "KqlParameterItem/1.0",
                          "name": "TimeRange",
                          "label": "Time range",
                          "type": 4,
                          "value": {
                            "durationMs": 14400000
                          },
                          "isRequired": true,
                          "isGlobal": true,
                          "typeSettings": {
                            "selectableValues": [
                              {
                                "durationMs": 300000
                              },
                              {
                                "durationMs": 900000
                              },
                              {
                                "durationMs": 1800000
                              },
                              {
                                "durationMs": 3600000
                              },
                              {
                                "durationMs": 14400000
                              },
                              {
                                "durationMs": 43200000
                              },
                              {
                                "durationMs": 86400000
                              },
                              {
                                "durationMs": 172800000
                              },
                              {
                                "durationMs": 259200000
                              },
                              {
                                "durationMs": 604800000
                              },
                              {
                                "durationMs": 1209600000
                              },
                              {
                                "durationMs": 2419200000
                              },
                              {
                                "durationMs": 2592000000
                              },
                              {
                                "durationMs": 5184000000
                              },
                              {
                                "durationMs": 7776000000
                              }
                            ],
                            "allowCustom": true
                          }
                        },
                        {
                          "id": "add90eb3-ff5f-4b19-9658-ff15c8043af5",
                          "version": "KqlParameterItem/1.0",
                          "name": "Workspaces",
                          "label": "Workspaces",
                          "type": 5,
                          "isRequired": true,
                          "multiSelect": true,
                          "quote": "'",
                          "delimiter": ",",
                          "query": "where type =~ 'microsoft.operationalinsights/workspaces' | project id, name | sort by name asc",
                          "crossComponentResources": [
                            "value::selected"
                          ],
                          "typeSettings": {
                            "additionalResourceOptions": [
                              "value::100"
                            ],
                            "showDefault": false
                          },
                          "defaultValue": "value::100",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources"
                        },
                        {
                          "id": "5084e141-6c56-4d7f-bd8a-09f7ef9af1bc",
                          "version": "KqlParameterItem/1.0",
                          "name": "Resource",
                          "label": "Firewalls",
                          "type": 5,
                          "isRequired": true,
                          "multiSelect": true,
                          "quote": "'",
                          "delimiter": ",",
                          "query": "where type =~ 'Microsoft.Network/azureFirewalls' | project id, name | sort by name asc",
                          "crossComponentResources": [
                            "value::selected"
                          ],
                          "typeSettings": {
                            "additionalResourceOptions": [
                              "value::100"
                            ],
                            "showDefault": false
                          },
                          "defaultValue": "value::100",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources"
                        }
                      ],
                      "style": "pills",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces"
                    }
                  },
                  {
                    "type": 12,
                    "name": "AFOverviewGroup",
                    "content": {
                      "version": "NotebookGroup/1.0",
                      "groupType": "editable",
                      "items": [
                        {
                          "type": 3,
                          "name": "AFResourceQuery",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "where type =~ 'Microsoft.Network/azureFirewalls' | extend Tier = trim(' ', tostring(properties.sku.tier)) | extend Status = trim(' ', tostring(iif(isempty(properties.ipConfigurations.[0].properties.provisioningState), properties.provisioningState, properties.ipConfigurations.[0].properties.provisioningState))) | extend ProvisionedState = iff(Status == 'Succeeded', 'Running', 'Not running') | extend Policy = trim(' ', tostring(properties.firewallPolicy.id)) | extend ApplicationRule1 = trim(' ', tostring(properties.applicationRuleCollections.[0].id)) | extend ApplicationRule2 = trim(' ', tostring(properties.applicationRuleCollections.[0].id)) | extend ApplicationRule3 = iff(ApplicationRule1 == '', 'N/A', '') | extend ApplicationRule4 = iff(ApplicationRule2 contains 'subscription', 'Configured', '') | extend ApplicationRuleClassic = strcat(ApplicationRule3, ApplicationRule4) | extend NetworkRule1 = trim(' ', tostring(properties.networkRuleCollections.[0].id)) | extend NetworkRule2 = trim(' ', tostring(properties.networkRuleCollections.[0].id)) | extend NetworkRule3 = iff(NetworkRule1 == '', 'N/A', '') | extend NetworkRule4 = iff(NetworkRule1 contains 'subscription', 'Configured', '') | extend NetworkRuleClassic = strcat(NetworkRule3, NetworkRule4) | project Firewall = id, Tier, ProvisionedState, Policy, ApplicationRuleClassic, NetworkRuleClassic, Location = location, Tenant = tenantId",
                            "size": 4,
                            "showAnalytics": true,
                            "queryType": 1,
                            "resourceType": "microsoft.resourcegraph/resources",
                            "crossComponentResources": [
                              "value::selected"
                            ],
                            "visualization": "table",
                            "gridSettings": {
                              "formatters": [
                                {
                                  "columnMatch": "ProvisionedState",
                                  "formatter": 18,
                                  "formatOptions": {
                                    "thresholdsOptions": "colors",
                                    "thresholdsGrid": [
                                      {
                                        "operator": "==",
                                        "thresholdValue": "Running",
                                        "representation": "green",
                                        "text": "{0}{1}"
                                      },
                                      {
                                        "operator": "==",
                                        "thresholdValue": "Not Running",
                                        "representation": "grayBlue",
                                        "text": "{0}{1}"
                                      },
                                      {
                                        "operator": "Default",
                                        "thresholdValue": null,
                                        "text": "{0}{1}"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "columnMatch": "ApplicationRuleClassic",
                                  "formatter": 18,
                                  "formatOptions": {
                                    "thresholdsOptions": "colors",
                                    "thresholdsGrid": [
                                      {
                                        "operator": "==",
                                        "thresholdValue": "N/A",
                                        "representation": "gray",
                                        "text": "{0}{1}"
                                      },
                                      {
                                        "operator": "Default",
                                        "thresholdValue": null,
                                        "representation": "green",
                                        "text": "{0}{1}"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "columnMatch": "NetworkRuleClassic",
                                  "formatter": 18,
                                  "formatOptions": {
                                    "thresholdsOptions": "colors",
                                    "thresholdsGrid": [
                                      {
                                        "operator": "==",
                                        "thresholdValue": "N/A",
                                        "representation": "gray",
                                        "text": "{0}{1}"
                                      },
                                      {
                                        "operator": "Default",
                                        "thresholdValue": null,
                                        "representation": "green",
                                        "text": "{0}{1}"
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "type": 3,
                          "name": "EventsByFirewall",
                          "customWidth": "25",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | summarize Volume = count() by Resource, bin(TimeGenerated, {TimeRange:grain})",
                            "size": 0,
                            "showAnalytics": true,
                            "title": "Events by firewall ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no firewall events. Verify that logging has been enabled for Azure Firewall into selected workspace.",
                            "noDataMessageStyle": 4,
                            "timeContext": {
                              "durationMs": 14400000
                            },
                            "timeContextFromParameter": "TimeRange",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "visualization": "linechart",
                            "tileSettings": {
                              "titleContent": {
                                "columnMatch": "Resource",
                                "formatter": 1
                              },
                              "leftContent": {
                                "columnMatch": "amount",
                                "formatter": 12,
                                "formatOptions": {
                                  "palette": "auto"
                                },
                                "numberFormat": {
                                  "unit": 17,
                                  "options": {
                                    "maximumSignificantDigits": 3,
                                    "maximumFractionDigits": 2
                                  }
                                }
                              },
                              "showBorder": true
                            }
                          }
                        },
                        {
                          "type": 3,
                          "name": "EventCategoriesByTime",
                          "customWidth": "50",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' | extend Category = iif(OperationName in~ ('AzureFirewallIDSLog', 'AzureFirewallThreatIntelLog'), OperationName, Category) | summarize Volume = count() by Category, bin(TimeGenerated, {TimeRange:grain}) | sort by Volume desc",
                            "size": 0,
                            "showAnalytics": true,
                            "title": "Event categories ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no firewall events. Verify that logging has been enabled for Azure Firewall into selected workspace.",
                            "noDataMessageStyle": 4,
                            "timeContext": {
                              "durationMs": 14400000
                            },
                            "timeContextFromParameter": "TimeRange",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "visualization": "timechart"
                          }
                        },
                        {
                          "type": 3,
                          "name": "EventsByCategoryQuery",
                          "customWidth": "25",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' | extend Category = iif(OperationName in~ ('AzureFirewallIDSLog', 'AzureFirewallThreatIntelLog'), OperationName, Category) | summarize Volume = count() by Category | sort by Volume desc",
                            "size": 0,
                            "showAnalytics": true,
                            "title": "Events by category ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no firewall events. Verify that logging has been enabled for Azure Firewall into selected workspace.",
                            "noDataMessageStyle": 4,
                            "timeContext": {
                              "durationMs": 14400000
                            },
                            "timeContextFromParameter": "TimeRange",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "visualization": "piechart",
                            "tileSettings": {
                              "showBorder": false,
                              "titleContent": {
                                "columnMatch": "Category",
                                "formatter": 1
                              },
                              "leftContent": {
                                "columnMatch": "Volume",
                                "formatter": 12,
                                "formatOptions": {
                                  "palette": "auto"
                                },
                                "numberFormat": {
                                  "unit": 17,
                                  "options": {
                                    "maximumSignificantDigits": 3,
                                    "maximumFractionDigits": 2
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": 10,
                          "name": "FirewallHealthMetric",
                          "customWidth": "25",
                          "content": {
                            "chartId": "workbook76864ed5-dd34-42d0-ae35-f3db9f9e8f15",
                            "version": "MetricsItem/2.0",
                            "size": 1,
                            "chartType": 3,
                            "resourceType": "microsoft.network/azurefirewalls",
                            "metricScope": 0,
                            "resourceParameter": "Resource",
                            "resourceIds": [
                              "{Resource}"
                            ],
                            "timeContextFromParameter": "TimeRange",
                            "timeContext": {
                              "durationMs": 0
                            },
                            "metrics": [
                              {
                                "namespace": "microsoft.network/azurefirewalls",
                                "metric": "microsoft.network/azurefirewalls--FirewallHealth",
                                "aggregation": 4,
                                "splitBy": null,
                                "columnName": "Health"
                              }
                            ],
                            "title": "Health",
                            "showOpenInMe": true,
                            "showCreateAlertRule": true
                          }
                        },
                        {
                          "type": 10,
                          "customWidth": "25",
                          "name": "SNATPortUtilizationMetric",
                          "content": {
                            "chartId": "workbook76864ed5-dd34-42d0-ae35-f3db9f9e8f15",
                            "version": "MetricsItem/2.0",
                            "size": 1,
                            "chartType": 3,
                            "resourceType": "microsoft.network/azurefirewalls",
                            "metricScope": 0,
                            "resourceParameter": "Resource",
                            "resourceIds": [
                              "{Resource}"
                            ],
                            "timeContextFromParameter": "TimeRange",
                            "timeContext": {
                              "durationMs": 0
                            },
                            "metrics": [
                              {
                                "namespace": "microsoft.network/azurefirewalls",
                                "metric": "microsoft.network/azurefirewalls--SNATPortUtilization",
                                "aggregation": 4,
                                "splitBy": null
                              }
                            ],
                            "title": "SNAT port utilization",
                            "showOpenInMe": true,
                            "showCreateAlertRule": true
                          }
                        },
                        {
                          "type": 10,
                          "name": "ThroughputMetric",
                          "customWidth": "25",
                          "content": {
                            "chartId": "workbook76864ed5-dd34-42d0-ae35-f3db9f9e8f15",
                            "version": "MetricsItem/2.0",
                            "size": 1,
                            "chartType": 3,
                            "resourceType": "microsoft.network/azurefirewalls",
                            "metricScope": 0,
                            "resourceParameter": "Resource",
                            "resourceIds": [
                              "{Resource}"
                            ],
                            "timeContextFromParameter": "TimeRange",
                            "timeContext": {
                              "durationMs": 0
                            },
                            "metrics": [
                              {
                                "namespace": "microsoft.network/azurefirewalls",
                                "metric": "microsoft.network/azurefirewalls--Throughput",
                                "aggregation": 4,
                                "splitBy": null,
                                "columnName": "Throughput"
                              }
                            ],
                            "title": "Throughput",
                            "showOpenInMe": true,
                            "showCreateAlertRule": true
                          }
                        },
                        {
                          "type": 10,
                          "name": "DataProcessedMetric",
                          "customWidth": "25",
                          "content": {
                            "chartId": "workbook76864ed5-dd34-42d0-ae35-f3db9f9e8f15",
                            "version": "MetricsItem/2.0",
                            "size": 1,
                            "chartType": 3,
                            "resourceType": "microsoft.network/azurefirewalls",
                            "metricScope": 0,
                            "resourceParameter": "Resource",
                            "resourceIds": [
                              "{Resource}"
                            ],
                            "timeContextFromParameter": "TimeRange",
                            "timeContext": {
                              "durationMs": 0
                            },
                            "metrics": [
                              {
                                "namespace": "microsoft.network/azurefirewalls",
                                "metric": "microsoft.network/azurefirewalls--DataProcessed",
                                "aggregation": 4,
                                "splitBy": null,
                                "columnName": "Data processed"
                              }
                            ],
                            "title": "Data processed",
                            "showOpenInMe": true,
                            "showCreateAlertRule": true
                          }
                        },
                        {
                          "type": 10,
                          "name": "ApplicationRuleHitMetric",
                          "customWidth": "50",
                          "content": {
                            "chartId": "workbook76864ed5-dd34-42d0-ae35-f3db9f9e8f15",
                            "version": "MetricsItem/2.0",
                            "size": 1,
                            "chartType": 3,
                            "resourceType": "microsoft.network/azurefirewalls",
                            "metricScope": 0,
                            "resourceParameter": "Resource",
                            "resourceIds": [
                              "{Resource}"
                            ],
                            "timeContextFromParameter": "TimeRange",
                            "timeContext": {
                              "durationMs": 0
                            },
                            "metrics": [
                              {
                                "namespace": "microsoft.network/azurefirewalls",
                                "metric": "microsoft.network/azurefirewalls--ApplicationRuleHit",
                                "aggregation": 1,
                                "splitBy": null
                              }
                            ],
                            "title": "Application rule hit count",
                            "showOpenInMe": true,
                            "showCreateAlertRule": true
                          }
                        },
                        {
                          "type": 10,
                          "name": "NetworkRuleHitMetric",
                          "customWidth": "50",
                          "content": {
                            "chartId": "workbook76864ed5-dd34-42d0-ae35-f3db9f9e8f15",
                            "version": "MetricsItem/2.0",
                            "size": 1,
                            "chartType": 3,
                            "resourceType": "microsoft.network/azurefirewalls",
                            "metricScope": 0,
                            "resourceParameter": "Resource",
                            "resourceIds": [
                              "{Resource}"
                            ],
                            "timeContextFromParameter": "TimeRange",
                            "timeContext": {
                              "durationMs": 0
                            },
                            "metrics": [
                              {
                                "namespace": "microsoft.network/azurefirewalls",
                                "metric": "microsoft.network/azurefirewalls--NetworkRuleHit",
                                "aggregation": 1,
                                "splitBy": null
                              }
                            ],
                            "title": "Network rule hit count",
                            "showOpenInMe": true,
                            "showCreateAlertRule": true
                          }
                        }
                      ]
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "AFOverview"
                    }
                  },
                  {
                    "type": 12,
                    "name": "AFAppRuleGroup",
                    "content": {
                      "version": "NotebookGroup/1.0",
                      "groupType": "editable",
                      "items": [
                        {
                          "type": 11,
                          "name": "AppRuleLinks",
                          "content": {
                            "version": "LinkItem/1.0",
                            "style": "tabs",
                            "links": [
                              {
                                "id": "46f500b8-06d6-4b5d-8e2b-280b218124d6",
                                "cellValue": "selectedAppRuleTab",
                                "linkTarget": "parameter",
                                "linkLabel": "Search",
                                "subTarget": "Search",
                                "style": "link"
                              },
                              {
                                "id": "01e8652a-e2ed-4154-ae62-0db811131337",
                                "cellValue": "selectedAppRuleTab",
                                "linkTarget": "parameter",
                                "linkLabel": "Statistics",
                                "subTarget": "Statistics",
                                "style": "link"
                              },
                              {
                                "id": "4e1e983f-df0e-4a2b-84b8-f7c42a53f4ad",
                                "cellValue": "selectedAppRuleTab",
                                "linkTarget": "parameter",
                                "linkLabel": "Web categories",
                                "subTarget": "WebCategories",
                                "style": "link"
                              }
                            ]
                          }
                        },
                        {
                          "type": 3,
                          "name": "AFAppSelectedRuleQuery",
                          "customWidth": "40",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and Category == 'AzureFirewallApplicationRule' and OperationName == 'AzureFirewallApplicationRuleLog' | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | extend Protocol = extract(@'^([\\S]+)', 1, msg_s), Source = extract(@'request from ([^ :]+)', 1, msg_s), SourcePort = extract(@'request from ([^ :]+):([0-9]+)', 2, msg_s), Destination = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+)', 3, msg_s), DestinationPort = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+)', 4, msg_s), Url = trim_end(@'\\.', extract(@'Url: ([\\S]+)', 1, msg_s)), Action = extract(@'Action: ([\\w]+)', 1, msg_s), Policy = trim_end(@'\\.', extract(@'Policy: ([\\S]+)', 1, msg_s)), RuleCollectionGroup = trim_end(@'\\.', extract(@'Rule Collection Group: ([\\S]+)', 1, msg_s)), RuleCollection = trim_end(@'\\.', extract(@'Rule Collection: ([\\S]+)', 1, msg_s)), Rule = trim_end(@'\\.', extract(@'Rule: ([\\S]+)', 1, msg_s)), WebCategory = trim_end(@'\\.', extract(@'Web Category: ([\\S]+)', 1, msg_s)), Reason = extract(@'Reason: ([^\\.]+)(\\.)', 1, msg_s), Firewall = Resource | extend Rule = iif(isempty(Rule), 'No rule matched', Rule) | summarize Hits = count(), LastLog = datetime_diff('second', now(), max(TimeGenerated)) by Rule | project Hits, Rule, LastLog | sort by Hits desc",
                            "size": 1,
                            "showAnalytics": true,
                            "showExportToExcel": true,
                            "title": "Select application rule ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no matching events.",
                            "noDataMessageStyle": 2,
                            "timeContext": {
                              "durationMs": 14400000
                            },
                            "timeContextFromParameter": "TimeRange",
                            "exportMultipleValues": true,
                            "exportedParameters": [
                              {
                                "fieldName": "Rule",
                                "parameterName": "SelectedRule",
                                "parameterType": 1,
                                "quote": "",
                                "delimiter": ","
                              }
                            ],
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "gridSettings": {
                              "formatters": [
                                {
                                  "columnMatch": "Hits",
                                  "formatter": 8,
                                  "formatOptions": {
                                    "palette": "whiteBlack"
                                  },
                                  "numberFormat": {
                                    "unit": 17,
                                    "options": {
                                      "style": "decimal",
                                      "useGrouping": false,
                                      "maximumSignificantDigits": 4
                                    }
                                  }
                                },
                                {
                                  "columnMatch": "LastLog",
                                  "formatter": 8,
                                  "formatOptions": {
                                    "palette": "greenRed"
                                  },
                                  "numberFormat": {
                                    "unit": 24,
                                    "options": {
                                      "style": "decimal",
                                      "useGrouping": false,
                                      "minimumIntegerDigits": 2,
                                      "minimumFractionDigits": 3,
                                      "maximumFractionDigits": 3,
                                      "minimumSignificantDigits": 3,
                                      "maximumSignificantDigits": 3
                                    }
                                  }
                                }
                              ],
                              "filter": true
                            },
                            "sortBy": []
                          }
                        },
                        {
                          "type": 3,
                          "name": "AFAppSelectedSourceQuery",
                          "customWidth": "30",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and Category == 'AzureFirewallApplicationRule' and OperationName == 'AzureFirewallApplicationRuleLog' | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | extend Protocol = extract(@'^([\\S]+)', 1, msg_s), Source = extract(@'request from ([^ :]+)', 1, msg_s), SourcePort = extract(@'request from ([^ :]+):([0-9]+)', 2, msg_s), Destination = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+)', 3, msg_s), DestinationPort = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+)', 4, msg_s), Url = trim_end(@'\\.', extract(@'Url: ([\\S]+)', 1, msg_s)), Action = extract(@'Action: ([\\w]+)', 1, msg_s), Policy = trim_end(@'\\.', extract(@'Policy: ([\\S]+)', 1, msg_s)), RuleCollectionGroup = trim_end(@'\\.', extract(@'Rule Collection Group: ([\\S]+)', 1, msg_s)), RuleCollection = trim_end(@'\\.', extract(@'Rule Collection: ([\\S]+)', 1, msg_s)), Rule = trim_end(@'\\.', extract(@'Rule: ([\\S]+)', 1, msg_s)), WebCategory = trim_end(@'\\.', extract(@'Web Category: ([\\S]+)', 1, msg_s)), Reason = extract(@'Reason: ([^\\.]+)(\\.)', 1, msg_s), Firewall = Resource | join kind=leftouter (AzureNetworkAnalytics_CL | where SubType_s == 'Topology' and ResourceType in ('NetworkInterface', 'ApplicationGateway', 'VirtualNetworkGateway', 'LoadBalancer') | extend RGandName = split(iif(ResourceType == 'NetworkInterface' and isnotnull(VirtualMachine_s), VirtualMachine_s, Name_s), '/') | extend IPResourceId = strcat('/subscriptions/', Subscription_g, '/resourceGroups/', RGandName[0], '/providers/', iif(ResourceType == 'NetworkInterface' and isnotnull(VirtualMachine_s), 'Microsoft.Compute/virtualMachines/', strcat('Microsoft.Network/', ResourceType, 's/')), RGandName[1]) | extend IP = pack_array(PrivateFrontendIPs_s, PublicFrontendIPs_s, VIPAddress_s, PrivateIPAddresses_s, PublicIPAddresses_s, PublicIPs_s) | mv-expand IP | where isnotempty(IP) | summarize by IPResourceId, tostring(IP)) on $left.Source == $right.IP | extend Rule = iif(isempty(Rule), 'No rule matched', Rule) | where isempty('{SelectedRule}') or ('{SelectedRule}' !has ',' and Rule =~ '{SelectedRule}') or ('{SelectedRule}' has ',' and Rule in~ (split('{SelectedRule}', ','))) | summarize Hits = count() by Source, IPResourceId | project Hits, Source, Resource = IPResourceId | sort by Hits desc",
                            "size": 1,
                            "showAnalytics": true,
                            "showExportToExcel": true,
                            "title": "Select source ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no matching events.",
                            "noDataMessageStyle": 2,
                            "timeContext": {
                              "durationMs": 14400000
                            },
                            "timeContextFromParameter": "TimeRange",
                            "exportMultipleValues": true,
                            "exportedParameters": [
                              {
                                "fieldName": "Source",
                                "parameterName": "SelectedSource",
                                "parameterType": 1,
                                "quote": "",
                                "delimiter": ","
                              }
                            ],
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "gridSettings": {
                              "formatters": [
                                {
                                  "columnMatch": "Hits",
                                  "formatter": 8,
                                  "formatOptions": {
                                    "palette": "whiteBlack"
                                  },
                                  "numberFormat": {
                                    "unit": 17,
                                    "options": {
                                      "style": "decimal",
                                      "useGrouping": false,
                                      "maximumSignificantDigits": 4
                                    }
                                  }
                                }
                              ],
                              "rowLimit": 10000,
                              "filter": true
                            }
                          }
                        },
                        {
                          "type": 3,
                          "name": "AFAppSelectedDestinationQuery",
                          "customWidth": "30",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and Category == 'AzureFirewallApplicationRule' and OperationName == 'AzureFirewallApplicationRuleLog' | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | extend Protocol = extract(@'^([\\S]+)', 1, msg_s), Source = extract(@'request from ([^ :]+)', 1, msg_s), SourcePort = extract(@'request from ([^ :]+):([0-9]+)', 2, msg_s), Destination = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+)', 3, msg_s), DestinationPort = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+)', 4, msg_s), Url = trim_end(@'\\.', extract(@'Url: ([\\S]+)', 1, msg_s)), Action = extract(@'Action: ([\\w]+)', 1, msg_s), Policy = trim_end(@'\\.', extract(@'Policy: ([\\S]+)', 1, msg_s)), RuleCollectionGroup = trim_end(@'\\.', extract(@'Rule Collection Group: ([\\S]+)', 1, msg_s)), RuleCollection = trim_end(@'\\.', extract(@'Rule Collection: ([\\S]+)', 1, msg_s)), Rule = trim_end(@'\\.', extract(@'Rule: ([\\S]+)', 1, msg_s)), WebCategory = trim_end(@'\\.', extract(@'Web Category: ([\\S]+)', 1, msg_s)), Reason = extract(@'Reason: ([^\\.]+)(\\.)', 1, msg_s), Firewall = Resource | extend Rule = iif(isempty(Rule), 'No rule matched', Rule) | where isempty('{SelectedRule}') or ('{SelectedRule}' !has ',' and Rule =~ '{SelectedRule}') or ('{SelectedRule}' has ',' and Rule in~ (split('{SelectedRule}', ','))) | where isempty('{SelectedSource}') or ('{SelectedSource}' !has ',' and Source =~ '{SelectedSource}') or ('{SelectedSource}' has ',' and Source in~ (split('{SelectedSource}', ','))) | summarize Hits = count() by Destination | project Hits, Destination | sort by Hits desc",
                            "size": 1,
                            "showAnalytics": true,
                            "showExportToExcel": true,
                            "title": "Select destination ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no matching events.",
                            "noDataMessageStyle": 2,
                            "timeContext": {
                              "durationMs": 14400000
                            },
                            "timeContextFromParameter": "TimeRange",
                            "exportMultipleValues": true,
                            "exportedParameters": [
                              {
                                "fieldName": "Destination",
                                "parameterName": "SelectedDestination",
                                "parameterType": 1,
                                "quote": "",
                                "delimiter": ","
                              }
                            ],
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "gridSettings": {
                              "formatters": [
                                {
                                  "columnMatch": "Hits",
                                  "formatter": 8,
                                  "formatOptions": {
                                    "palette": "whiteBlack"
                                  },
                                  "numberFormat": {
                                    "unit": 17,
                                    "options": {
                                      "style": "decimal",
                                      "useGrouping": false,
                                      "maximumSignificantDigits": 4
                                    }
                                  }
                                }
                              ],
                              "rowLimit": 10000,
                              "filter": true
                            }
                          }
                        },
                        {
                          "type": 9,
                          "name": "AppRuleLogSearchParameters",
                          "content": {
                            "version": "KqlParameterItem/1.0",
                            "parameters": [
                              {
                                "id": "74974f5f-f065-4302-a70f-d573f2b08348",
                                "version": "KqlParameterItem/1.0",
                                "name": "AFAction",
                                "label": "Action",
                                "type": 10,
                                "isRequired": true,
                                "value": "All",
                                "typeSettings": {
                                  "additionalResourceOptions": [],
                                  "showDefault": false
                                },
                                "jsonData": "[\"All\",\"Allow\",\"Deny\"]",
                                "timeContext": {
                                  "durationMs": 0
                                },
                                "timeContextFromParameter": "TimeRange"
                              },
                              {
                                "id": "bb7368a1-920d-4adf-99b4-4ed003a2a871",
                                "version": "KqlParameterItem/1.0",
                                "name": "AFSourcePort",
                                "label": "SourcePort",
                                "type": 2,
                                "isRequired": true,
                                "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and Category == 'AzureFirewallApplicationRule' and OperationName == 'AzureFirewallApplicationRuleLog' and msg_s matches regex @'request from ([^ :]+):([0-9]+)' | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | extend SourcePort = extract(@'request from ([^ :]+):([0-9]+)', 2, msg_s) | summarize by SourcePort | sort by SourcePort asc",
                                "typeSettings": {
                                  "additionalResourceOptions": [
                                    "value::all"
                                  ],
                                  "selectAllValue": "All",
                                  "showDefault": false
                                },
                                "timeContext": {
                                  "durationMs": 14400000
                                },
                                "timeContextFromParameter": "TimeRange",
                                "defaultValue": "value::all",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{Workspaces}"
                                ]
                              },
                              {
                                "id": "9d4641ac-17c5-4b33-b132-87a7a990541d",
                                "version": "KqlParameterItem/1.0",
                                "name": "AFDestinationPort",
                                "label": "DestinationPort",
                                "type": 2,
                                "isRequired": true,
                                "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and Category == 'AzureFirewallApplicationRule' and OperationName == 'AzureFirewallApplicationRuleLog' and msg_s matches regex @'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+)' | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | extend DestinationPort = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+)', 4, msg_s) | summarize by DestinationPort | sort by DestinationPort asc",
                                "typeSettings": {
                                  "additionalResourceOptions": [
                                    "value::all"
                                  ],
                                  "selectAllValue": "All",
                                  "showDefault": false
                                },
                                "timeContext": {
                                  "durationMs": 14400000
                                },
                                "timeContextFromParameter": "TimeRange",
                                "defaultValue": "value::all",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{Workspaces}"
                                ]
                              },
                              {
                                "id": "00b0f8bf-b9e0-40bb-ae57-6813bf5a1612",
                                "version": "KqlParameterItem/1.0",
                                "name": "AFProtocol",
                                "label": "Protocol",
                                "type": 2,
                                "isRequired": true,
                                "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and Category == 'AzureFirewallApplicationRule' and OperationName == 'AzureFirewallApplicationRuleLog' | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | extend Protocol = extract(@'^([\\S]+)', 1, msg_s) | summarize by Protocol | sort by Protocol asc",
                                "typeSettings": {
                                  "additionalResourceOptions": [
                                    "value::all"
                                  ],
                                  "selectAllValue": "All",
                                  "showDefault": false
                                },
                                "timeContext": {
                                  "durationMs": 14400000
                                },
                                "timeContextFromParameter": "TimeRange",
                                "defaultValue": "value::all",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{Workspaces}"
                                ]
                              }
                            ],
                            "style": "pills",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces"
                          },
                          "conditionalVisibility": {
                            "parameterName": "selectedAppRuleTab",
                            "comparison": "isEqualTo",
                            "value": "Search"
                          }
                        },
                        {
                          "type": 3,
                          "name": "AppRuleSearchQuery",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and Category == 'AzureFirewallApplicationRule' and OperationName == 'AzureFirewallApplicationRuleLog' | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | extend Protocol = extract(@'^([\\S]+)', 1, msg_s), Source = extract(@'request from ([^ :]+)', 1, msg_s), SourcePort = extract(@'request from ([^ :]+):([0-9]+)', 2, msg_s), Destination = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+)', 3, msg_s), DestinationPort = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+)', 4, msg_s), Url = trim_end(@'\\.', extract(@'Url: ([\\S]+)', 1, msg_s)), Action = extract(@'Action: ([\\w]+)', 1, msg_s), Policy = trim_end(@'\\.', extract(@'Policy: ([\\S]+)', 1, msg_s)), RuleCollectionGroup = trim_end(@'\\.', extract(@'Rule Collection Group: ([\\S]+)', 1, msg_s)), RuleCollection = trim_end(@'\\.', extract(@'Rule Collection: ([\\S]+)', 1, msg_s)), Rule = trim_end(@'\\.', extract(@'Rule: ([\\S]+)', 1, msg_s)), WebCategory = trim_end(@'\\.', extract(@'Web Category: ([\\S]+)', 1, msg_s)), Reason = extract(@'Reason: ([^\\.]+)(\\.)', 1, msg_s), Firewall = Resource | extend Rule = iif(isempty(Rule), 'No rule matched', Rule) | where isempty('{SelectedRule}') or ('{SelectedRule}' !has ',' and Rule =~ '{SelectedRule}') or ('{SelectedRule}' has ',' and Rule in~ (split('{SelectedRule}', ','))) | where isempty('{SelectedSource}') or ('{SelectedSource}' !has ',' and Source =~ '{SelectedSource}') or ('{SelectedSource}' has ',' and Source in~ (split('{SelectedSource}', ','))) | where isempty('{SelectedDestination}') or ('{SelectedDestination}' !has ',' and Destination =~ '{SelectedDestination}') or ('{SelectedDestination}' has ',' and Destination in~ (split('{SelectedDestination}', ','))) | where '{AFAction:label}' == 'All' or Action == '{AFAction:label}' | where '{AFSourcePort:label}' == 'All' or SourcePort == '{AFSourcePort:label}' | where '{AFDestinationPort:label}' == 'All' or DestinationPort == '{AFDestinationPort:label}' | where '{AFProtocol:label}' == 'All' or Protocol == '{AFProtocol:label}' | summarize by TimeGenerated, Firewall, Rule, Action, Source, SourcePort, Destination, DestinationPort, Protocol, Reason, RuleCollection, RuleCollectionGroup, Policy, WebCategory, LogMessage = msg_s | sort by TimeGenerated desc",
                            "size": 2,
                            "showAnalytics": true,
                            "showExportToExcel": true,
                            "title": "Firewall application rule log ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no matching events.",
                            "noDataMessageStyle": 2,
                            "timeContext": {
                              "durationMs": 14400000
                            },
                            "timeContextFromParameter": "TimeRange",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "gridSettings": {
                              "rowLimit": 10000,
                              "filter": true
                            }
                          },
                          "conditionalVisibility": {
                            "parameterName": "selectedAppRuleTab",
                            "comparison": "isEqualTo",
                            "value": "Search"
                          }
                        },
                        {
                          "type": 3,
                          "name": "AFAppActionPieQuery",
                          "customWidth": "25",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and Category == 'AzureFirewallApplicationRule' and OperationName == 'AzureFirewallApplicationRuleLog' | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | extend Protocol = extract(@'^([\\S]+)', 1, msg_s), Source = extract(@'request from ([^ :]+)', 1, msg_s), SourcePort = extract(@'request from ([^ :]+):([0-9]+)', 2, msg_s), Destination = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+)', 3, msg_s), DestinationPort = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+)', 4, msg_s), Url = trim_end(@'\\.', extract(@'Url: ([\\S]+)', 1, msg_s)), Action = extract(@'Action: ([\\w]+)', 1, msg_s), Policy = trim_end(@'\\.', extract(@'Policy: ([\\S]+)', 1, msg_s)), RuleCollectionGroup = trim_end(@'\\.', extract(@'Rule Collection Group: ([\\S]+)', 1, msg_s)), RuleCollection = trim_end(@'\\.', extract(@'Rule Collection: ([\\S]+)', 1, msg_s)), Rule = trim_end(@'\\.', extract(@'Rule: ([\\S]+)', 1, msg_s)), WebCategory = trim_end(@'\\.', extract(@'Web Category: ([\\S]+)', 1, msg_s)), Reason = extract(@'Reason: ([^\\.]+)(\\.)', 1, msg_s), Firewall = Resource | where isempty('{SelectedSource}') or ('{SelectedSource}' !has ',' and Source =~ '{SelectedSource}') or ('{SelectedSource}' has ',' and Source in~ (split('{SelectedSource}', ','))) | where isempty('{SelectedDestination}') or ('{SelectedDestination}' !has ',' and Destination =~ '{SelectedDestination}') or ('{SelectedDestination}' has ',' and Destination in~ (split('{SelectedDestination}', ','))) | extend Rule = iif(isempty(Rule), 'No rule matched', Rule) | where isempty('{SelectedRule}') or ('{SelectedRule}' !has ',' and Rule =~ '{SelectedRule}') or ('{SelectedRule}' has ',' and Rule in~ (split('{SelectedRule}', ','))) | summarize Hits = count() by Action | project Hits, Action | sort by Hits desc",
                            "size": 0,
                            "showAnalytics": true,
                            "title": "Hits by action ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no matching events.",
                            "noDataMessageStyle": 2,
                            "timeContext": {
                              "durationMs": 0
                            },
                            "timeContextFromParameter": "TimeRange",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "visualization": "piechart"
                          },
                          "conditionalVisibility": {
                            "parameterName": "selectedAppRuleTab",
                            "comparison": "isEqualTo",
                            "value": "Statistics"
                          }
                        },
                        {
                          "type": 3,
                          "name": "AFAppProtocolPieQuery",
                          "customWidth": "25",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and Category == 'AzureFirewallApplicationRule' and OperationName == 'AzureFirewallApplicationRuleLog' | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | extend Protocol = extract(@'^([\\S]+)', 1, msg_s), Source = extract(@'request from ([^ :]+)', 1, msg_s), SourcePort = extract(@'request from ([^ :]+):([0-9]+)', 2, msg_s), Destination = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+)', 3, msg_s), DestinationPort = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+)', 4, msg_s), Url = trim_end(@'\\.', extract(@'Url: ([\\S]+)', 1, msg_s)), Action = extract(@'Action: ([\\w]+)', 1, msg_s), Policy = trim_end(@'\\.', extract(@'Policy: ([\\S]+)', 1, msg_s)), RuleCollectionGroup = trim_end(@'\\.', extract(@'Rule Collection Group: ([\\S]+)', 1, msg_s)), RuleCollection = trim_end(@'\\.', extract(@'Rule Collection: ([\\S]+)', 1, msg_s)), Rule = trim_end(@'\\.', extract(@'Rule: ([\\S]+)', 1, msg_s)), WebCategory = trim_end(@'\\.', extract(@'Web Category: ([\\S]+)', 1, msg_s)), Reason = extract(@'Reason: ([^\\.]+)(\\.)', 1, msg_s), Firewall = Resource | where isempty('{SelectedSource}') or ('{SelectedSource}' !has ',' and Source =~ '{SelectedSource}') or ('{SelectedSource}' has ',' and Source in~ (split('{SelectedSource}', ','))) | where isempty('{SelectedDestination}') or ('{SelectedDestination}' !has ',' and Destination =~ '{SelectedDestination}') or ('{SelectedDestination}' has ',' and Destination in~ (split('{SelectedDestination}', ','))) | extend Rule = iif(isempty(Rule), 'No rule matched', Rule) | where isempty('{SelectedRule}') or ('{SelectedRule}' !has ',' and Rule =~ '{SelectedRule}') or ('{SelectedRule}' has ',' and Rule in~ (split('{SelectedRule}', ','))) | summarize Hits = count() by Protocol | project Hits, Protocol | sort by Hits desc",
                            "size": 0,
                            "showAnalytics": true,
                            "title": "Hits by protocol ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no matching events.",
                            "noDataMessageStyle": 2,
                            "timeContext": {
                              "durationMs": 0
                            },
                            "timeContextFromParameter": "TimeRange",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "visualization": "piechart"
                          },
                          "conditionalVisibility": {
                            "parameterName": "selectedAppRuleTab",
                            "comparison": "isEqualTo",
                            "value": "Statistics"
                          }
                        },
                        {
                          "type": 3,
                          "name": "AFAppDestPortPieQuery",
                          "customWidth": "25",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and Category == 'AzureFirewallApplicationRule' and OperationName == 'AzureFirewallApplicationRuleLog' | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | extend Protocol = extract(@'^([\\S]+)', 1, msg_s), Source = extract(@'request from ([^ :]+)', 1, msg_s), SourcePort = extract(@'request from ([^ :]+):([0-9]+)', 2, msg_s), Destination = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+)', 3, msg_s), DestinationPort = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+)', 4, msg_s), Url = trim_end(@'\\.', extract(@'Url: ([\\S]+)', 1, msg_s)), Action = extract(@'Action: ([\\w]+)', 1, msg_s), Policy = trim_end(@'\\.', extract(@'Policy: ([\\S]+)', 1, msg_s)), RuleCollectionGroup = trim_end(@'\\.', extract(@'Rule Collection Group: ([\\S]+)', 1, msg_s)), RuleCollection = trim_end(@'\\.', extract(@'Rule Collection: ([\\S]+)', 1, msg_s)), Rule = trim_end(@'\\.', extract(@'Rule: ([\\S]+)', 1, msg_s)), WebCategory = trim_end(@'\\.', extract(@'Web Category: ([\\S]+)', 1, msg_s)), Reason = extract(@'Reason: ([^\\.]+)(\\.)', 1, msg_s), Firewall = Resource | where isempty('{SelectedSource}') or ('{SelectedSource}' !has ',' and Source =~ '{SelectedSource}') or ('{SelectedSource}' has ',' and Source in~ (split('{SelectedSource}', ','))) | where isempty('{SelectedDestination}') or ('{SelectedDestination}' !has ',' and Destination =~ '{SelectedDestination}') or ('{SelectedDestination}' has ',' and Destination in~ (split('{SelectedDestination}', ','))) | extend Rule = iif(isempty(Rule), 'No rule matched', Rule) | where isempty('{SelectedRule}') or ('{SelectedRule}' !has ',' and Rule =~ '{SelectedRule}') or ('{SelectedRule}' has ',' and Rule in~ (split('{SelectedRule}', ','))) | summarize Hits = count() by DestinationPort | project Hits, Port = DestinationPort | sort by Hits desc",
                            "size": 0,
                            "showAnalytics": true,
                            "title": "Hits by destination port ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no matching events.",
                            "noDataMessageStyle": 2,
                            "timeContext": {
                              "durationMs": 0
                            },
                            "timeContextFromParameter": "TimeRange",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "visualization": "piechart"
                          },
                          "conditionalVisibility": {
                            "parameterName": "selectedAppRuleTab",
                            "comparison": "isEqualTo",
                            "value": "Statistics"
                          }
                        },
                        {
                          "type": 3,
                          "name": "AFAppRulePieQuery",
                          "customWidth": "25",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and Category == 'AzureFirewallApplicationRule' and OperationName == 'AzureFirewallApplicationRuleLog' | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | extend Protocol = extract(@'^([\\S]+)', 1, msg_s), Source = extract(@'request from ([^ :]+)', 1, msg_s), SourcePort = extract(@'request from ([^ :]+):([0-9]+)', 2, msg_s), Destination = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+)', 3, msg_s), DestinationPort = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+)', 4, msg_s), Url = trim_end(@'\\.', extract(@'Url: ([\\S]+)', 1, msg_s)), Action = extract(@'Action: ([\\w]+)', 1, msg_s), Policy = trim_end(@'\\.', extract(@'Policy: ([\\S]+)', 1, msg_s)), RuleCollectionGroup = trim_end(@'\\.', extract(@'Rule Collection Group: ([\\S]+)', 1, msg_s)), RuleCollection = trim_end(@'\\.', extract(@'Rule Collection: ([\\S]+)', 1, msg_s)), Rule = trim_end(@'\\.', extract(@'Rule: ([\\S]+)', 1, msg_s)), WebCategory = trim_end(@'\\.', extract(@'Web Category: ([\\S]+)', 1, msg_s)), Reason = extract(@'Reason: ([^\\.]+)(\\.)', 1, msg_s), Firewall = Resource | where isempty('{SelectedSource}') or ('{SelectedSource}' !has ',' and Source =~ '{SelectedSource}') or ('{SelectedSource}' has ',' and Source in~ (split('{SelectedSource}', ','))) | where isempty('{SelectedDestination}') or ('{SelectedDestination}' !has ',' and Destination =~ '{SelectedDestination}') or ('{SelectedDestination}' has ',' and Destination in~ (split('{SelectedDestination}', ','))) | extend Rule = iif(isempty(Rule), 'No rule matched', Rule) | where isempty('{SelectedRule}') or ('{SelectedRule}' !has ',' and Rule =~ '{SelectedRule}') or ('{SelectedRule}' has ',' and Rule in~ (split('{SelectedRule}', ','))) | summarize Hits = count() by Rule | project Hits, Rule | sort by Hits desc",
                            "size": 0,
                            "showAnalytics": true,
                            "title": "Hits by rule ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no matching events.",
                            "noDataMessageStyle": 2,
                            "timeContext": {
                              "durationMs": 0
                            },
                            "timeContextFromParameter": "TimeRange",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "visualization": "piechart"
                          },
                          "conditionalVisibility": {
                            "parameterName": "selectedAppRuleTab",
                            "comparison": "isEqualTo",
                            "value": "Statistics"
                          }
                        },
                        {
                          "type": 3,
                          "name": "AFAppDeniedDestPortQuery",
                          "customWidth": "50",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and Category == 'AzureFirewallApplicationRule' and OperationName == 'AzureFirewallApplicationRuleLog' | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | extend Protocol = extract(@'^([\\S]+)', 1, msg_s), Source = extract(@'request from ([^ :]+)', 1, msg_s), SourcePort = extract(@'request from ([^ :]+):([0-9]+)', 2, msg_s), Destination = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+)', 3, msg_s), DestinationPort = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+)', 4, msg_s), Url = trim_end(@'\\.', extract(@'Url: ([\\S]+)', 1, msg_s)), Action = extract(@'Action: ([\\w]+)', 1, msg_s), Policy = trim_end(@'\\.', extract(@'Policy: ([\\S]+)', 1, msg_s)), RuleCollectionGroup = trim_end(@'\\.', extract(@'Rule Collection Group: ([\\S]+)', 1, msg_s)), RuleCollection = trim_end(@'\\.', extract(@'Rule Collection: ([\\S]+)', 1, msg_s)), Rule = trim_end(@'\\.', extract(@'Rule: ([\\S]+)', 1, msg_s)), WebCategory = trim_end(@'\\.', extract(@'Web Category: ([\\S]+)', 1, msg_s)), Reason = extract(@'Reason: ([^\\.]+)(\\.)', 1, msg_s), Firewall = Resource | where Action == 'Deny' | where isempty('{SelectedSource}') or ('{SelectedSource}' !has ',' and Source =~ '{SelectedSource}') or ('{SelectedSource}' has ',' and Source in~ (split('{SelectedSource}', ','))) | where isempty('{SelectedDestination}') or ('{SelectedDestination}' !has ',' and Destination =~ '{SelectedDestination}') or ('{SelectedDestination}' has ',' and Destination in~ (split('{SelectedDestination}', ','))) | extend Rule = iif(isempty(Rule), 'No rule matched', Rule) | where isempty('{SelectedRule}') or ('{SelectedRule}' !has ',' and Rule =~ '{SelectedRule}') or ('{SelectedRule}' has ',' and Rule in~ (split('{SelectedRule}', ','))) | extend Destination = iif(isempty(Destination), Reason, Destination) | summarize Hits = count() by Firewall, Rule, Destination, DestinationPort | project Hits, Destination, Port = DestinationPort, Rule, Firewall | sort by Hits desc",
                            "size": 1,
                            "showAnalytics": true,
                            "title": "Denied hits by firewall, rule, destination and port ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no matching events.",
                            "noDataMessageStyle": 2,
                            "timeContext": {
                              "durationMs": 14400000
                            },
                            "timeContextFromParameter": "TimeRange",
                            "showExportToExcel": true,
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "visualization": "table",
                            "gridSettings": {
                              "formatters": [
                                {
                                  "columnMatch": "Hits",
                                  "formatter": 8,
                                  "formatOptions": {
                                    "palette": "whiteBlack"
                                  },
                                  "numberFormat": {
                                    "unit": 17,
                                    "options": {
                                      "style": "decimal",
                                      "useGrouping": false,
                                      "maximumSignificantDigits": 4
                                    }
                                  }
                                }
                              ]
                            },
                            "sortBy": []
                          },
                          "conditionalVisibility": {
                            "parameterName": "selectedAppRuleTab",
                            "comparison": "isEqualTo",
                            "value": "Statistics"
                          }
                        },
                        {
                          "type": 3,
                          "name": "AFAppAllowedDestPortQuery",
                          "customWidth": "50",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and Category == 'AzureFirewallApplicationRule' and OperationName == 'AzureFirewallApplicationRuleLog' | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | extend Protocol = extract(@'^([\\S]+)', 1, msg_s), Source = extract(@'request from ([^ :]+)', 1, msg_s), SourcePort = extract(@'request from ([^ :]+):([0-9]+)', 2, msg_s), Destination = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+)', 3, msg_s), DestinationPort = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+)', 4, msg_s), Url = trim_end(@'\\.', extract(@'Url: ([\\S]+)', 1, msg_s)), Action = extract(@'Action: ([\\w]+)', 1, msg_s), Policy = trim_end(@'\\.', extract(@'Policy: ([\\S]+)', 1, msg_s)), RuleCollectionGroup = trim_end(@'\\.', extract(@'Rule Collection Group: ([\\S]+)', 1, msg_s)), RuleCollection = trim_end(@'\\.', extract(@'Rule Collection: ([\\S]+)', 1, msg_s)), Rule = trim_end(@'\\.', extract(@'Rule: ([\\S]+)', 1, msg_s)), WebCategory = trim_end(@'\\.', extract(@'Web Category: ([\\S]+)', 1, msg_s)), Reason = extract(@'Reason: ([^\\.]+)(\\.)', 1, msg_s), Firewall = Resource | where Action == 'Allow' | where isempty('{SelectedSource}') or ('{SelectedSource}' !has ',' and Source =~ '{SelectedSource}') or ('{SelectedSource}' has ',' and Source in~ (split('{SelectedSource}', ','))) | where isempty('{SelectedDestination}') or ('{SelectedDestination}' !has ',' and Destination =~ '{SelectedDestination}') or ('{SelectedDestination}' has ',' and Destination in~ (split('{SelectedDestination}', ','))) | extend Rule = iif(isempty(Rule), 'No rule matched', Rule) | where isempty('{SelectedRule}') or ('{SelectedRule}' !has ',' and Rule =~ '{SelectedRule}') or ('{SelectedRule}' has ',' and Rule in~ (split('{SelectedRule}', ','))) | extend Destination = iif(isempty(Destination), Reason, Destination) | summarize Hits = count() by Firewall, Rule, Destination, DestinationPort | project Hits, Destination, Port = DestinationPort, Rule, Firewall | sort by Hits desc",
                            "size": 1,
                            "showAnalytics": true,
                            "title": "Allowed hits by firewall, rule, destination and port ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no matching events.",
                            "noDataMessageStyle": 2,
                            "timeContext": {
                              "durationMs": 14400000
                            },
                            "timeContextFromParameter": "TimeRange",
                            "showExportToExcel": true,
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "visualization": "table",
                            "gridSettings": {
                              "formatters": [
                                {
                                  "columnMatch": "Hits",
                                  "formatter": 8,
                                  "formatOptions": {
                                    "palette": "whiteBlack"
                                  },
                                  "numberFormat": {
                                    "unit": 17,
                                    "options": {
                                      "style": "decimal",
                                      "useGrouping": false,
                                      "maximumSignificantDigits": 4
                                    }
                                  }
                                }
                              ]
                            },
                            "sortBy": []
                          },
                          "conditionalVisibility": {
                            "parameterName": "selectedAppRuleTab",
                            "comparison": "isEqualTo",
                            "value": "Statistics"
                          }
                        },
                        {
                          "type": 3,
                          "name": "AFAppDeniedDestChartQuery",
                          "customWidth": "50",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and Category == 'AzureFirewallApplicationRule' and OperationName == 'AzureFirewallApplicationRuleLog' | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | extend Protocol = extract(@'^([\\S]+)', 1, msg_s), Source = extract(@'request from ([^ :]+)', 1, msg_s), SourcePort = extract(@'request from ([^ :]+):([0-9]+)', 2, msg_s), Destination = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+)', 3, msg_s), DestinationPort = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+)', 4, msg_s), Url = trim_end(@'\\.', extract(@'Url: ([\\S]+)', 1, msg_s)), Action = extract(@'Action: ([\\w]+)', 1, msg_s), Policy = trim_end(@'\\.', extract(@'Policy: ([\\S]+)', 1, msg_s)), RuleCollectionGroup = trim_end(@'\\.', extract(@'Rule Collection Group: ([\\S]+)', 1, msg_s)), RuleCollection = trim_end(@'\\.', extract(@'Rule Collection: ([\\S]+)', 1, msg_s)), Rule = trim_end(@'\\.', extract(@'Rule: ([\\S]+)', 1, msg_s)), WebCategory = trim_end(@'\\.', extract(@'Web Category: ([\\S]+)', 1, msg_s)), Reason = extract(@'Reason: ([^\\.]+)(\\.)', 1, msg_s), Firewall = Resource | where Action == 'Deny' | where isempty('{SelectedSource}') or ('{SelectedSource}' !has ',' and Source =~ '{SelectedSource}') or ('{SelectedSource}' has ',' and Source in~ (split('{SelectedSource}', ','))) | where isempty('{SelectedDestination}') or ('{SelectedDestination}' !has ',' and Destination =~ '{SelectedDestination}') or ('{SelectedDestination}' has ',' and Destination in~ (split('{SelectedDestination}', ','))) | extend Rule = iif(isempty(Rule), 'No rule matched', Rule) | where isempty('{SelectedRule}') or ('{SelectedRule}' !has ',' and Rule =~ '{SelectedRule}') or ('{SelectedRule}' has ',' and Rule in~ (split('{SelectedRule}', ','))) | extend Destination = iif(isempty(Destination), Reason, iif(isempty(DestinationPort), Destination, strcat(Destination, ':', DestinationPort))) | summarize Hits = count() by Destination, bin(TimeGenerated, {TimeRange:grain})",
                            "size": 1,
                            "showAnalytics": true,
                            "title": "Denied hits by destination and port ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no matching events.",
                            "noDataMessageStyle": 2,
                            "timeContext": {
                              "durationMs": 14400000
                            },
                            "timeContextFromParameter": "TimeRange",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "visualization": "timechart",
                            "tileSettings": {
                              "showBorder": false
                            },
                            "chartSettings": {
                              "showLegend": true
                            }
                          },
                          "conditionalVisibility": {
                            "parameterName": "selectedAppRuleTab",
                            "comparison": "isEqualTo",
                            "value": "Statistics"
                          }
                        },
                        {
                          "type": 3,
                          "name": "AFAppAllowedDestChartQuery",
                          "customWidth": "50",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and Category == 'AzureFirewallApplicationRule' and OperationName == 'AzureFirewallApplicationRuleLog' | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | extend Protocol = extract(@'^([\\S]+)', 1, msg_s), Source = extract(@'request from ([^ :]+)', 1, msg_s), SourcePort = extract(@'request from ([^ :]+):([0-9]+)', 2, msg_s), Destination = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+)', 3, msg_s), DestinationPort = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+)', 4, msg_s), Url = trim_end(@'\\.', extract(@'Url: ([\\S]+)', 1, msg_s)), Action = extract(@'Action: ([\\w]+)', 1, msg_s), Policy = trim_end(@'\\.', extract(@'Policy: ([\\S]+)', 1, msg_s)), RuleCollectionGroup = trim_end(@'\\.', extract(@'Rule Collection Group: ([\\S]+)', 1, msg_s)), RuleCollection = trim_end(@'\\.', extract(@'Rule Collection: ([\\S]+)', 1, msg_s)), Rule = trim_end(@'\\.', extract(@'Rule: ([\\S]+)', 1, msg_s)), WebCategory = trim_end(@'\\.', extract(@'Web Category: ([\\S]+)', 1, msg_s)), Reason = extract(@'Reason: ([^\\.]+)(\\.)', 1, msg_s), Firewall = Resource | where Action == 'Allow' | where isempty('{SelectedSource}') or ('{SelectedSource}' !has ',' and Source =~ '{SelectedSource}') or ('{SelectedSource}' has ',' and Source in~ (split('{SelectedSource}', ','))) | where isempty('{SelectedDestination}') or ('{SelectedDestination}' !has ',' and Destination =~ '{SelectedDestination}') or ('{SelectedDestination}' has ',' and Destination in~ (split('{SelectedDestination}', ','))) | extend Rule = iif(isempty(Rule), 'No rule matched', Rule) | where isempty('{SelectedRule}') or ('{SelectedRule}' !has ',' and Rule =~ '{SelectedRule}') or ('{SelectedRule}' has ',' and Rule in~ (split('{SelectedRule}', ','))) | extend Destination = iif(isempty(Destination), Reason, iif(isempty(DestinationPort), Destination, strcat(Destination, ':', DestinationPort))) | summarize Hits = count() by Destination, bin(TimeGenerated, {TimeRange:grain})",
                            "size": 1,
                            "showAnalytics": true,
                            "title": "Allowed hits by destination and port ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no matching events.",
                            "noDataMessageStyle": 2,
                            "timeContext": {
                              "durationMs": 14400000
                            },
                            "timeContextFromParameter": "TimeRange",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "visualization": "timechart",
                            "tileSettings": {
                              "showBorder": false
                            },
                            "chartSettings": {
                              "showLegend": true
                            }
                          },
                          "conditionalVisibility": {
                            "parameterName": "selectedAppRuleTab",
                            "comparison": "isEqualTo",
                            "value": "Statistics"
                          }
                        },
                        {
                          "type": 3,
                          "name": "AFAppDeniedWebCatRuleQuery",
                          "customWidth": "50",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and Category == 'AzureFirewallApplicationRule' and OperationName == 'AzureFirewallApplicationRuleLog' | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | extend Protocol = extract(@'^([\\S]+)', 1, msg_s), Source = extract(@'request from ([^ :]+)', 1, msg_s), SourcePort = extract(@'request from ([^ :]+):([0-9]+)', 2, msg_s), Destination = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+)', 3, msg_s), DestinationPort = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+)', 4, msg_s), Url = trim_end(@'\\.', extract(@'Url: ([\\S]+)', 1, msg_s)), Action = extract(@'Action: ([\\w]+)', 1, msg_s), Policy = trim_end(@'\\.', extract(@'Policy: ([\\S]+)', 1, msg_s)), RuleCollectionGroup = trim_end(@'\\.', extract(@'Rule Collection Group: ([\\S]+)', 1, msg_s)), RuleCollection = trim_end(@'\\.', extract(@'Rule Collection: ([\\S]+)', 1, msg_s)), Rule = trim_end(@'\\.', extract(@'Rule: ([\\S]+)', 1, msg_s)), WebCategory = trim_end(@'\\.', extract(@'Web Category: ([\\S]+)', 1, msg_s)), Reason = extract(@'Reason: ([^\\.]+)(\\.)', 1, msg_s), Firewall = Resource | where isnotempty(WebCategory) | where Action == 'Deny' | where isempty('{SelectedSource}') or ('{SelectedSource}' !has ',' and Source =~ '{SelectedSource}') or ('{SelectedSource}' has ',' and Source in~ (split('{SelectedSource}', ','))) | where isempty('{SelectedDestination}') or ('{SelectedDestination}' !has ',' and Destination =~ '{SelectedDestination}') or ('{SelectedDestination}' has ',' and Destination in~ (split('{SelectedDestination}', ','))) | extend Rule = iif(isempty(Rule), 'No rule matched', Rule) | where isempty('{SelectedRule}') or ('{SelectedRule}' !has ',' and Rule =~ '{SelectedRule}') or ('{SelectedRule}' has ',' and Rule in~ (split('{SelectedRule}', ','))) | summarize Hits = count() by Firewall, Rule, WebCategory | project Hits, WebCategory, Rule, Firewall | sort by Hits desc",
                            "size": 0,
                            "showAnalytics": true,
                            "showExportToExcel": true,
                            "title": "Denied hits by firewall, rule and web category ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no matching events.",
                            "noDataMessageStyle": 2,
                            "timeContext": {
                              "durationMs": 14400000
                            },
                            "timeContextFromParameter": "TimeRange",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "visualization": "table",
                            "gridSettings": {
                              "formatters": [
                                {
                                  "columnMatch": "Hits",
                                  "formatter": 8,
                                  "formatOptions": {
                                    "palette": "whiteBlack"
                                  },
                                  "numberFormat": {
                                    "unit": 17,
                                    "options": {
                                      "style": "decimal",
                                      "useGrouping": false,
                                      "maximumSignificantDigits": 4
                                    }
                                  }
                                }
                              ]
                            },
                            "sortBy": []
                          },
                          "conditionalVisibility": {
                            "parameterName": "selectedAppRuleTab",
                            "comparison": "isEqualTo",
                            "value": "WebCategories"
                          }
                        },
                        {
                          "type": 3,
                          "name": "AFAppAllowedWebCatRuleQuery",
                          "customWidth": "50",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and Category == 'AzureFirewallApplicationRule' and OperationName == 'AzureFirewallApplicationRuleLog' | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | extend Protocol = extract(@'^([\\S]+)', 1, msg_s), Source = extract(@'request from ([^ :]+)', 1, msg_s), SourcePort = extract(@'request from ([^ :]+):([0-9]+)', 2, msg_s), Destination = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+)', 3, msg_s), DestinationPort = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+)', 4, msg_s), Url = trim_end(@'\\.', extract(@'Url: ([\\S]+)', 1, msg_s)), Action = extract(@'Action: ([\\w]+)', 1, msg_s), Policy = trim_end(@'\\.', extract(@'Policy: ([\\S]+)', 1, msg_s)), RuleCollectionGroup = trim_end(@'\\.', extract(@'Rule Collection Group: ([\\S]+)', 1, msg_s)), RuleCollection = trim_end(@'\\.', extract(@'Rule Collection: ([\\S]+)', 1, msg_s)), Rule = trim_end(@'\\.', extract(@'Rule: ([\\S]+)', 1, msg_s)), WebCategory = trim_end(@'\\.', extract(@'Web Category: ([\\S]+)', 1, msg_s)), Reason = extract(@'Reason: ([^\\.]+)(\\.)', 1, msg_s), Firewall = Resource | where isnotempty(WebCategory) | where Action == 'Allow' | where isempty('{SelectedSource}') or ('{SelectedSource}' !has ',' and Source =~ '{SelectedSource}') or ('{SelectedSource}' has ',' and Source in~ (split('{SelectedSource}', ','))) | where isempty('{SelectedDestination}') or ('{SelectedDestination}' !has ',' and Destination =~ '{SelectedDestination}') or ('{SelectedDestination}' has ',' and Destination in~ (split('{SelectedDestination}', ','))) | extend Rule = iif(isempty(Rule), 'No rule matched', Rule) | where isempty('{SelectedRule}') or ('{SelectedRule}' !has ',' and Rule =~ '{SelectedRule}') or ('{SelectedRule}' has ',' and Rule in~ (split('{SelectedRule}', ','))) | summarize Hits = count() by Firewall, Rule, WebCategory | project Hits, WebCategory, Rule, Firewall | sort by Hits desc",
                            "size": 0,
                            "showAnalytics": true,
                            "showExportToExcel": true,
                            "title": "Allowed hits by firewall, rule and web category ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no matching events.",
                            "noDataMessageStyle": 2,
                            "timeContext": {
                              "durationMs": 14400000
                            },
                            "timeContextFromParameter": "TimeRange",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "gridSettings": {
                              "formatters": [
                                {
                                  "columnMatch": "Hits",
                                  "formatter": 8,
                                  "formatOptions": {
                                    "palette": "whiteBlack"
                                  },
                                  "numberFormat": {
                                    "unit": 17,
                                    "options": {
                                      "style": "decimal",
                                      "useGrouping": false,
                                      "maximumSignificantDigits": 4
                                    }
                                  }
                                }
                              ]
                            },
                            "sortBy": []
                          },
                          "conditionalVisibility": {
                            "parameterName": "selectedAppRuleTab",
                            "comparison": "isEqualTo",
                            "value": "WebCategories"
                          }
                        },
                        {
                          "type": 3,
                          "name": "AFAppDeniedWebCatChartQuery",
                          "customWidth": "50",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and Category == 'AzureFirewallApplicationRule' and OperationName == 'AzureFirewallApplicationRuleLog' | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | extend Protocol = extract(@'^([\\S]+)', 1, msg_s), Source = extract(@'request from ([^ :]+)', 1, msg_s), SourcePort = extract(@'request from ([^ :]+):([0-9]+)', 2, msg_s), Destination = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+)', 3, msg_s), DestinationPort = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+)', 4, msg_s), Url = trim_end(@'\\.', extract(@'Url: ([\\S]+)', 1, msg_s)), Action = extract(@'Action: ([\\w]+)', 1, msg_s), Policy = trim_end(@'\\.', extract(@'Policy: ([\\S]+)', 1, msg_s)), RuleCollectionGroup = trim_end(@'\\.', extract(@'Rule Collection Group: ([\\S]+)', 1, msg_s)), RuleCollection = trim_end(@'\\.', extract(@'Rule Collection: ([\\S]+)', 1, msg_s)), Rule = trim_end(@'\\.', extract(@'Rule: ([\\S]+)', 1, msg_s)), WebCategory = trim_end(@'\\.', extract(@'Web Category: ([\\S]+)', 1, msg_s)), Reason = extract(@'Reason: ([^\\.]+)(\\.)', 1, msg_s), Firewall = Resource | where isnotempty(WebCategory) | where Action == 'Deny' | where isempty('{SelectedSource}') or ('{SelectedSource}' !has ',' and Source =~ '{SelectedSource}') or ('{SelectedSource}' has ',' and Source in~ (split('{SelectedSource}', ','))) | where isempty('{SelectedDestination}') or ('{SelectedDestination}' !has ',' and Destination =~ '{SelectedDestination}') or ('{SelectedDestination}' has ',' and Destination in~ (split('{SelectedDestination}', ','))) | extend Rule = iif(isempty(Rule), 'No rule matched', Rule) | where isempty('{SelectedRule}') or ('{SelectedRule}' !has ',' and Rule =~ '{SelectedRule}') or ('{SelectedRule}' has ',' and Rule in~ (split('{SelectedRule}', ','))) | summarize count() by WebCategory, bin(TimeGenerated, {TimeRange:grain})",
                            "size": 0,
                            "showAnalytics": true,
                            "title": "Denied hits by web category ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no matching events.",
                            "noDataMessageStyle": 2,
                            "timeContext": {
                              "durationMs": 14400000
                            },
                            "timeContextFromParameter": "TimeRange",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "visualization": "timechart",
                            "tileSettings": {
                              "showBorder": false
                            },
                            "chartSettings": {
                              "showLegend": true
                            }
                          },
                          "conditionalVisibility": {
                            "parameterName": "selectedAppRuleTab",
                            "comparison": "isEqualTo",
                            "value": "WebCategories"
                          }
                        },
                        {
                          "type": 3,
                          "name": "AFAppAllowedWebCatChartQuery",
                          "customWidth": "50",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and Category == 'AzureFirewallApplicationRule' and OperationName == 'AzureFirewallApplicationRuleLog' | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | extend Protocol = extract(@'^([\\S]+)', 1, msg_s), Source = extract(@'request from ([^ :]+)', 1, msg_s), SourcePort = extract(@'request from ([^ :]+):([0-9]+)', 2, msg_s), Destination = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+)', 3, msg_s), DestinationPort = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+)', 4, msg_s), Url = trim_end(@'\\.', extract(@'Url: ([\\S]+)', 1, msg_s)), Action = extract(@'Action: ([\\w]+)', 1, msg_s), Policy = trim_end(@'\\.', extract(@'Policy: ([\\S]+)', 1, msg_s)), RuleCollectionGroup = trim_end(@'\\.', extract(@'Rule Collection Group: ([\\S]+)', 1, msg_s)), RuleCollection = trim_end(@'\\.', extract(@'Rule Collection: ([\\S]+)', 1, msg_s)), Rule = trim_end(@'\\.', extract(@'Rule: ([\\S]+)', 1, msg_s)), WebCategory = trim_end(@'\\.', extract(@'Web Category: ([\\S]+)', 1, msg_s)), Reason = extract(@'Reason: ([^\\.]+)(\\.)', 1, msg_s), Firewall = Resource | where isnotempty(WebCategory) | where Action == 'Allow' | where isempty('{SelectedSource}') or ('{SelectedSource}' !has ',' and Source =~ '{SelectedSource}') or ('{SelectedSource}' has ',' and Source in~ (split('{SelectedSource}', ','))) | where isempty('{SelectedDestination}') or ('{SelectedDestination}' !has ',' and Destination =~ '{SelectedDestination}') or ('{SelectedDestination}' has ',' and Destination in~ (split('{SelectedDestination}', ','))) | extend Rule = iif(isempty(Rule), 'No rule matched', Rule) | where isempty('{SelectedRule}') or ('{SelectedRule}' !has ',' and Rule =~ '{SelectedRule}') or ('{SelectedRule}' has ',' and Rule in~ (split('{SelectedRule}', ','))) | summarize count() by WebCategory, bin(TimeGenerated, {TimeRange:grain})",
                            "size": 0,
                            "showAnalytics": true,
                            "title": "Allowed hits by web category ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no matching events.",
                            "noDataMessageStyle": 2,
                            "timeContext": {
                              "durationMs": 14400000
                            },
                            "timeContextFromParameter": "TimeRange",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "visualization": "timechart",
                            "tileSettings": {
                              "showBorder": false
                            },
                            "chartSettings": {
                              "showLegend": true
                            }
                          },
                          "conditionalVisibility": {
                            "parameterName": "selectedAppRuleTab",
                            "comparison": "isEqualTo",
                            "value": "WebCategories"
                          }
                        }
                      ]
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "AFAppRule"
                    }
                  },
                  {
                    "type": 12,
                    "name": "AFNetRuleGroup",
                    "content": {
                      "version": "NotebookGroup/1.0",
                      "groupType": "editable",
                      "items": [
                        {
                          "type": 11,
                          "name": "NetRuleLinks",
                          "content": {
                            "version": "LinkItem/1.0",
                            "style": "tabs",
                            "links": [
                              {
                                "id": "837e338f-3385-4128-825c-c0e6c79b7019",
                                "cellValue": "selectedNetRuleTab",
                                "linkTarget": "parameter",
                                "linkLabel": "Search",
                                "subTarget": "Search",
                                "style": "link"
                              },
                              {
                                "id": "554e6c51-3476-4770-b5bb-989f6aff0fd0",
                                "cellValue": "selectedNetRuleTab",
                                "linkTarget": "parameter",
                                "linkLabel": "Statistics",
                                "subTarget": "Statistics",
                                "style": "link"
                              },
                              {
                                "id": "b8ca5029-dbcc-467d-b650-cae865e09d0b",
                                "cellValue": "selectedNetRuleTab",
                                "linkTarget": "parameter",
                                "linkLabel": "Threat Intel",
                                "subTarget": "ThreatIntel",
                                "style": "link"
                              }
                            ]
                          }
                        },
                        {
                          "type": 3,
                          "name": "AFNetSelectedSourceQuery",
                          "customWidth": "50",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and Category == 'AzureFirewallNetworkRule' and OperationName == 'AzureFirewallNetworkRuleLog'  | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | extend Protocol = extract(@'^([\\S]+)', 1, msg_s), ICMPType = extract(@'^ICMP Type=([\\S]+)', 1, msg_s), Source = extract(@'request from ([^ :]+)', 1, msg_s), SourcePort = extract(@'request from ([^ :]+):([0-9]+)', 2, msg_s), FirstDestination = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+)', 3, msg_s), ICMPDestination = trim_end(@'\\.', extract(@'request from ([^ :]+) to ([^ :]+)', 2, msg_s)), DestinationPort = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+)', 4, msg_s), NATAction = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+) was ([\\S]+) to', 5, msg_s), NATDestination = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+) was ([\\S]+) to ([^ :]+)', 6, msg_s), NATDestinationPort = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+) was ([\\S]+) to ([^ :]+):([0-9]+)', 7, msg_s), Action = extract(@'Action: ([\\w]+)', 1, msg_s), Firewall = Resource | extend Destination = iif(isempty(FirstDestination), ICMPDestination, FirstDestination), Action = iif(isempty(Action), NATAction, Action), DestinationPort = iif(Protocol == 'ICMP', ICMPType, DestinationPort) | join kind=leftouter (AzureNetworkAnalytics_CL | where SubType_s == 'Topology' and ResourceType in ('NetworkInterface', 'ApplicationGateway', 'VirtualNetworkGateway', 'LoadBalancer') | extend RGandName = split(iif(ResourceType == 'NetworkInterface' and isnotnull(VirtualMachine_s), VirtualMachine_s, Name_s), '/') | extend IPResourceId = strcat('/subscriptions/', Subscription_g, '/resourceGroups/', RGandName[0], '/providers/', iif(ResourceType == 'NetworkInterface' and isnotnull(VirtualMachine_s), 'Microsoft.Compute/virtualMachines/', strcat('Microsoft.Network/', ResourceType, 's/')), RGandName[1]) | extend IP = pack_array(PrivateFrontendIPs_s, PublicFrontendIPs_s, VIPAddress_s, PrivateIPAddresses_s, PublicIPAddresses_s, PublicIPs_s) | mv-expand IP | where isnotempty(IP) | summarize by IPResourceId, tostring(IP)) on $left.Source == $right.IP | summarize Hits = count() by Source, IPResourceId | project Hits, Source, Resource = IPResourceId | sort by Hits desc",
                            "size": 1,
                            "showAnalytics": true,
                            "showExportToExcel": true,
                            "title": "Select source ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no matching events.",
                            "noDataMessageStyle": 2,
                            "timeContext": {
                              "durationMs": 14400000
                            },
                            "timeContextFromParameter": "TimeRange",
                            "exportMultipleValues": true,
                            "exportedParameters": [
                              {
                                "fieldName": "Source",
                                "parameterName": "SelectedSource",
                                "parameterType": 1,
                                "quote": "",
                                "delimiter": ","
                              }
                            ],
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "gridSettings": {
                              "formatters": [
                                {
                                  "columnMatch": "Hits",
                                  "formatter": 8,
                                  "formatOptions": {
                                    "palette": "whiteBlack"
                                  },
                                  "numberFormat": {
                                    "unit": 17,
                                    "options": {
                                      "style": "decimal",
                                      "useGrouping": false,
                                      "maximumSignificantDigits": 4
                                    }
                                  }
                                }
                              ],
                              "rowLimit": 10000,
                              "filter": true
                            }
                          }
                        },
                        {
                          "type": 3,
                          "name": "AFNetSelectedDestinationQuery",
                          "customWidth": "50",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and Category == 'AzureFirewallNetworkRule' and OperationName == 'AzureFirewallNetworkRuleLog'  | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | extend Protocol = extract(@'^([\\S]+)', 1, msg_s), ICMPType = extract(@'^ICMP Type=([\\S]+)', 1, msg_s), Source = extract(@'request from ([^ :]+)', 1, msg_s), SourcePort = extract(@'request from ([^ :]+):([0-9]+)', 2, msg_s), FirstDestination = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+)', 3, msg_s), ICMPDestination = trim_end(@'\\.', extract(@'request from ([^ :]+) to ([^ :]+)', 2, msg_s)), DestinationPort = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+)', 4, msg_s), NATAction = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+) was ([\\S]+) to', 5, msg_s), NATDestination = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+) was ([\\S]+) to ([^ :]+)', 6, msg_s), NATDestinationPort = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+) was ([\\S]+) to ([^ :]+):([0-9]+)', 7, msg_s), Action = extract(@'Action: ([\\w]+)', 1, msg_s), Firewall = Resource | extend Destination = iif(isempty(FirstDestination), ICMPDestination, FirstDestination), Action = iif(isempty(Action), NATAction, Action), DestinationPort = iif(Protocol == 'ICMP', ICMPType, DestinationPort) | where isempty('{SelectedSource}') or ('{SelectedSource}' !has ',' and Source =~ '{SelectedSource}') or ('{SelectedSource}' has ',' and Source in~ (split('{SelectedSource}', ','))) | summarize Hits = count() by Destination, NATDestination | project Hits, Destination, NATDestination | sort by Hits desc",
                            "size": 1,
                            "showAnalytics": true,
                            "showExportToExcel": true,
                            "title": "Select destination ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no matching events.",
                            "noDataMessageStyle": 2,
                            "timeContext": {
                              "durationMs": 14400000
                            },
                            "timeContextFromParameter": "TimeRange",
                            "exportMultipleValues": true,
                            "exportedParameters": [
                              {
                                "fieldName": "Destination",
                                "parameterName": "SelectedDestination",
                                "parameterType": 1,
                                "quote": "",
                                "delimiter": ","
                              },
                              {
                                "fieldName": "NATDestination",
                                "parameterName": "SelectedNATDestination",
                                "parameterType": 1,
                                "quote": "",
                                "delimiter": ","
                              }
                            ],
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "gridSettings": {
                              "formatters": [
                                {
                                  "columnMatch": "Hits",
                                  "formatter": 8,
                                  "formatOptions": {
                                    "palette": "whiteBlack"
                                  },
                                  "numberFormat": {
                                    "unit": 17,
                                    "options": {
                                      "style": "decimal",
                                      "useGrouping": false,
                                      "maximumSignificantDigits": 4
                                    }
                                  }
                                }
                              ],
                              "rowLimit": 10000,
                              "filter": true
                            }
                          }
                        },
                        {
                          "type": 9,
                          "name": "NetRuleLogSearchParameters",
                          "content": {
                            "version": "KqlParameterItem/1.0",
                            "parameters": [
                              {
                                "id": "0e25640a-51f8-4fec-8489-586b17b21602",
                                "version": "KqlParameterItem/1.0",
                                "name": "AFAction",
                                "label": "Action",
                                "type": 10,
                                "isRequired": true,
                                "value": "All",
                                "typeSettings": {
                                  "additionalResourceOptions": [],
                                  "showDefault": false
                                },
                                "jsonData": "[\"All\",\"Allow\",\"Deny\"]",
                                "timeContext": {
                                  "durationMs": 0
                                },
                                "timeContextFromParameter": "TimeRange"
                              },
                              {
                                "id": "fbab8ae6-d8da-4530-a096-e06cc53e5cf6",
                                "version": "KqlParameterItem/1.0",
                                "name": "AFSourcePort",
                                "label": "SourcePort",
                                "type": 2,
                                "isRequired": true,
                                "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and Category == 'AzureFirewallNetworkRule' and OperationName == 'AzureFirewallNetworkRuleLog'  and msg_s matches regex @'request from ([^ :]+):([0-9]+)' | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | extend SourcePort = extract(@'request from ([^ :]+):([0-9]+)', 2, msg_s) | summarize by SourcePort | sort by SourcePort asc",
                                "typeSettings": {
                                  "additionalResourceOptions": [
                                    "value::all"
                                  ],
                                  "selectAllValue": "All",
                                  "showDefault": false
                                },
                                "timeContext": {
                                  "durationMs": 14400000
                                },
                                "timeContextFromParameter": "TimeRange",
                                "defaultValue": "value::all",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{Workspaces}"
                                ]
                              },
                              {
                                "id": "625ea648-787e-426d-997c-a4e4fb9dc8a4",
                                "version": "KqlParameterItem/1.0",
                                "name": "AFDestinationPort",
                                "label": "DestinationPort",
                                "type": 2,
                                "isRequired": true,
                                "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and Category == 'AzureFirewallNetworkRule' and OperationName == 'AzureFirewallNetworkRuleLog'  | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | extend Protocol = extract(@'^([\\S]+)', 1, msg_s), ICMPType = extract(@'^ICMP Type=([\\S]+)', 1, msg_s), DestinationPort = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+)', 4, msg_s) | extend DestinationPort = iif(Protocol == 'ICMP', ICMPType, DestinationPort) | summarize by DestinationPort | sort by DestinationPort asc",
                                "typeSettings": {
                                  "additionalResourceOptions": [
                                    "value::all"
                                  ],
                                  "selectAllValue": "All",
                                  "showDefault": false
                                },
                                "timeContext": {
                                  "durationMs": 14400000
                                },
                                "timeContextFromParameter": "TimeRange",
                                "defaultValue": "value::all",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{Workspaces}"
                                ]
                              },
                              {
                                "id": "90c7e0d4-fc2f-40a5-b334-70e63cb0945a",
                                "version": "KqlParameterItem/1.0",
                                "name": "AFProtocol",
                                "label": "Protocol",
                                "type": 2,
                                "isRequired": true,
                                "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and Category == 'AzureFirewallNetworkRule' and OperationName == 'AzureFirewallNetworkRuleLog'  | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | extend Protocol = extract(@'^([\\S]+)', 1, msg_s) | summarize by Protocol | sort by Protocol asc",
                                "typeSettings": {
                                  "additionalResourceOptions": [
                                    "value::all"
                                  ],
                                  "selectAllValue": "All",
                                  "showDefault": false
                                },
                                "timeContext": {
                                  "durationMs": 14400000
                                },
                                "timeContextFromParameter": "TimeRange",
                                "defaultValue": "value::all",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{Workspaces}"
                                ]
                              }
                            ],
                            "style": "pills",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces"
                          },
                          "conditionalVisibility": {
                            "parameterName": "selectedNetRuleTab",
                            "comparison": "isNotEqualTo",
                            "value": "Statistics"
                          }
                        },
                        {
                          "type": 3,
                          "name": "NetRuleSearchQuery",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "let geoData = externaldata(network:string,geoname_id:string,continent_code:string,continent_name:string,country_iso_code:string,country_name:string,is_anonymous_proxy:string,is_satellite_provider:string)[@'https://raw.githubusercontent.com/datasets/geoip2-ipv4/master/data/geoip2-ipv4.csv'] with (ignoreFirstRecord=true, format='csv');AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and Category == 'AzureFirewallNetworkRule' and OperationName == 'AzureFirewallNetworkRuleLog'  | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | extend Protocol = extract(@'^([\\S]+)', 1, msg_s), ICMPType = extract(@'^ICMP Type=([\\S]+)', 1, msg_s), Source = extract(@'request from ([^ :]+)', 1, msg_s), SourcePort = extract(@'request from ([^ :]+):([0-9]+)', 2, msg_s), FirstDestination = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+)', 3, msg_s), ICMPDestination = trim_end(@'\\.', extract(@'request from ([^ :]+) to ([^ :]+)', 2, msg_s)), DestinationPort = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+)', 4, msg_s), NATAction = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+) was ([\\S]+) to', 5, msg_s), NATDestination = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+) was ([\\S]+) to ([^ :]+)', 6, msg_s), NATDestinationPort = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+) was ([\\S]+) to ([^ :]+):([0-9]+)', 7, msg_s), Action = extract(@'Action: ([\\w]+)', 1, msg_s), Firewall = Resource | extend Destination = iif(isempty(FirstDestination), ICMPDestination, FirstDestination), Action = iif(isempty(Action), NATAction, Action), DestinationPort = iif(Protocol == 'ICMP', ICMPType, DestinationPort) | where isempty('{SelectedSource}') or ('{SelectedSource}' !has ',' and Source =~ '{SelectedSource}') or ('{SelectedSource}' has ',' and Source in~ (split('{SelectedSource}', ','))) | where isempty('{SelectedDestination}') or ('{SelectedDestination}' !has ',' and Destination =~ '{SelectedDestination}') or ('{SelectedDestination}' has ',' and Destination in~ (split('{SelectedDestination}', ','))) | where isempty('{SelectedNATDestination}') or ('{SelectedNATDestination}' !has ',' and NATDestination =~ '{SelectedNATDestination}') or ('{SelectedNATDestination}' has ',' and NATDestination in~ (split('{SelectedNATDestination}', ','))) | where '{AFAction:label}' == 'All' or Action == '{AFAction:label}' | where '{AFSourcePort:label}' == 'All' or SourcePort == '{AFSourcePort:label}' | where '{AFDestinationPort:label}' == 'All' or DestinationPort == '{AFDestinationPort:label}' or NATDestinationPort == '{AFDestinationPort:label}' | where '{AFProtocol:label}' == 'All' or Protocol == '{AFProtocol:label}' | evaluate ipv4_lookup(geoData, Destination, network, return_unmatched = true) | summarize by TimeGenerated, Firewall, Action, Source, SourcePort, Destination, DestinationPort, NATDestination, NATDestinationPort, Protocol, Continent = iif(isempty(continent_name), 'Unmatched', continent_name), Country = iif(isempty(country_name), 'Unmatched', country_name), LogMessage = msg_s | sort by TimeGenerated desc",
                            "size": 2,
                            "showAnalytics": true,
                            "showExportToExcel": true,
                            "title": "Firewall network rule log ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no matching events.",
                            "noDataMessageStyle": 2,
                            "timeContext": {
                              "durationMs": 14400000
                            },
                            "timeContextFromParameter": "TimeRange",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "gridSettings": {
                              "rowLimit": 10000,
                              "filter": true
                            }
                          },
                          "conditionalVisibility": {
                            "parameterName": "selectedNetRuleTab",
                            "comparison": "isEqualTo",
                            "value": "Search"
                          }
                        },
                        {
                          "type": 3,
                          "name": "AFNetActionPieQuery",
                          "customWidth": "25",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and Category == 'AzureFirewallNetworkRule' and OperationName == 'AzureFirewallNetworkRuleLog'  | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | extend Protocol = extract(@'^([\\S]+)', 1, msg_s), ICMPType = extract(@'^ICMP Type=([\\S]+)', 1, msg_s), Source = extract(@'request from ([^ :]+)', 1, msg_s), SourcePort = extract(@'request from ([^ :]+):([0-9]+)', 2, msg_s), FirstDestination = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+)', 3, msg_s), ICMPDestination = trim_end(@'\\.', extract(@'request from ([^ :]+) to ([^ :]+)', 2, msg_s)), DestinationPort = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+)', 4, msg_s), NATAction = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+) was ([\\S]+) to', 5, msg_s), NATDestination = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+) was ([\\S]+) to ([^ :]+)', 6, msg_s), NATDestinationPort = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+) was ([\\S]+) to ([^ :]+):([0-9]+)', 7, msg_s), Action = extract(@'Action: ([\\w]+)', 1, msg_s), Firewall = Resource | extend Destination = iif(isempty(FirstDestination), ICMPDestination, FirstDestination), Action = iif(isempty(Action), NATAction, Action), DestinationPort = iif(Protocol == 'ICMP', ICMPType, DestinationPort) | where isempty('{SelectedSource}') or ('{SelectedSource}' !has ',' and Source =~ '{SelectedSource}') or ('{SelectedSource}' has ',' and Source in~ (split('{SelectedSource}', ','))) | where isempty('{SelectedDestination}') or ('{SelectedDestination}' !has ',' and Destination =~ '{SelectedDestination}') or ('{SelectedDestination}' has ',' and Destination in~ (split('{SelectedDestination}', ','))) | where isempty('{SelectedNATDestination}') or ('{SelectedNATDestination}' !has ',' and NATDestination =~ '{SelectedNATDestination}') or ('{SelectedNATDestination}' has ',' and NATDestination in~ (split('{SelectedNATDestination}', ','))) | summarize Hits = count() by Action | project Hits, Action | sort by Hits desc",
                            "size": 0,
                            "showAnalytics": true,
                            "title": "Hits by action ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no matching events.",
                            "noDataMessageStyle": 2,
                            "timeContext": {
                              "durationMs": 0
                            },
                            "timeContextFromParameter": "TimeRange",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "visualization": "piechart"
                          },
                          "conditionalVisibility": {
                            "parameterName": "selectedNetRuleTab",
                            "comparison": "isEqualTo",
                            "value": "Statistics"
                          }
                        },
                        {
                          "type": 3,
                          "name": "AFNetProtocolPieQuery",
                          "customWidth": "25",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and Category == 'AzureFirewallNetworkRule' and OperationName == 'AzureFirewallNetworkRuleLog'  | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | extend Protocol = extract(@'^([\\S]+)', 1, msg_s), ICMPType = extract(@'^ICMP Type=([\\S]+)', 1, msg_s), Source = extract(@'request from ([^ :]+)', 1, msg_s), SourcePort = extract(@'request from ([^ :]+):([0-9]+)', 2, msg_s), FirstDestination = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+)', 3, msg_s), ICMPDestination = trim_end(@'\\.', extract(@'request from ([^ :]+) to ([^ :]+)', 2, msg_s)), DestinationPort = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+)', 4, msg_s), NATAction = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+) was ([\\S]+) to', 5, msg_s), NATDestination = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+) was ([\\S]+) to ([^ :]+)', 6, msg_s), NATDestinationPort = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+) was ([\\S]+) to ([^ :]+):([0-9]+)', 7, msg_s), Action = extract(@'Action: ([\\w]+)', 1, msg_s), Firewall = Resource | extend Destination = iif(isempty(FirstDestination), ICMPDestination, FirstDestination), Action = iif(isempty(Action), NATAction, Action), DestinationPort = iif(Protocol == 'ICMP', ICMPType, DestinationPort) | where isempty('{SelectedSource}') or ('{SelectedSource}' !has ',' and Source =~ '{SelectedSource}') or ('{SelectedSource}' has ',' and Source in~ (split('{SelectedSource}', ','))) | where isempty('{SelectedDestination}') or ('{SelectedDestination}' !has ',' and Destination =~ '{SelectedDestination}') or ('{SelectedDestination}' has ',' and Destination in~ (split('{SelectedDestination}', ','))) | where isempty('{SelectedNATDestination}') or ('{SelectedNATDestination}' !has ',' and NATDestination =~ '{SelectedNATDestination}') or ('{SelectedNATDestination}' has ',' and NATDestination in~ (split('{SelectedNATDestination}', ','))) | summarize Hits = count() by Protocol | project Hits, Protocol | sort by Hits desc",
                            "size": 0,
                            "showAnalytics": true,
                            "title": "Hits by protocol ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no matching events.",
                            "noDataMessageStyle": 2,
                            "timeContext": {
                              "durationMs": 0
                            },
                            "timeContextFromParameter": "TimeRange",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "visualization": "piechart"
                          },
                          "conditionalVisibility": {
                            "parameterName": "selectedNetRuleTab",
                            "comparison": "isEqualTo",
                            "value": "Statistics"
                          }
                        },
                        {
                          "type": 3,
                          "name": "AFNetDestPortPieQuery",
                          "customWidth": "25",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and Category == 'AzureFirewallNetworkRule' and OperationName == 'AzureFirewallNetworkRuleLog'  | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | extend Protocol = extract(@'^([\\S]+)', 1, msg_s), ICMPType = extract(@'^ICMP Type=([\\S]+)', 1, msg_s), Source = extract(@'request from ([^ :]+)', 1, msg_s), SourcePort = extract(@'request from ([^ :]+):([0-9]+)', 2, msg_s), FirstDestination = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+)', 3, msg_s), ICMPDestination = trim_end(@'\\.', extract(@'request from ([^ :]+) to ([^ :]+)', 2, msg_s)), DestinationPort = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+)', 4, msg_s), NATAction = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+) was ([\\S]+) to', 5, msg_s), NATDestination = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+) was ([\\S]+) to ([^ :]+)', 6, msg_s), NATDestinationPort = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+) was ([\\S]+) to ([^ :]+):([0-9]+)', 7, msg_s), Action = extract(@'Action: ([\\w]+)', 1, msg_s), Firewall = Resource | extend Destination = iif(isempty(FirstDestination), ICMPDestination, FirstDestination), Action = iif(isempty(Action), NATAction, Action), DestinationPort = iif(Protocol == 'ICMP', ICMPType, DestinationPort) | where isempty('{SelectedSource}') or ('{SelectedSource}' !has ',' and Source =~ '{SelectedSource}') or ('{SelectedSource}' has ',' and Source in~ (split('{SelectedSource}', ','))) | where isempty('{SelectedDestination}') or ('{SelectedDestination}' !has ',' and Destination =~ '{SelectedDestination}') or ('{SelectedDestination}' has ',' and Destination in~ (split('{SelectedDestination}', ','))) | where isempty('{SelectedNATDestination}') or ('{SelectedNATDestination}' !has ',' and NATDestination =~ '{SelectedNATDestination}') or ('{SelectedNATDestination}' has ',' and NATDestination in~ (split('{SelectedNATDestination}', ','))) | summarize Hits = count() by DestinationPort | project Hits, Port = DestinationPort | sort by Hits desc",
                            "size": 0,
                            "showAnalytics": true,
                            "title": "Hits by destination port ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no matching events.",
                            "noDataMessageStyle": 2,
                            "timeContext": {
                              "durationMs": 0
                            },
                            "timeContextFromParameter": "TimeRange",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "visualization": "piechart"
                          },
                          "conditionalVisibility": {
                            "parameterName": "selectedNetRuleTab",
                            "comparison": "isEqualTo",
                            "value": "Statistics"
                          }
                        },
                        {
                          "type": 3,
                          "name": "AFNetLocationPieQuery",
                          "customWidth": "25",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "let geoData = externaldata(network:string,geoname_id:string,continent_code:string,continent_name:string,country_iso_code:string,country_name:string,is_anonymous_proxy:string,is_satellite_provider:string)[@'https://raw.githubusercontent.com/datasets/geoip2-ipv4/master/data/geoip2-ipv4.csv'] with (ignoreFirstRecord=true, format='csv');AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and Category == 'AzureFirewallNetworkRule' and OperationName == 'AzureFirewallNetworkRuleLog'  | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | extend Protocol = extract(@'^([\\S]+)', 1, msg_s), ICMPType = extract(@'^ICMP Type=([\\S]+)', 1, msg_s), Source = extract(@'request from ([^ :]+)', 1, msg_s), SourcePort = extract(@'request from ([^ :]+):([0-9]+)', 2, msg_s), FirstDestination = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+)', 3, msg_s), ICMPDestination = trim_end(@'\\.', extract(@'request from ([^ :]+) to ([^ :]+)', 2, msg_s)), DestinationPort = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+)', 4, msg_s), NATAction = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+) was ([\\S]+) to', 5, msg_s), NATDestination = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+) was ([\\S]+) to ([^ :]+)', 6, msg_s), NATDestinationPort = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+) was ([\\S]+) to ([^ :]+):([0-9]+)', 7, msg_s), Action = extract(@'Action: ([\\w]+)', 1, msg_s), Firewall = Resource | extend Destination = iif(isempty(FirstDestination), ICMPDestination, FirstDestination), Action = iif(isempty(Action), NATAction, Action), DestinationPort = iif(Protocol == 'ICMP', ICMPType, DestinationPort) | where isempty('{SelectedSource}') or ('{SelectedSource}' !has ',' and Source =~ '{SelectedSource}') or ('{SelectedSource}' has ',' and Source in~ (split('{SelectedSource}', ','))) | where isempty('{SelectedDestination}') or ('{SelectedDestination}' !has ',' and Destination =~ '{SelectedDestination}') or ('{SelectedDestination}' has ',' and Destination in~ (split('{SelectedDestination}', ','))) | where isempty('{SelectedNATDestination}') or ('{SelectedNATDestination}' !has ',' and NATDestination =~ '{SelectedNATDestination}') or ('{SelectedNATDestination}' has ',' and NATDestination in~ (split('{SelectedNATDestination}', ','))) | evaluate ipv4_lookup(geoData, Destination, network, return_unmatched = true) | summarize Hits = count() by continent_name | project Hits, Continent = iif(isempty(continent_name), 'Unmatched', continent_name) | sort by Hits",
                            "size": 0,
                            "showAnalytics": true,
                            "title": "Hits by destination continent ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no matching events.",
                            "noDataMessageStyle": 2,
                            "timeContext": {
                              "durationMs": 0
                            },
                            "timeContextFromParameter": "TimeRange",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "visualization": "piechart"
                          },
                          "conditionalVisibility": {
                            "parameterName": "selectedNetRuleTab",
                            "comparison": "isEqualTo",
                            "value": "Statistics"
                          }
                        },
                        {
                          "type": 3,
                          "name": "AFNetDeniedDestPortQuery",
                          "customWidth": "50",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and Category == 'AzureFirewallNetworkRule' and OperationName == 'AzureFirewallNetworkRuleLog'  | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | extend Protocol = extract(@'^([\\S]+)', 1, msg_s), ICMPType = extract(@'^ICMP Type=([\\S]+)', 1, msg_s), Source = extract(@'request from ([^ :]+)', 1, msg_s), SourcePort = extract(@'request from ([^ :]+):([0-9]+)', 2, msg_s), FirstDestination = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+)', 3, msg_s), ICMPDestination = trim_end(@'\\.', extract(@'request from ([^ :]+) to ([^ :]+)', 2, msg_s)), DestinationPort = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+)', 4, msg_s), NATAction = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+) was ([\\S]+) to', 5, msg_s), NATDestination = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+) was ([\\S]+) to ([^ :]+)', 6, msg_s), NATDestinationPort = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+) was ([\\S]+) to ([^ :]+):([0-9]+)', 7, msg_s), Action = extract(@'Action: ([\\w]+)', 1, msg_s), Firewall = Resource | extend Destination = iif(isempty(FirstDestination), ICMPDestination, FirstDestination), Action = iif(isempty(Action), NATAction, Action), DestinationPort = iif(Protocol == 'ICMP', ICMPType, DestinationPort) | where Action == 'Deny' | where isempty('{SelectedSource}') or ('{SelectedSource}' !has ',' and Source =~ '{SelectedSource}') or ('{SelectedSource}' has ',' and Source in~ (split('{SelectedSource}', ','))) | where isempty('{SelectedDestination}') or ('{SelectedDestination}' !has ',' and Destination =~ '{SelectedDestination}') or ('{SelectedDestination}' has ',' and Destination in~ (split('{SelectedDestination}', ','))) | where isempty('{SelectedNATDestination}') or ('{SelectedNATDestination}' !has ',' and NATDestination =~ '{SelectedNATDestination}') or ('{SelectedNATDestination}' has ',' and NATDestination in~ (split('{SelectedNATDestination}', ','))) | summarize Hits = count() by Firewall, Destination, DestinationPort, NATDestination, NATDestinationPort | project Hits, Destination, Port = DestinationPort, NATDestination, NATPort = NATDestinationPort, Firewall | sort by Hits desc",
                            "size": 1,
                            "showAnalytics": true,
                            "title": "Denied hits by firewall, destination and port ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no matching events.",
                            "noDataMessageStyle": 2,
                            "timeContext": {
                              "durationMs": 14400000
                            },
                            "timeContextFromParameter": "TimeRange",
                            "showExportToExcel": true,
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "visualization": "table",
                            "gridSettings": {
                              "formatters": [
                                {
                                  "columnMatch": "Hits",
                                  "formatter": 8,
                                  "formatOptions": {
                                    "palette": "whiteBlack"
                                  },
                                  "numberFormat": {
                                    "unit": 17,
                                    "options": {
                                      "style": "decimal",
                                      "useGrouping": false,
                                      "maximumSignificantDigits": 4
                                    }
                                  }
                                }
                              ]
                            },
                            "sortBy": []
                          },
                          "conditionalVisibility": {
                            "parameterName": "selectedNetRuleTab",
                            "comparison": "isEqualTo",
                            "value": "Statistics"
                          }
                        },
                        {
                          "type": 3,
                          "name": "AFNetAllowedDestPortQuery",
                          "customWidth": "50",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and Category == 'AzureFirewallNetworkRule' and OperationName == 'AzureFirewallNetworkRuleLog'  | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | extend Protocol = extract(@'^([\\S]+)', 1, msg_s), ICMPType = extract(@'^ICMP Type=([\\S]+)', 1, msg_s), Source = extract(@'request from ([^ :]+)', 1, msg_s), SourcePort = extract(@'request from ([^ :]+):([0-9]+)', 2, msg_s), FirstDestination = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+)', 3, msg_s), ICMPDestination = trim_end(@'\\.', extract(@'request from ([^ :]+) to ([^ :]+)', 2, msg_s)), DestinationPort = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+)', 4, msg_s), NATAction = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+) was ([\\S]+) to', 5, msg_s), NATDestination = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+) was ([\\S]+) to ([^ :]+)', 6, msg_s), NATDestinationPort = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+) was ([\\S]+) to ([^ :]+):([0-9]+)', 7, msg_s), Action = extract(@'Action: ([\\w]+)', 1, msg_s), Firewall = Resource | extend Destination = iif(isempty(FirstDestination), ICMPDestination, FirstDestination), Action = iif(isempty(Action), NATAction, Action), DestinationPort = iif(Protocol == 'ICMP', ICMPType, DestinationPort) | where Action == 'Allow' | where isempty('{SelectedSource}') or ('{SelectedSource}' !has ',' and Source =~ '{SelectedSource}') or ('{SelectedSource}' has ',' and Source in~ (split('{SelectedSource}', ','))) | where isempty('{SelectedDestination}') or ('{SelectedDestination}' !has ',' and Destination =~ '{SelectedDestination}') or ('{SelectedDestination}' has ',' and Destination in~ (split('{SelectedDestination}', ','))) | where isempty('{SelectedNATDestination}') or ('{SelectedNATDestination}' !has ',' and NATDestination =~ '{SelectedNATDestination}') or ('{SelectedNATDestination}' has ',' and NATDestination in~ (split('{SelectedNATDestination}', ','))) | summarize Hits = count() by Firewall, Destination, DestinationPort, NATDestination, NATDestinationPort | project Hits, Destination, Port = DestinationPort, NATDestination, NATPort = NATDestinationPort, Firewall | sort by Hits desc",
                            "size": 1,
                            "showAnalytics": true,
                            "title": "Allowed hits by firewall, destination and port ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no matching events.",
                            "noDataMessageStyle": 2,
                            "timeContext": {
                              "durationMs": 14400000
                            },
                            "timeContextFromParameter": "TimeRange",
                            "showExportToExcel": true,
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "visualization": "table",
                            "gridSettings": {
                              "formatters": [
                                {
                                  "columnMatch": "Hits",
                                  "formatter": 8,
                                  "formatOptions": {
                                    "palette": "whiteBlack"
                                  },
                                  "numberFormat": {
                                    "unit": 17,
                                    "options": {
                                      "style": "decimal",
                                      "useGrouping": false,
                                      "maximumSignificantDigits": 4
                                    }
                                  }
                                }
                              ]
                            },
                            "sortBy": []
                          },
                          "conditionalVisibility": {
                            "parameterName": "selectedNetRuleTab",
                            "comparison": "isEqualTo",
                            "value": "Statistics"
                          }
                        },
                        {
                          "type": 3,
                          "name": "AFNetDeniedDestChartQuery",
                          "customWidth": "50",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and Category == 'AzureFirewallNetworkRule' and OperationName == 'AzureFirewallNetworkRuleLog'  | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | extend Protocol = extract(@'^([\\S]+)', 1, msg_s), ICMPType = extract(@'^ICMP Type=([\\S]+)', 1, msg_s), Source = extract(@'request from ([^ :]+)', 1, msg_s), SourcePort = extract(@'request from ([^ :]+):([0-9]+)', 2, msg_s), FirstDestination = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+)', 3, msg_s), ICMPDestination = trim_end(@'\\.', extract(@'request from ([^ :]+) to ([^ :]+)', 2, msg_s)), DestinationPort = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+)', 4, msg_s), NATAction = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+) was ([\\S]+) to', 5, msg_s), NATDestination = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+) was ([\\S]+) to ([^ :]+)', 6, msg_s), NATDestinationPort = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+) was ([\\S]+) to ([^ :]+):([0-9]+)', 7, msg_s), Action = extract(@'Action: ([\\w]+)', 1, msg_s), Firewall = Resource | extend Destination = iif(isempty(FirstDestination), ICMPDestination, FirstDestination), Action = iif(isempty(Action), NATAction, Action), DestinationPort = iif(Protocol == 'ICMP', ICMPType, DestinationPort) | where Action == 'Deny' | where isempty('{SelectedSource}') or ('{SelectedSource}' !has ',' and Source =~ '{SelectedSource}') or ('{SelectedSource}' has ',' and Source in~ (split('{SelectedSource}', ','))) | where isempty('{SelectedDestination}') or ('{SelectedDestination}' !has ',' and Destination =~ '{SelectedDestination}') or ('{SelectedDestination}' has ',' and Destination in~ (split('{SelectedDestination}', ','))) | where isempty('{SelectedNATDestination}') or ('{SelectedNATDestination}' !has ',' and NATDestination =~ '{SelectedNATDestination}') or ('{SelectedNATDestination}' has ',' and NATDestination in~ (split('{SelectedNATDestination}', ','))) | extend Destination = iif(isempty(DestinationPort), Destination, strcat(Destination, ':', DestinationPort)) | summarize Hits = count() by Destination, bin(TimeGenerated, {TimeRange:grain})",
                            "size": 1,
                            "showAnalytics": true,
                            "title": "Denied hits by destination and port ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no matching events.",
                            "noDataMessageStyle": 2,
                            "timeContext": {
                              "durationMs": 14400000
                            },
                            "timeContextFromParameter": "TimeRange",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "visualization": "timechart",
                            "tileSettings": {
                              "showBorder": false
                            },
                            "chartSettings": {
                              "showLegend": true
                            }
                          },
                          "conditionalVisibility": {
                            "parameterName": "selectedNetRuleTab",
                            "comparison": "isEqualTo",
                            "value": "Statistics"
                          }
                        },
                        {
                          "type": 3,
                          "name": "AFNetAllowedDestChartQuery",
                          "customWidth": "50",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and Category == 'AzureFirewallNetworkRule' and OperationName == 'AzureFirewallNetworkRuleLog'  | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | extend Protocol = extract(@'^([\\S]+)', 1, msg_s), ICMPType = extract(@'^ICMP Type=([\\S]+)', 1, msg_s), Source = extract(@'request from ([^ :]+)', 1, msg_s), SourcePort = extract(@'request from ([^ :]+):([0-9]+)', 2, msg_s), FirstDestination = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+)', 3, msg_s), ICMPDestination = trim_end(@'\\.', extract(@'request from ([^ :]+) to ([^ :]+)', 2, msg_s)), DestinationPort = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+)', 4, msg_s), NATAction = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+) was ([\\S]+) to', 5, msg_s), NATDestination = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+) was ([\\S]+) to ([^ :]+)', 6, msg_s), NATDestinationPort = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+) was ([\\S]+) to ([^ :]+):([0-9]+)', 7, msg_s), Action = extract(@'Action: ([\\w]+)', 1, msg_s), Firewall = Resource | extend Destination = iif(isempty(FirstDestination), ICMPDestination, FirstDestination), Action = iif(isempty(Action), NATAction, Action), DestinationPort = iif(Protocol == 'ICMP', ICMPType, DestinationPort) | where Action == 'Allow' | where isempty('{SelectedSource}') or ('{SelectedSource}' !has ',' and Source =~ '{SelectedSource}') or ('{SelectedSource}' has ',' and Source in~ (split('{SelectedSource}', ','))) | where isempty('{SelectedDestination}') or ('{SelectedDestination}' !has ',' and Destination =~ '{SelectedDestination}') or ('{SelectedDestination}' has ',' and Destination in~ (split('{SelectedDestination}', ','))) | where isempty('{SelectedNATDestination}') or ('{SelectedNATDestination}' !has ',' and NATDestination =~ '{SelectedNATDestination}') or ('{SelectedNATDestination}' has ',' and NATDestination in~ (split('{SelectedNATDestination}', ','))) | extend Destination = iif(isempty(DestinationPort), Destination, strcat(Destination, ':', DestinationPort)) | summarize Hits = count() by Destination, bin(TimeGenerated, {TimeRange:grain})",
                            "size": 1,
                            "showAnalytics": true,
                            "title": "Allowed hits by destination and port ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no matching events.",
                            "noDataMessageStyle": 2,
                            "timeContext": {
                              "durationMs": 14400000
                            },
                            "timeContextFromParameter": "TimeRange",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "visualization": "timechart",
                            "tileSettings": {
                              "showBorder": false
                            },
                            "chartSettings": {
                              "showLegend": true
                            }
                          },
                          "conditionalVisibility": {
                            "parameterName": "selectedNetRuleTab",
                            "comparison": "isEqualTo",
                            "value": "Statistics"
                          }
                        },
                        {
                          "type": 3,
                          "name": "NetRuleThreatIntelSearchQuery",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and Category == 'AzureFirewallNetworkRule' and OperationName == 'AzureFirewallThreatIntelLog'  | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | extend Protocol = extract(@'^([\\S]+)', 1, msg_s), Source = extract(@'request from ([^ :]+)', 1, msg_s), SourcePort = extract(@'request from ([^ :]+):([0-9]+)', 2, msg_s), Destination = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+)', 3, msg_s), DestinationPort = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+)', 4, msg_s), NATAction = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+) was ([\\S]+) to', 5, msg_s), NATDestination = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+) was ([\\S]+) to ([^ :]+)', 6, msg_s), NATDestinationPort = extract(@'request from ([^ :]+):([0-9]+) to ([^ :]+):([0-9]+) was ([\\S]+) to ([^ :]+):([0-9]+)', 7, msg_s), Action = extract(@'Action: ([\\w]+)', 1, msg_s), Message = extract(@'ThreatIntel: (.+)', 1, msg_s), Firewall = Resource | extend Action = iif(isempty(Action), NATAction, Action) | where '{AFAction:label}' == 'All' or Action == '{AFAction:label}' | where isempty('{SelectedSource}') or ('{SelectedSource}' !has ',' and Source =~ '{SelectedSource}') or ('{SelectedSource}' has ',' and Source in~ (split('{SelectedSource}', ','))) | where isempty('{SelectedDestination}') or ('{SelectedDestination}' !has ',' and Destination =~ '{SelectedDestination}') or ('{SelectedDestination}' has ',' and Destination in~ (split('{SelectedDestination}', ','))) | where isempty('{SelectedNATDestination}') or ('{SelectedNATDestination}' !has ',' and NATDestination =~ '{SelectedNATDestination}') or ('{SelectedNATDestination}' has ',' and NATDestination in~ (split('{SelectedNATDestination}', ','))) | where '{AFSourcePort:label}' == 'All' or SourcePort == '{AFSourcePort:label}' | where '{AFDestinationPort:label}' == 'All' or DestinationPort == '{AFDestinationPort:label}' or NATDestinationPort == '{AFDestinationPort:label}' | where '{AFProtocol:label}' == 'All' or Protocol == '{AFProtocol:label}' | summarize by TimeGenerated, Firewall, Action, Source, SourcePort, Destination, DestinationPort, NATDestination, NATDestinationPort, Protocol, Message, LogMessage = msg_s | sort by TimeGenerated desc",
                            "size": 2,
                            "showAnalytics": true,
                            "showExportToExcel": true,
                            "title": "Firewall network rule threat intel log ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no matching events.",
                            "noDataMessageStyle": 2,
                            "timeContext": {
                              "durationMs": 14400000
                            },
                            "timeContextFromParameter": "TimeRange",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "gridSettings": {
                              "rowLimit": 10000,
                              "filter": true
                            }
                          },
                          "conditionalVisibility": {
                            "parameterName": "selectedNetRuleTab",
                            "comparison": "isEqualTo",
                            "value": "ThreatIntel"
                          }
                        }
                      ]
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "AFNetRule"
                    }
                  },
                  {
                    "type": 12,
                    "name": "AFDnsProxyGroup",
                    "content": {
                      "version": "NotebookGroup/1.0",
                      "groupType": "editable",
                      "items": [
                        {
                          "type": 11,
                          "name": "DnsProxyLinks",
                          "content": {
                            "version": "LinkItem/1.0",
                            "style": "tabs",
                            "links": [
                              {
                                "id": "8bbc4316-cd19-4afb-a4f7-dc478306057f",
                                "cellValue": "selectedDnsProxyTab",
                                "linkTarget": "parameter",
                                "linkLabel": "Search",
                                "subTarget": "Search",
                                "style": "link"
                              },
                              {
                                "id": "8772d239-7029-478e-82bd-ebf7044a40c7",
                                "cellValue": "selectedDnsProxyTab",
                                "linkTarget": "parameter",
                                "linkLabel": "Statistics",
                                "subTarget": "Statistics",
                                "style": "link"
                              }
                            ]
                          }
                        },
                        {
                          "type": 3,
                          "name": "AFDnsProxySelectedClientQuery",
                          "customWidth": "50",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and Category == 'AzureFirewallDnsProxy' and OperationName == 'AzureFirewallDnsProxyLog' | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | parse msg_s with 'DNS Request: ' Client ':' ClientPort ' - ' QueryID ' ' RequestType ' ' RequestClass ' ' RequestName '. ' Protocol ' ' RequestSize ' ' EDNS0_DO ' ' EDNS0_Buffersize ' ' ResponseCode ' ' ResponseFlags ' ' ResponseSize ' ' ResponseDuration | join kind=leftouter (AzureNetworkAnalytics_CL | where SubType_s == 'Topology' and ResourceType in ('NetworkInterface', 'ApplicationGateway', 'VirtualNetworkGateway', 'LoadBalancer') | extend RGandName = split(iif(ResourceType == 'NetworkInterface' and isnotnull(VirtualMachine_s), VirtualMachine_s, Name_s), '/') | extend IPResourceId = strcat('/subscriptions/', Subscription_g, '/resourceGroups/', RGandName[0], '/providers/', iif(ResourceType == 'NetworkInterface' and isnotnull(VirtualMachine_s), 'Microsoft.Compute/virtualMachines/', strcat('Microsoft.Network/', ResourceType, 's/')), RGandName[1]) | extend IP = pack_array(PrivateFrontendIPs_s, PublicFrontendIPs_s, VIPAddress_s, PrivateIPAddresses_s, PublicIPAddresses_s, PublicIPs_s) | mv-expand IP | where isnotempty(IP) | summarize by IPResourceId, tostring(IP)) on $left.Client == $right.IP | summarize Hits = count() by Client, IPResourceId | project Hits, Client, Resource = IPResourceId | sort by Hits desc",
                            "size": 1,
                            "showAnalytics": true,
                            "showExportToExcel": true,
                            "title": "Select client ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no matching events.",
                            "noDataMessageStyle": 2,
                            "timeContext": {
                              "durationMs": 14400000
                            },
                            "timeContextFromParameter": "TimeRange",
                            "exportMultipleValues": true,
                            "exportedParameters": [
                              {
                                "fieldName": "Client",
                                "parameterName": "SelectedClient",
                                "parameterType": 1,
                                "quote": "",
                                "delimiter": ","
                              }
                            ],
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "gridSettings": {
                              "formatters": [
                                {
                                  "columnMatch": "Hits",
                                  "formatter": 8,
                                  "formatOptions": {
                                    "palette": "whiteBlack"
                                  },
                                  "numberFormat": {
                                    "unit": 17,
                                    "options": {
                                      "style": "decimal",
                                      "useGrouping": false,
                                      "maximumSignificantDigits": 4
                                    }
                                  }
                                }
                              ],
                              "rowLimit": 10000,
                              "filter": true
                            }
                          }
                        },
                        {
                          "type": 3,
                          "name": "AFDnsProxySelectedRequestNameQuery",
                          "customWidth": "50",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and Category == 'AzureFirewallDnsProxy' and OperationName == 'AzureFirewallDnsProxyLog' | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | parse msg_s with 'DNS Request: ' Client ':' ClientPort ' - ' QueryID ' ' RequestType ' ' RequestClass ' ' RequestName '. ' Protocol ' ' RequestSize ' ' EDNS0_DO ' ' EDNS0_Buffersize ' ' ResponseCode ' ' ResponseFlags ' ' ResponseSize ' ' ResponseDuration | where isempty('{SelectedClient}') or ('{SelectedClient}' !has ',' and Client =~ '{SelectedClient}') or ('{SelectedClient}' has ',' and Client in~ (split('{SelectedClient}', ','))) | summarize Hits = count() by RequestName | project Hits, RequestName | sort by Hits desc",
                            "size": 1,
                            "showAnalytics": true,
                            "showExportToExcel": true,
                            "title": "Select request name ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no matching events.",
                            "noDataMessageStyle": 2,
                            "timeContext": {
                              "durationMs": 14400000
                            },
                            "timeContextFromParameter": "TimeRange",
                            "exportMultipleValues": true,
                            "exportedParameters": [
                              {
                                "fieldName": "RequestName",
                                "parameterName": "SelectedRequestName",
                                "parameterType": 1,
                                "quote": "",
                                "delimiter": ","
                              }
                            ],
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "gridSettings": {
                              "formatters": [
                                {
                                  "columnMatch": "Hits",
                                  "formatter": 8,
                                  "formatOptions": {
                                    "palette": "whiteBlack"
                                  },
                                  "numberFormat": {
                                    "unit": 17,
                                    "options": {
                                      "style": "decimal",
                                      "useGrouping": false,
                                      "maximumSignificantDigits": 4
                                    }
                                  }
                                }
                              ],
                              "rowLimit": 10000,
                              "filter": true
                            }
                          }
                        },
                        {
                          "type": 9,
                          "name": "DnsProxyLogSearchParameters",
                          "content": {
                            "version": "KqlParameterItem/1.0",
                            "parameters": [
                              {
                                "id": "2c7f8035-b3e4-4b68-a760-b54409866544",
                                "version": "KqlParameterItem/1.0",
                                "name": "AFClientPort",
                                "label": "ClientPort",
                                "type": 1,
                                "timeContext": {
                                  "durationMs": 0
                                },
                                "timeContextFromParameter": "TimeRange",
                                "defaultValue": ""
                              },
                              {
                                "id": "fdb6569c-39a5-4250-971f-8cea4f6bd705",
                                "version": "KqlParameterItem/1.0",
                                "name": "AFRequestType",
                                "label": "RequestType",
                                "type": 2,
                                "isRequired": true,
                                "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and Category == 'AzureFirewallDnsProxy' and OperationName == 'AzureFirewallDnsProxyLog' | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | parse msg_s with 'DNS Request: ' Client ':' ClientPort ' - ' QueryID ' ' RequestType ' ' RequestClass ' ' RequestName '. ' Protocol ' ' RequestSize ' ' EDNS0_DO ' ' EDNS0_Buffersize ' ' ResponseCode ' ' ResponseFlags ' ' ResponseSize ' ' ResponseDuration | summarize by RequestType | sort by RequestType asc",
                                "typeSettings": {
                                  "additionalResourceOptions": [
                                    "value::all"
                                  ],
                                  "selectAllValue": "All",
                                  "showDefault": false
                                },
                                "timeContext": {
                                  "durationMs": 14400000
                                },
                                "timeContextFromParameter": "TimeRange",
                                "defaultValue": "value::all",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{Workspaces}"
                                ]
                              },
                              {
                                "id": "c78cff97-e8a6-4c47-ba2a-3ebb50e598ec",
                                "version": "KqlParameterItem/1.0",
                                "name": "AFRequestClass",
                                "label": "RequestClass",
                                "type": 2,
                                "isRequired": true,
                                "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and Category == 'AzureFirewallDnsProxy' and OperationName == 'AzureFirewallDnsProxyLog' | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | parse msg_s with 'DNS Request: ' Client ':' ClientPort ' - ' QueryID ' ' RequestType ' ' RequestClass ' ' RequestName '. ' Protocol ' ' RequestSize ' ' EDNS0_DO ' ' EDNS0_Buffersize ' ' ResponseCode ' ' ResponseFlags ' ' ResponseSize ' ' ResponseDuration | summarize by RequestClass | sort by RequestClass asc",
                                "typeSettings": {
                                  "additionalResourceOptions": [
                                    "value::all"
                                  ],
                                  "selectAllValue": "All",
                                  "showDefault": false
                                },
                                "timeContext": {
                                  "durationMs": 14400000
                                },
                                "timeContextFromParameter": "TimeRange",
                                "defaultValue": "value::all",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{Workspaces}"
                                ]
                              },
                              {
                                "id": "8740b6d2-b686-41bb-9a2f-3dfd14693eb4",
                                "version": "KqlParameterItem/1.0",
                                "name": "AFProtocol",
                                "label": "Protocol",
                                "type": 2,
                                "isRequired": true,
                                "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and Category == 'AzureFirewallDnsProxy' and OperationName == 'AzureFirewallDnsProxyLog' | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | parse msg_s with 'DNS Request: ' Client ':' ClientPort ' - ' QueryID ' ' RequestType ' ' RequestClass ' ' RequestName '. ' Protocol ' ' RequestSize ' ' EDNS0_DO ' ' EDNS0_Buffersize ' ' ResponseCode ' ' ResponseFlags ' ' ResponseSize ' ' ResponseDuration | summarize by Protocol | sort by Protocol asc",
                                "typeSettings": {
                                  "additionalResourceOptions": [
                                    "value::all"
                                  ],
                                  "selectAllValue": "All",
                                  "showDefault": false
                                },
                                "timeContext": {
                                  "durationMs": 14400000
                                },
                                "timeContextFromParameter": "TimeRange",
                                "defaultValue": "value::all",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{Workspaces}"
                                ]
                              }
                            ],
                            "style": "pills",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces"
                          },
                          "conditionalVisibility": {
                            "parameterName": "selectedDnsProxyTab",
                            "comparison": "isEqualTo",
                            "value": "Search"
                          }
                        },
                        {
                          "type": 3,
                          "name": "DnsProxySearchQuery",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and Category == 'AzureFirewallDnsProxy' and OperationName == 'AzureFirewallDnsProxyLog' | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | parse msg_s with 'DNS Request: ' Client ':' ClientPort ' - ' QueryID ' ' RequestType ' ' RequestClass ' ' RequestName '. ' Protocol ' ' RequestSize ' ' EDNS0_DO ' ' EDNS0_Buffersize ' ' ResponseCode ' ' ResponseFlags ' ' ResponseSize ' ' ResponseDuration | where isempty('{SelectedClient}') or ('{SelectedClient}' !has ',' and Client =~ '{SelectedClient}') or ('{SelectedClient}' has ',' and Client in~ (split('{SelectedClient}', ','))) | where isempty('{SelectedRequestName}') or ('{SelectedRequestName}' !has ',' and RequestName =~ '{SelectedRequestName}') or ('{SelectedRequestName}' has ',' and RequestName in~ (split('{SelectedRequestName}', ','))) | where '{AFClientPort}' == '' or ClientPort == '{AFClientPort:label}' | where '{AFRequestType:label}' == 'All' or RequestType == '{AFRequestType:label}' | where '{AFRequestClass:label}' == 'All' or RequestClass == '{AFRequestClass:label}' | where '{AFProtocol:label}' == 'All' or Protocol == '{AFProtocol:label}' | summarize by TimeGenerated, Firewall = Resource, Client, ClientPort, RequestType, RequestClass, RequestName, Protocol, QueryID, RequestSize, EDNS0_DO, EDNS0_Buffersize, ResponseCode, ResponseFlags, ResponseSize, ResponseDuration, LogMessage = msg_s | sort by TimeGenerated desc",
                            "size": 2,
                            "showAnalytics": true,
                            "showExportToExcel": true,
                            "title": "Firewall DNS proxy log ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no matching events.",
                            "noDataMessageStyle": 2,
                            "timeContext": {
                              "durationMs": 14400000
                            },
                            "timeContextFromParameter": "TimeRange",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "gridSettings": {
                              "rowLimit": 10000,
                              "filter": true
                            }
                          },
                          "conditionalVisibility": {
                            "parameterName": "selectedDnsProxyTab",
                            "comparison": "isEqualTo",
                            "value": "Search"
                          }
                        },
                        {
                          "type": 3,
                          "name": "AFDnsProxyFirewallPieQuery",
                          "customWidth": "25",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and Category == 'AzureFirewallDnsProxy' and OperationName == 'AzureFirewallDnsProxyLog' | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | parse msg_s with 'DNS Request: ' Client ':' ClientPort ' - ' QueryID ' ' RequestType ' ' RequestClass ' ' RequestName '. ' Protocol ' ' RequestSize ' ' EDNS0_DO ' ' EDNS0_Buffersize ' ' ResponseCode ' ' ResponseFlags ' ' ResponseSize ' ' ResponseDuration | where isempty('{SelectedClient}') or ('{SelectedClient}' !has ',' and Client =~ '{SelectedClient}') or ('{SelectedClient}' has ',' and Client in~ (split('{SelectedClient}', ','))) | where isempty('{SelectedRequestName}') or ('{SelectedRequestName}' !has ',' and RequestName =~ '{SelectedRequestName}') or ('{SelectedRequestName}' has ',' and RequestName in~ (split('{SelectedRequestName}', ','))) | summarize Hits = count() by Resource | project Hits, Firewall = Resource | sort by Hits",
                            "size": 0,
                            "showAnalytics": true,
                            "title": "Hits by firewall ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no matching events.",
                            "noDataMessageStyle": 2,
                            "timeContext": {
                              "durationMs": 0
                            },
                            "timeContextFromParameter": "TimeRange",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "visualization": "piechart"
                          },
                          "conditionalVisibility": {
                            "parameterName": "selectedDnsProxyTab",
                            "comparison": "isEqualTo",
                            "value": "Statistics"
                          }
                        },
                        {
                          "type": 3,
                          "name": "AFDnsProxyClientPieQuery",
                          "customWidth": "25",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and Category == 'AzureFirewallDnsProxy' and OperationName == 'AzureFirewallDnsProxyLog' | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | parse msg_s with 'DNS Request: ' Client ':' ClientPort ' - ' QueryID ' ' RequestType ' ' RequestClass ' ' RequestName '. ' Protocol ' ' RequestSize ' ' EDNS0_DO ' ' EDNS0_Buffersize ' ' ResponseCode ' ' ResponseFlags ' ' ResponseSize ' ' ResponseDuration | where isempty('{SelectedClient}') or ('{SelectedClient}' !has ',' and Client =~ '{SelectedClient}') or ('{SelectedClient}' has ',' and Client in~ (split('{SelectedClient}', ','))) | where isempty('{SelectedRequestName}') or ('{SelectedRequestName}' !has ',' and RequestName =~ '{SelectedRequestName}') or ('{SelectedRequestName}' has ',' and RequestName in~ (split('{SelectedRequestName}', ','))) | summarize Hits = count() by Client | project Hits, Client | sort by Hits",
                            "size": 0,
                            "showAnalytics": true,
                            "title": "Hits by client ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no matching events.",
                            "noDataMessageStyle": 2,
                            "timeContext": {
                              "durationMs": 0
                            },
                            "timeContextFromParameter": "TimeRange",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "visualization": "piechart"
                          },
                          "conditionalVisibility": {
                            "parameterName": "selectedDnsProxyTab",
                            "comparison": "isEqualTo",
                            "value": "Statistics"
                          }
                        },
                        {
                          "type": 3,
                          "name": "AFDnsProxyProtocolPieQuery",
                          "customWidth": "25",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and Category == 'AzureFirewallDnsProxy' and OperationName == 'AzureFirewallDnsProxyLog' | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | parse msg_s with 'DNS Request: ' Client ':' ClientPort ' - ' QueryID ' ' RequestType ' ' RequestClass ' ' RequestName '. ' Protocol ' ' RequestSize ' ' EDNS0_DO ' ' EDNS0_Buffersize ' ' ResponseCode ' ' ResponseFlags ' ' ResponseSize ' ' ResponseDuration | where isempty('{SelectedClient}') or ('{SelectedClient}' !has ',' and Client =~ '{SelectedClient}') or ('{SelectedClient}' has ',' and Client in~ (split('{SelectedClient}', ','))) | where isempty('{SelectedRequestName}') or ('{SelectedRequestName}' !has ',' and RequestName =~ '{SelectedRequestName}') or ('{SelectedRequestName}' has ',' and RequestName in~ (split('{SelectedRequestName}', ','))) | summarize Hits = count() by Protocol | project Hits, Protocol | sort by Hits desc",
                            "size": 0,
                            "showAnalytics": true,
                            "title": "Hits by protocol ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no matching events.",
                            "noDataMessageStyle": 2,
                            "timeContext": {
                              "durationMs": 0
                            },
                            "timeContextFromParameter": "TimeRange",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "visualization": "piechart"
                          },
                          "conditionalVisibility": {
                            "parameterName": "selectedDnsProxyTab",
                            "comparison": "isEqualTo",
                            "value": "Statistics"
                          }
                        },
                        {
                          "type": 3,
                          "name": "AFDnsProxyReqNamePieQuery",
                          "customWidth": "25",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and Category == 'AzureFirewallDnsProxy' and OperationName == 'AzureFirewallDnsProxyLog' | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | parse msg_s with 'DNS Request: ' Client ':' ClientPort ' - ' QueryID ' ' RequestType ' ' RequestClass ' ' RequestName '. ' Protocol ' ' RequestSize ' ' EDNS0_DO ' ' EDNS0_Buffersize ' ' ResponseCode ' ' ResponseFlags ' ' ResponseSize ' ' ResponseDuration | where isempty('{SelectedClient}') or ('{SelectedClient}' !has ',' and Client =~ '{SelectedClient}') or ('{SelectedClient}' has ',' and Client in~ (split('{SelectedClient}', ','))) | where isempty('{SelectedRequestName}') or ('{SelectedRequestName}' !has ',' and RequestName =~ '{SelectedRequestName}') or ('{SelectedRequestName}' has ',' and RequestName in~ (split('{SelectedRequestName}', ','))) | summarize Hits = count() by RequestName | project Hits, RequestName | sort by Hits desc",
                            "size": 0,
                            "showAnalytics": true,
                            "title": "Hits by RequestName ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no matching events.",
                            "noDataMessageStyle": 2,
                            "timeContext": {
                              "durationMs": 0
                            },
                            "timeContextFromParameter": "TimeRange",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "visualization": "piechart"
                          },
                          "conditionalVisibility": {
                            "parameterName": "selectedDnsProxyTab",
                            "comparison": "isEqualTo",
                            "value": "Statistics"
                          }
                        },
                        {
                          "type": 3,
                          "name": "AFDnsProxyReqClassPieQuery",
                          "customWidth": "25",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and Category == 'AzureFirewallDnsProxy' and OperationName == 'AzureFirewallDnsProxyLog' | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | parse msg_s with 'DNS Request: ' Client ':' ClientPort ' - ' QueryID ' ' RequestType ' ' RequestClass ' ' RequestName '. ' Protocol ' ' RequestSize ' ' EDNS0_DO ' ' EDNS0_Buffersize ' ' ResponseCode ' ' ResponseFlags ' ' ResponseSize ' ' ResponseDuration | where isempty('{SelectedClient}') or ('{SelectedClient}' !has ',' and Client =~ '{SelectedClient}') or ('{SelectedClient}' has ',' and Client in~ (split('{SelectedClient}', ','))) | where isempty('{SelectedRequestName}') or ('{SelectedRequestName}' !has ',' and RequestName =~ '{SelectedRequestName}') or ('{SelectedRequestName}' has ',' and RequestName in~ (split('{SelectedRequestName}', ',')))  | summarize Hits = count() by RequestClass | project Hits, RequestClass | sort by Hits desc",
                            "size": 0,
                            "showAnalytics": true,
                            "title": "Hits by request class ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no matching events.",
                            "noDataMessageStyle": 2,
                            "timeContext": {
                              "durationMs": 0
                            },
                            "timeContextFromParameter": "TimeRange",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "visualization": "piechart"
                          },
                          "conditionalVisibility": {
                            "parameterName": "selectedDnsProxyTab",
                            "comparison": "isEqualTo",
                            "value": "Statistics"
                          }
                        },
                        {
                          "type": 3,
                          "name": "AFDnsProxyRequestTypePieQuery",
                          "customWidth": "25",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and Category == 'AzureFirewallDnsProxy' and OperationName == 'AzureFirewallDnsProxyLog' | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | parse msg_s with 'DNS Request: ' Client ':' ClientPort ' - ' QueryID ' ' RequestType ' ' RequestClass ' ' RequestName '. ' Protocol ' ' RequestSize ' ' EDNS0_DO ' ' EDNS0_Buffersize ' ' ResponseCode ' ' ResponseFlags ' ' ResponseSize ' ' ResponseDuration | where isempty('{SelectedClient}') or ('{SelectedClient}' !has ',' and Client =~ '{SelectedClient}') or ('{SelectedClient}' has ',' and Client in~ (split('{SelectedClient}', ','))) | where isempty('{SelectedRequestName}') or ('{SelectedRequestName}' !has ',' and RequestName =~ '{SelectedRequestName}') or ('{SelectedRequestName}' has ',' and RequestName in~ (split('{SelectedRequestName}', ','))) | summarize Hits = count() by RequestType | project Hits, RequestType | sort by Hits",
                            "size": 0,
                            "showAnalytics": true,
                            "title": "Hits by request type ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no matching events.",
                            "noDataMessageStyle": 2,
                            "timeContext": {
                              "durationMs": 0
                            },
                            "timeContextFromParameter": "TimeRange",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "visualization": "piechart"
                          },
                          "conditionalVisibility": {
                            "parameterName": "selectedDnsProxyTab",
                            "comparison": "isEqualTo",
                            "value": "Statistics"
                          }
                        },
                        {
                          "type": 3,
                          "name": "AFDnsProxyResponseCodePieQuery",
                          "customWidth": "25",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and Category == 'AzureFirewallDnsProxy' and OperationName == 'AzureFirewallDnsProxyLog' | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | parse msg_s with 'DNS Request: ' Client ':' ClientPort ' - ' QueryID ' ' RequestType ' ' RequestClass ' ' RequestName '. ' Protocol ' ' RequestSize ' ' EDNS0_DO ' ' EDNS0_Buffersize ' ' ResponseCode ' ' ResponseFlags ' ' ResponseSize ' ' ResponseDuration | where isempty('{SelectedClient}') or ('{SelectedClient}' !has ',' and Client =~ '{SelectedClient}') or ('{SelectedClient}' has ',' and Client in~ (split('{SelectedClient}', ','))) | where isempty('{SelectedRequestName}') or ('{SelectedRequestName}' !has ',' and RequestName =~ '{SelectedRequestName}') or ('{SelectedRequestName}' has ',' and RequestName in~ (split('{SelectedRequestName}', ','))) | summarize Hits = count() by ResponseCode | project Hits, ResponseCode | sort by Hits",
                            "size": 0,
                            "showAnalytics": true,
                            "title": "Hits by response code ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no matching events.",
                            "noDataMessageStyle": 2,
                            "timeContext": {
                              "durationMs": 0
                            },
                            "timeContextFromParameter": "TimeRange",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "visualization": "piechart"
                          },
                          "conditionalVisibility": {
                            "parameterName": "selectedDnsProxyTab",
                            "comparison": "isEqualTo",
                            "value": "Statistics"
                          }
                        },
                        {
                          "type": 3,
                          "name": "AFDnsProxyFirewallTimeQuery",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and Category == 'AzureFirewallDnsProxy' and OperationName == 'AzureFirewallDnsProxyLog' | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | parse msg_s with 'DNS Request: ' Client ':' ClientPort ' - ' QueryID ' ' RequestType ' ' RequestClass ' ' RequestName '. ' Protocol ' ' RequestSize ' ' EDNS0_DO ' ' EDNS0_Buffersize ' ' ResponseCode ' ' ResponseFlags ' ' ResponseSize ' ' ResponseDuration | where isempty('{SelectedClient}') or ('{SelectedClient}' !has ',' and Client =~ '{SelectedClient}') or ('{SelectedClient}' has ',' and Client in~ (split('{SelectedClient}', ','))) | where isempty('{SelectedRequestName}') or ('{SelectedRequestName}' !has ',' and RequestName =~ '{SelectedRequestName}') or ('{SelectedRequestName}' has ',' and RequestName in~ (split('{SelectedRequestName}', ','))) | summarize Hits = count() by Firewall = Resource, bin(TimeGenerated, {TimeRange:grain})",
                            "size": 0,
                            "showAnalytics": true,
                            "title": "Hits by firewall ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no matching events.",
                            "noDataMessageStyle": 2,
                            "timeContext": {
                              "durationMs": 0
                            },
                            "timeContextFromParameter": "TimeRange",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "visualization": "linechart"
                          },
                          "conditionalVisibility": {
                            "parameterName": "selectedDnsProxyTab",
                            "comparison": "isEqualTo",
                            "value": "Statistics"
                          }
                        }
                      ]
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "AFDNSProxy"
                    }
                  },
                  {
                    "type": 12,
                    "name": "AFIDSGroup",
                    "content": {
                      "version": "NotebookGroup/1.0",
                      "groupType": "editable",
                      "items": [
                        {
                          "type": 11,
                          "name": "IDSLinks",
                          "content": {
                            "version": "LinkItem/1.0",
                            "style": "tabs",
                            "links": [
                              {
                                "id": "169619bf-caf1-4d2a-b0a2-e1806c197cff",
                                "cellValue": "selectedIDSTab",
                                "linkTarget": "parameter",
                                "linkLabel": "Search",
                                "subTarget": "Search",
                                "style": "link"
                              },
                              {
                                "id": "c086e5aa-9b1f-437d-8606-eca94903b587",
                                "cellValue": "selectedIDSTab",
                                "linkTarget": "parameter",
                                "linkLabel": "Statistics",
                                "subTarget": "Statistics",
                                "style": "link"
                              }
                            ]
                          }
                        },
                        {
                          "type": 3,
                          "name": "AFIDSSelectedSourceQuery",
                          "customWidth": "30",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and OperationName == 'AzureFirewallIDSLog' | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | parse msg_s with Protocol ' request from ' Source ':' SourcePort ' to ' Destination ':' DestinationPort '. Action: ' Action '. Signature: ' Signature '. IDS:' Message '. Priority:' Priority '. Classification:' Classification | join kind=leftouter (AzureNetworkAnalytics_CL | where SubType_s == 'Topology' and ResourceType in ('NetworkInterface', 'ApplicationGateway', 'VirtualNetworkGateway', 'LoadBalancer') | extend RGandName = split(iif(ResourceType == 'NetworkInterface' and isnotnull(VirtualMachine_s), VirtualMachine_s, Name_s), '/') | extend IPResourceId = strcat('/subscriptions/', Subscription_g, '/resourceGroups/', RGandName[0], '/providers/', iif(ResourceType == 'NetworkInterface' and isnotnull(VirtualMachine_s), 'Microsoft.Compute/virtualMachines/', strcat('Microsoft.Network/', ResourceType, 's/')), RGandName[1]) | extend IP = pack_array(PrivateFrontendIPs_s, PublicFrontendIPs_s, VIPAddress_s, PrivateIPAddresses_s, PublicIPAddresses_s, PublicIPs_s) | mv-expand IP | where isnotempty(IP) | summarize by IPResourceId, tostring(IP)) on $left.Source == $right.IP | summarize Hits = count() by Source, IPResourceId | project Hits, Source, Resource = IPResourceId | sort by Hits desc",
                            "size": 1,
                            "showAnalytics": true,
                            "showExportToExcel": true,
                            "title": "Select source ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no matching events.",
                            "noDataMessageStyle": 2,
                            "timeContext": {
                              "durationMs": 14400000
                            },
                            "timeContextFromParameter": "TimeRange",
                            "exportMultipleValues": true,
                            "exportedParameters": [
                              {
                                "fieldName": "Source",
                                "parameterName": "SelectedSource",
                                "parameterType": 1,
                                "quote": "",
                                "delimiter": ","
                              }
                            ],
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "gridSettings": {
                              "formatters": [
                                {
                                  "columnMatch": "Hits",
                                  "formatter": 8,
                                  "formatOptions": {
                                    "palette": "whiteBlack"
                                  },
                                  "numberFormat": {
                                    "unit": 17,
                                    "options": {
                                      "style": "decimal",
                                      "useGrouping": false,
                                      "maximumSignificantDigits": 4
                                    }
                                  }
                                }
                              ],
                              "rowLimit": 10000,
                              "filter": true
                            }
                          }
                        },
                        {
                          "type": 3,
                          "name": "AFIDSSelectedDestinationQuery",
                          "customWidth": "30",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and OperationName == 'AzureFirewallIDSLog' | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | parse msg_s with Protocol ' request from ' Source ':' SourcePort ' to ' Destination ':' DestinationPort '. Action: ' Action '. Signature: ' Signature '. IDS:' Message '. Priority:' Priority '. Classification:' Classification | where isempty('{SelectedSource}') or ('{SelectedSource}' !has ',' and Source =~ '{SelectedSource}') or ('{SelectedSource}' has ',' and Source in~ (split('{SelectedSource}', ','))) | summarize Hits = count() by Destination | project Hits, Destination | sort by Hits desc",
                            "size": 1,
                            "showAnalytics": true,
                            "showExportToExcel": true,
                            "title": "Select destination ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no matching events.",
                            "noDataMessageStyle": 2,
                            "timeContext": {
                              "durationMs": 14400000
                            },
                            "timeContextFromParameter": "TimeRange",
                            "exportMultipleValues": true,
                            "exportedParameters": [
                              {
                                "fieldName": "Destination",
                                "parameterName": "SelectedDestination",
                                "parameterType": 1,
                                "quote": "",
                                "delimiter": ","
                              }
                            ],
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "gridSettings": {
                              "formatters": [
                                {
                                  "columnMatch": "Hits",
                                  "formatter": 8,
                                  "formatOptions": {
                                    "palette": "whiteBlack"
                                  },
                                  "numberFormat": {
                                    "unit": 17,
                                    "options": {
                                      "style": "decimal",
                                      "useGrouping": false,
                                      "maximumSignificantDigits": 4
                                    }
                                  }
                                }
                              ],
                              "rowLimit": 10000,
                              "filter": true
                            }
                          }
                        },
                        {
                          "type": 9,
                          "name": "IDSLogSearchParameters",
                          "content": {
                            "version": "KqlParameterItem/1.0",
                            "parameters": [
                              {
                                "id": "50890a80-ca90-46fa-85e2-41d685638282",
                                "version": "KqlParameterItem/1.0",
                                "name": "AFAction",
                                "label": "Action",
                                "type": 10,
                                "isRequired": true,
                                "value": "All",
                                "typeSettings": {
                                  "additionalResourceOptions": [],
                                  "showDefault": false
                                },
                                "jsonData": "[\"All\",\"Allow\",\"Deny\"]",
                                "timeContext": {
                                  "durationMs": 0
                                },
                                "timeContextFromParameter": "TimeRange"
                              },
                              {
                                "id": "6b901d37-d503-47a0-836b-39b09767ee88",
                                "version": "KqlParameterItem/1.0",
                                "name": "AFSourcePort",
                                "label": "SourcePort",
                                "type": 2,
                                "isRequired": true,
                                "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and OperationName == 'AzureFirewallIDSLog' | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | parse msg_s with Protocol ' request from ' Source ':' SourcePort ' to ' Destination ':' DestinationPort '. Action: ' Action '. Signature: ' Signature '. IDS:' Message '. Priority:' Priority '. Classification:' Classification | where isempty('{SelectedSource}') or ('{SelectedSource}' !has ',' and Source =~ '{SelectedSource}') or ('{SelectedSource}' has ',' and Source in~ (split('{SelectedSource}', ','))) | where isempty('{SelectedDestination}') or ('{SelectedDestination}' !has ',' and Destination =~ '{SelectedDestination}') or ('{SelectedDestination}' has ',' and Destination in~ (split('{SelectedDestination}', ','))) | summarize by SourcePort | sort by SourcePort asc",
                                "typeSettings": {
                                  "additionalResourceOptions": [
                                    "value::all"
                                  ],
                                  "selectAllValue": "All",
                                  "showDefault": false
                                },
                                "timeContext": {
                                  "durationMs": 14400000
                                },
                                "timeContextFromParameter": "TimeRange",
                                "defaultValue": "value::all",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{Workspaces}"
                                ]
                              },
                              {
                                "id": "14b3b864-e1b1-4ac9-8c3e-2ab8cb63de3c",
                                "version": "KqlParameterItem/1.0",
                                "name": "AFDestinationPort",
                                "label": "DestinationPort",
                                "type": 2,
                                "isRequired": true,
                                "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and OperationName == 'AzureFirewallIDSLog' | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | parse msg_s with Protocol ' request from ' Source ':' SourcePort ' to ' Destination ':' DestinationPort '. Action: ' Action '. Signature: ' Signature '. IDS:' Message '. Priority:' Priority '. Classification:' Classification | where isempty('{SelectedSource}') or ('{SelectedSource}' !has ',' and Source =~ '{SelectedSource}') or ('{SelectedSource}' has ',' and Source in~ (split('{SelectedSource}', ','))) | where isempty('{SelectedDestination}') or ('{SelectedDestination}' !has ',' and Destination =~ '{SelectedDestination}') or ('{SelectedDestination}' has ',' and Destination in~ (split('{SelectedDestination}', ','))) | summarize by DestinationPort | sort by DestinationPort asc",
                                "typeSettings": {
                                  "additionalResourceOptions": [
                                    "value::all"
                                  ],
                                  "selectAllValue": "All",
                                  "showDefault": false
                                },
                                "timeContext": {
                                  "durationMs": 14400000
                                },
                                "timeContextFromParameter": "TimeRange",
                                "defaultValue": "value::all",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{Workspaces}"
                                ]
                              },
                              {
                                "id": "4bcef6d8-87ad-4d3e-a559-8a88385d34a1",
                                "version": "KqlParameterItem/1.0",
                                "name": "AFProtocol",
                                "label": "Protocol",
                                "type": 2,
                                "isRequired": true,
                                "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and OperationName == 'AzureFirewallIDSLog' | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | parse msg_s with Protocol ' request from ' Source ':' SourcePort ' to ' Destination ':' DestinationPort '. Action: ' Action '. Signature: ' Signature '. IDS:' Message '. Priority:' Priority '. Classification:' Classification | where isempty('{SelectedSource}') or ('{SelectedSource}' !has ',' and Source =~ '{SelectedSource}') or ('{SelectedSource}' has ',' and Source in~ (split('{SelectedSource}', ','))) | where isempty('{SelectedDestination}') or ('{SelectedDestination}' !has ',' and Destination =~ '{SelectedDestination}') or ('{SelectedDestination}' has ',' and Destination in~ (split('{SelectedDestination}', ','))) | summarize by Protocol | sort by Protocol asc",
                                "typeSettings": {
                                  "additionalResourceOptions": [
                                    "value::all"
                                  ],
                                  "selectAllValue": "All",
                                  "showDefault": false
                                },
                                "timeContext": {
                                  "durationMs": 14400000
                                },
                                "timeContextFromParameter": "TimeRange",
                                "defaultValue": "value::all",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{Workspaces}"
                                ]
                              }
                            ],
                            "style": "pills",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces"
                          },
                          "conditionalVisibility": {
                            "parameterName": "selectedIDSTab",
                            "comparison": "isEqualTo",
                            "value": "Search"
                          }
                        },
                        {
                          "type": 3,
                          "name": "IDSSearchQuery",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and OperationName == 'AzureFirewallIDSLog' | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | parse msg_s with Protocol ' request from ' Source ':' SourcePort ' to ' Destination ':' DestinationPort '. Action: ' Action '. Signature: ' Signature '. IDS:' Message '. Priority:' Priority '. Classification:' Classification | where isempty('{SelectedSource}') or ('{SelectedSource}' !has ',' and Source =~ '{SelectedSource}') or ('{SelectedSource}' has ',' and Source in~ (split('{SelectedSource}', ','))) | where isempty('{SelectedDestination}') or ('{SelectedDestination}' !has ',' and Destination =~ '{SelectedDestination}') or ('{SelectedDestination}' has ',' and Destination in~ (split('{SelectedDestination}', ','))) | where '{AFAction:label}' == 'All' or Action == '{AFAction:label}' | where '{AFSourcePort:label}' == 'All' or SourcePort == '{AFSourcePort:label}' | where '{AFDestinationPort:label}' == 'All' or DestinationPort == '{AFDestinationPort:label}' | where '{AFProtocol:label}' == 'All' or Protocol == '{AFProtocol:label}' | summarize by TimeGenerated, Firewall = Resource, Signature, Message, Priority, Classification, Action, Source, SourcePort, Destination, DestinationPort, Protocol, LogMessage = msg_s | sort by TimeGenerated desc",
                            "size": 2,
                            "showAnalytics": true,
                            "showExportToExcel": true,
                            "title": "Firewall intrusion detection and prevention system log ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no matching events.",
                            "noDataMessageStyle": 2,
                            "timeContext": {
                              "durationMs": 14400000
                            },
                            "timeContextFromParameter": "TimeRange",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "gridSettings": {
                              "rowLimit": 10000,
                              "filter": true
                            }
                          },
                          "conditionalVisibility": {
                            "parameterName": "selectedIDSTab",
                            "comparison": "isEqualTo",
                            "value": "Search"
                          }
                        },
                        {
                          "type": 3,
                          "name": "AFIDSPriorityPieQuery",
                          "customWidth": "25",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and OperationName == 'AzureFirewallIDSLog' | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | parse msg_s with Protocol ' request from ' Source ':' SourcePort ' to ' Destination ':' DestinationPort '. Action: ' Action '. Signature: ' Signature '. IDS:' Message '. Priority:' Priority '. Classification:' Classification | where isempty('{SelectedSource}') or ('{SelectedSource}' !has ',' and Source =~ '{SelectedSource}') or ('{SelectedSource}' has ',' and Source in~ (split('{SelectedSource}', ','))) | where isempty('{SelectedDestination}') or ('{SelectedDestination}' !has ',' and Destination =~ '{SelectedDestination}') or ('{SelectedDestination}' has ',' and Destination in~ (split('{SelectedDestination}', ','))) | summarize Hits = count() by Priority | project Hits, Priority | sort by Hits desc",
                            "size": 0,
                            "showAnalytics": true,
                            "title": "Hits by priority ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no matching events.",
                            "noDataMessageStyle": 2,
                            "timeContext": {
                              "durationMs": 0
                            },
                            "timeContextFromParameter": "TimeRange",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "visualization": "piechart"
                          },
                          "conditionalVisibility": {
                            "parameterName": "selectedIDSTab",
                            "comparison": "isEqualTo",
                            "value": "Statistics"
                          }
                        },
                        {
                          "type": 3,
                          "name": "AFIDSClassificationPieQuery",
                          "customWidth": "25",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and OperationName == 'AzureFirewallIDSLog' | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | parse msg_s with Protocol ' request from ' Source ':' SourcePort ' to ' Destination ':' DestinationPort '. Action: ' Action '. Signature: ' Signature '. IDS:' Message '. Priority:' Priority '. Classification:' Classification | where isempty('{SelectedSource}') or ('{SelectedSource}' !has ',' and Source =~ '{SelectedSource}') or ('{SelectedSource}' has ',' and Source in~ (split('{SelectedSource}', ','))) | where isempty('{SelectedDestination}') or ('{SelectedDestination}' !has ',' and Destination =~ '{SelectedDestination}') or ('{SelectedDestination}' has ',' and Destination in~ (split('{SelectedDestination}', ','))) | summarize Hits = count() by Classification | project Hits, Classification | sort by Hits desc",
                            "size": 0,
                            "showAnalytics": true,
                            "title": "Hits by classification ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no matching events.",
                            "noDataMessageStyle": 2,
                            "timeContext": {
                              "durationMs": 0
                            },
                            "timeContextFromParameter": "TimeRange",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "visualization": "piechart"
                          },
                          "conditionalVisibility": {
                            "parameterName": "selectedIDSTab",
                            "comparison": "isEqualTo",
                            "value": "Statistics"
                          }
                        },
                        {
                          "type": 3,
                          "name": "AFIDSActionPieQuery",
                          "customWidth": "25",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and OperationName == 'AzureFirewallIDSLog' | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | parse msg_s with Protocol ' request from ' Source ':' SourcePort ' to ' Destination ':' DestinationPort '. Action: ' Action '. Signature: ' Signature '. IDS:' Message '. Priority:' Priority '. Classification:' Classification | where isempty('{SelectedSource}') or ('{SelectedSource}' !has ',' and Source =~ '{SelectedSource}') or ('{SelectedSource}' has ',' and Source in~ (split('{SelectedSource}', ','))) | where isempty('{SelectedDestination}') or ('{SelectedDestination}' !has ',' and Destination =~ '{SelectedDestination}') or ('{SelectedDestination}' has ',' and Destination in~ (split('{SelectedDestination}', ','))) | summarize Hits = count() by Action | project Hits, Action | sort by Hits desc",
                            "size": 0,
                            "showAnalytics": true,
                            "title": "Hits by action ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no matching events.",
                            "noDataMessageStyle": 2,
                            "timeContext": {
                              "durationMs": 0
                            },
                            "timeContextFromParameter": "TimeRange",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "visualization": "piechart"
                          },
                          "conditionalVisibility": {
                            "parameterName": "selectedIDSTab",
                            "comparison": "isEqualTo",
                            "value": "Statistics"
                          }
                        },
                        {
                          "type": 3,
                          "name": "AFIDSProtocolPieQuery",
                          "customWidth": "25",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and OperationName == 'AzureFirewallIDSLog' | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | parse msg_s with Protocol ' request from ' Source ':' SourcePort ' to ' Destination ':' DestinationPort '. Action: ' Action '. Signature: ' Signature '. IDS:' Message '. Priority:' Priority '. Classification:' Classification | where isempty('{SelectedSource}') or ('{SelectedSource}' !has ',' and Source =~ '{SelectedSource}') or ('{SelectedSource}' has ',' and Source in~ (split('{SelectedSource}', ','))) | where isempty('{SelectedDestination}') or ('{SelectedDestination}' !has ',' and Destination =~ '{SelectedDestination}') or ('{SelectedDestination}' has ',' and Destination in~ (split('{SelectedDestination}', ','))) | summarize Hits = count() by Protocol | project Hits, Protocol | sort by Hits desc",
                            "size": 0,
                            "showAnalytics": true,
                            "title": "Hits by protocol ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no matching events.",
                            "noDataMessageStyle": 2,
                            "timeContext": {
                              "durationMs": 0
                            },
                            "timeContextFromParameter": "TimeRange",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "visualization": "piechart"
                          },
                          "conditionalVisibility": {
                            "parameterName": "selectedIDSTab",
                            "comparison": "isEqualTo",
                            "value": "Statistics"
                          }
                        },
                        {
                          "type": 3,
                          "name": "AFIDSSignaturePieQuery",
                          "customWidth": "25",
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "AzureDiagnostics | where ResourceType == 'AZUREFIREWALLS' and OperationName == 'AzureFirewallIDSLog' | where ('{Resource:label}' !has ',' and Resource =~ '{Resource:label}') or ('{Resource:label}' has ',' and Resource in~ (split('{Resource:label}', ', '))) | parse msg_s with Protocol ' request from ' Source ':' SourcePort ' to ' Destination ':' DestinationPort '. Action: ' Action '. Signature: ' Signature '. IDS:' Message '. Priority:' Priority '. Classification:' Classification | where isempty('{SelectedSource}') or ('{SelectedSource}' !has ',' and Source =~ '{SelectedSource}') or ('{SelectedSource}' has ',' and Source in~ (split('{SelectedSource}', ','))) | where isempty('{SelectedDestination}') or ('{SelectedDestination}' !has ',' and Destination =~ '{SelectedDestination}') or ('{SelectedDestination}' has ',' and Destination in~ (split('{SelectedDestination}', ','))) | summarize Hits = count() by Signature | project Hits, Signature | sort by Hits desc",
                            "size": 0,
                            "showAnalytics": true,
                            "title": "Hits by Signature ({$rowCount} in {$queryTime})",
                            "noDataMessage": "Found no matching events.",
                            "noDataMessageStyle": 2,
                            "timeContext": {
                              "durationMs": 0
                            },
                            "timeContextFromParameter": "TimeRange",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspaces}"
                            ],
                            "visualization": "piechart"
                          },
                          "conditionalVisibility": {
                            "parameterName": "selectedIDSTab",
                            "comparison": "isEqualTo",
                            "value": "Statistics"
                          }
                        }
                      ]
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "AFIDSIPS"
                    }
                  }
                ],
                "fallbackResourceIds": [
                  "Azure Monitor"
                ],
                "fromTemplateId": "sentinel-UserWorkbook",
                "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
              }
            }
          ]
        },
        "workspaceId": {
          "value": "[@_res.arm.workspace.id_@]"
        }
      }
    },
    { // Monitor Workbooks network
      "name": "res.arm.workbooks.network",
      "templatePath": "https://piacinnofactor.blob.core.windows.net/modules/res.arm.workbooks/2021-02-25/res.arm.workbooks.json",
      "canRedeploy": true,
      "force": false,
      "parameters": {
        "partnerCountry": {
          "value": "[#_central.partner.country_#]"
        },
        "workbooks": {
          "value": [
            { // Modified version of https://github.com/Azure/Azure-Sentinel/blob/master/Workbooks/AzureNetworkWatcher.json from commit fb82389 on 5 Feb 2020
              "displayName": "Azure Network",
              "content": {
                "version": "Notebook/1.0",
                "items": [
                  {
                    "type": 1,
                    "name": "MainTitle",
                    "content": {
                      "json": "## Azure Network\r\n---"
                    }
                  },
                  {
                    "type": 11,
                    "name": "MainLinks",
                    "customWidth": "60",
                    "content": {
                      "version": "LinkItem/1.0",
                      "style": "tabs",
                      "links": [
                        {
                          "id": "91d1e829-1620-49c2-9828-836836b0983a",
                          "cellValue": "selectedTab",
                          "linkTarget": "parameter",
                          "linkLabel": "Flow log search",
                          "subTarget": "LogSearch",
                          "preText": "Traffic flow log search",
                          "style": "link"
                        },
                        {
                          "id": "c1923a1b-0a33-475a-a342-f8c762b21d15",
                          "cellValue": "selectedTab",
                          "linkTarget": "parameter",
                          "linkLabel": "Traffic flow",
                          "subTarget": "TrafficFlows",
                          "style": "link"
                        },
                        {
                          "id": "cea85cd8-aed9-43cd-97fc-88abe7e17f09",
                          "cellValue": "selectedTab",
                          "linkTarget": "parameter",
                          "linkLabel": "Malicious traffic",
                          "subTarget": "MaliciousTraffic",
                          "style": "link"
                        }
                      ]
                    }
                  },
                  {
                    "type": 9,
                    "name": "MainParameters",
                    "customWidth": "40",
                    "content": {
                      "version": "KqlParameterItem/1.0",
                      "crossComponentResources": [
                        "value::selected"
                      ],
                      "parameters": [
                        {
                          "id": "01afeffb-5ade-42b4-8ce9-e648b880e5a5",
                          "version": "KqlParameterItem/1.0",
                          "name": "TimeRange",
                          "label": "Time range",
                          "type": 4,
                          "value": {
                            "durationMs": 14400000
                          },
                          "isRequired": true,
                          "isGlobal": true,
                          "typeSettings": {
                            "selectableValues": [
                              {
                                "durationMs": 300000
                              },
                              {
                                "durationMs": 900000
                              },
                              {
                                "durationMs": 1800000
                              },
                              {
                                "durationMs": 3600000
                              },
                              {
                                "durationMs": 14400000
                              },
                              {
                                "durationMs": 43200000
                              },
                              {
                                "durationMs": 86400000
                              },
                              {
                                "durationMs": 172800000
                              },
                              {
                                "durationMs": 259200000
                              },
                              {
                                "durationMs": 604800000
                              },
                              {
                                "durationMs": 1209600000
                              },
                              {
                                "durationMs": 2419200000
                              },
                              {
                                "durationMs": 2592000000
                              },
                              {
                                "durationMs": 5184000000
                              },
                              {
                                "durationMs": 7776000000
                              }
                            ],
                            "allowCustom": true
                          }
                        },
                        {
                          "id": "add90eb3-ff5f-4b19-9658-ff15c8043af5",
                          "version": "KqlParameterItem/1.0",
                          "name": "Workspaces",
                          "label": "Workspaces",
                          "type": 5,
                          "isRequired": true,
                          "multiSelect": true,
                          "quote": "'",
                          "delimiter": ",",
                          "query": "where type =~ 'microsoft.operationalinsights/workspaces' | project id, name | sort by name asc",
                          "crossComponentResources": [
                            "value::selected"
                          ],
                          "typeSettings": {
                            "additionalResourceOptions": [
                              "value::100"
                            ],
                            "showDefault": false
                          },
                          "defaultValue": "value::100",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources"
                        },
                        {
                          "id": "5084e141-6c56-4d7f-bd8a-09f7ef9af1bc",
                          "version": "KqlParameterItem/1.0",
                          "name": "Resource",
                          "label": "NSG",
                          "type": 5,
                          "isRequired": true,
                          "multiSelect": true,
                          "quote": "'",
                          "delimiter": ",",
                          "query": "where type =~ 'Microsoft.Network/networkSecurityGroups' | project id, name | sort by name asc",
                          "crossComponentResources": [
                            "value::selected"
                          ],
                          "typeSettings": {
                            "additionalResourceOptions": [
                              "value::100"
                            ],
                            "showDefault": false
                          },
                          "defaultValue": "value::100",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources"
                        }
                      ],
                      "style": "pills",
                      "queryType": 0,
                      "resourceType": "microsoft.resourcegraph/resources"
                    }
                  },
                  {
                    "type": 9,
                    "name": "LogSearchParameters",
                    "content": {
                      "version": "KqlParameterItem/1.0",
                      "parameters": [
                        {
                          "id": "9d990d39-4b77-43e2-84c7-58e6875e8cb0",
                          "version": "KqlParameterItem/1.0",
                          "name": "NSGRule",
                          "label": "Rule",
                          "type": 2,
                          "isRequired": true,
                          "multiSelect": true,
                          "quote": "'",
                          "delimiter": ",",
                          "query": "AzureNetworkAnalytics_CL | where SubType_s == 'FlowLog' | extend NSG = tostring(split(NSGList_s, '/')[-1]) | where ('{Resource:label}' !has ',' and NSG =~ '{Resource:label}') or ('{Resource:label}' has ',' and NSG in~ (split('{Resource:label}', ', '))) | distinct NSGRule_s | sort by NSGRule_s asc",
                          "typeSettings": {
                            "additionalResourceOptions": [
                              "value::all"
                            ],
                            "selectAllValue": "All",
                            "showDefault": false
                          },
                          "defaultValue": "value::all",
                          "timeContext": {
                            "durationMs": 0
                          },
                          "timeContextFromParameter": "TimeRange",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspaces}"
                          ]
                        },
                        {
                          "id": "b919b24f-4570-4be4-bcf8-774e87fb509f",
                          "version": "KqlParameterItem/1.0",
                          "name": "FlowDirection",
                          "label": "Direction",
                          "type": 10,
                          "description": "Traffic flow direction",
                          "isRequired": true,
                          "value": "All",
                          "typeSettings": {
                            "additionalResourceOptions": [],
                            "showDefault": false
                          },
                          "jsonData": "[\"All\",\"Inbound\",\"Outbound\"]",
                          "timeContext": {
                            "durationMs": 0
                          },
                          "timeContextFromParameter": "TimeRange"
                        },
                        {
                          "id": "44b0fb00-eaf6-4c1c-a524-9d086d808b25",
                          "version": "KqlParameterItem/1.0",
                          "name": "FlowAction",
                          "label": "Action",
                          "type": 10,
                          "description": "Rule Action",
                          "isRequired": true,
                          "value": "All",
                          "typeSettings": {
                            "additionalResourceOptions": [],
                            "showDefault": false
                          },
                          "jsonData": "[\"All\",\"Allow\",\"Deny\"]",
                          "timeContext": {
                            "durationMs": 0
                          },
                          "timeContextFromParameter": "TimeRange"
                        },
                        {
                          "id": "f8ff9505-474a-4034-bb28-e058a9e28157",
                          "version": "KqlParameterItem/1.0",
                          "name": "FlowSource",
                          "label": "Source",
                          "type": 1,
                          "timeContext": {
                            "durationMs": 0
                          },
                          "timeContextFromParameter": "TimeRange",
                          "value": ""
                        },
                        {
                          "id": "27f99fa6-0913-4a8c-89f4-4dbda4c8d1d3",
                          "version": "KqlParameterItem/1.0",
                          "name": "FlowDestination",
                          "label": "Destination",
                          "type": 1,
                          "timeContext": {
                            "durationMs": 0
                          },
                          "timeContextFromParameter": "TimeRange"
                        },
                        {
                          "id": "c5589993-3cd2-4fe1-b0a5-770575b16b7e",
                          "version": "KqlParameterItem/1.0",
                          "name": "FlowPort",
                          "label": "Port",
                          "type": 2,
                          "isRequired": true,
                          "query": "AzureNetworkAnalytics_CL | where SubType_s == 'FlowLog' | extend NSG = tostring(split(NSGList_s, '/')[-1]) | where ('{Resource:label}' !has ',' and NSG =~ '{Resource:label}') or ('{Resource:label}' has ',' and NSG in~ (split('{Resource:label}', ', '))) | distinct DestPort_d | project DestPort_d | sort by DestPort_d asc",
                          "typeSettings": {
                            "additionalResourceOptions": [
                              "value::all"
                            ],
                            "selectAllValue": "All",
                            "showDefault": false
                          },
                          "timeContext": {
                            "durationMs": 0
                          },
                          "timeContextFromParameter": "TimeRange",
                          "defaultValue": "value::all",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspaces}"
                          ]
                        },
                        {
                          "id": "a0965506-7896-4138-8547-d1fd4f3ae419",
                          "version": "KqlParameterItem/1.0",
                          "name": "FlowLayer4",
                          "label": "Layer 4",
                          "type": 10,
                          "isRequired": true,
                          "value": "All",
                          "typeSettings": {
                            "additionalResourceOptions": [],
                            "showDefault": false
                          },
                          "jsonData": "[\"All\",\"TCP\",\"UDP\"]",
                          "timeContext": {
                            "durationMs": 0
                          },
                          "timeContextFromParameter": "TimeRange"
                        },
                        {
                          "id": "a5bec35c-5d49-4f93-9819-b495ee2c750f",
                          "version": "KqlParameterItem/1.0",
                          "name": "FlowLayer7",
                          "label": "Layer 7",
                          "type": 2,
                          "isRequired": true,
                          "multiSelect": true,
                          "quote": "'",
                          "delimiter": ",",
                          "query": "AzureNetworkAnalytics_CL | where SubType_s == 'FlowLog' | extend NSG = tostring(split(NSGList_s, '/')[-1]) | where ('{Resource:label}' !has ',' and NSG =~ '{Resource:label}') or ('{Resource:label}' has ',' and NSG in~ (split('{Resource:label}', ', '))) | distinct L7Protocol_s | project L7Protocol_s | sort by L7Protocol_s asc",
                          "typeSettings": {
                            "additionalResourceOptions": [
                              "value::all"
                            ],
                            "selectAllValue": "All",
                            "showDefault": false
                          },
                          "timeContext": {
                            "durationMs": 0
                          },
                          "timeContextFromParameter": "TimeRange",
                          "defaultValue": "value::all",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspaces}"
                          ]
                        },
                        {
                          "id": "0e16370c-22df-4dfa-a389-4f7d82c4038e",
                          "version": "KqlParameterItem/1.0",
                          "name": "FlowType",
                          "label": "Flow type",
                          "type": 2,
                          "isRequired": true,
                          "multiSelect": true,
                          "quote": "'",
                          "delimiter": ",",
                          "query": "AzureNetworkAnalytics_CL | where SubType_s == 'FlowLog' | extend NSG = tostring(split(NSGList_s, '/')[-1]) | where ('{Resource:label}' !has ',' and NSG =~ '{Resource:label}') or ('{Resource:label}' has ',' and NSG in~ (split('{Resource:label}', ', '))) | distinct FlowType_s | project FlowType_s | sort by FlowType_s asc",
                          "typeSettings": {
                            "additionalResourceOptions": [
                              "value::all"
                            ],
                            "selectAllValue": "All",
                            "showDefault": false
                          },
                          "timeContext": {
                            "durationMs": 0
                          },
                          "timeContextFromParameter": "TimeRange",
                          "defaultValue": "value::all",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspaces}"
                          ]
                        }
                      ],
                      "style": "pills",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces"
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "LogSearch"
                    }
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "AzureNetworkAnalytics_CL | where SubType_s == 'FlowLog' | extend NSG = tostring(split(NSGList_s, '/')[-1]) | where ('{Resource:label}' !has ',' and NSG =~ '{Resource:label}') or ('{Resource:label}' has ',' and NSG in~ (split('{Resource:label}', ', '))) | extend FlowDirection = iff(FlowDirection_s == 'I', 'Inbound', 'Outbound'), Action = iif(FlowStatus_s == 'A', 'Allow', 'Deny'), Layer4 = iff(L4Protocol_s == 'T', 'TCP', iff(L4Protocol_s == 'U', 'UDP', tostring(L4Protocol_s))), PublicIP = split(PublicIPs_s, '|')[0] | extend Source = iif(isempty(SrcIP_s), PublicIP, SrcIP_s), Destination = iif(isempty(DestIP_s), PublicIP, DestIP_s) | where '{NSGRule:label}' == 'All' or ('{NSGRule:label}' contains ',' and NSGRule_s in (split('{NSGRule:label}', ', '))) or NSGRule_s == '{NSGRule:label}' | where '{FlowDirection:label}' == 'All' or FlowDirection == '{FlowDirection:label}' | where '{FlowAction:label}' == 'All' or Action == '{FlowAction:label}' | where isempty(\"{FlowSource}\") or Source like '{FlowSource:label}' | where isempty(\"{FlowDestination}\") or Destination like '{FlowDestination:label}' | where '{FlowPort:label}' == 'All' or DestPort_d == '{FlowPort:label}' | where '{FlowLayer4:label}' == 'All' or Layer4 == '{FlowLayer4:label}' | where '{FlowLayer7:label}' == 'All' or ('{FlowLayer7:label}' contains ',' and L7Protocol_s in (split('{FlowLayer7:label}', ', '))) or L7Protocol_s == '{FlowLayer7:label}' | where '{FlowType:label}' == 'All' or ('{FlowType:label}' contains ',' and FlowType_s in (split('{FlowType:label}', ', '))) or FlowType_s == '{FlowType:label}' | project TimeGenerated, NSG, Rule = NSGRule_s, FlowDirection, Action, Source, Destination, Port = DestPort_d, Layer4, Layer7 = L7Protocol_s, FlowType = FlowType_s | sort by TimeGenerated desc",
                      "size": 2,
                      "timeContext": {
                        "durationMs": 0
                      },
                      "timeContextFromParameter": "TimeRange",
                      "showAnalytics": true,
                      "showExportToExcel": true,
                      "title": "Azure network analytics flow log (query {$queryTime} rows {$rowCount})",
                      "noDataMessage": "Found no matching events.",
                      "noDataMessageStyle": 2,
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "crossComponentResources": [
                        "{Workspaces}"
                      ],
                      "gridSettings": {
                        "rowLimit": 10000,
                        "filter": true
                      }
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "LogSearch"
                    },
                    "name": "LogSearchQuery"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "AzureNetworkAnalytics_CL | where SubType_s == 'StatusMessage' and ComponentType_s == 'Topology' and Status_s == 'Completed' and ('{Resource:label}' == 'All' or ('{Resource:subscriptionid}' contains ',' and Subscription_g in~ (split('{Resource:subscriptionid}', ', '))) or Subscription_g == '{Resource:subscriptionid}') | project Subscription_g, DiscoveryRegion_s, TimeProcessed_t | where isnotempty(Subscription_g) and isnotempty(DiscoveryRegion_s) and isnotempty(TimeProcessed_t) | summarize arg_max(TimeProcessed_t, *) by Subscription_g | project Subscription_g, DiscoveryRegion_s, TimeProcessed_t | join kind = inner (AzureNetworkAnalytics_CL | where SubType_s == 'Topology' and ResourceType == 'NetworkInterface') on Subscription_g, DiscoveryRegion_s, TimeProcessed_t | project Subscription_g, Name_s, VMName = VirtualMachine_s | join kind = leftouter (AzureNetworkAnalytics_CL | where SubType_s == 'FlowLog' and not(isempty(NIC1_s)) | summarize AllowedOutFlows = sum(AllowedOutFlows_d), DeniedOutFlows = sum(DeniedOutFlows_d) by Subscription_g = Subscription1_g, Name_s = NIC1_s) on Subscription_g, Name_s | project-away Subscription_g1, Name_s1 | join kind = leftouter (AzureNetworkAnalytics_CL | where SubType_s == 'FlowLog' and not(isempty(NIC2_s)) | summarize AllowedInFlows = sum(AllowedInFlows_d), DeniedInFlows = sum(DeniedInFlows_d) by Subscription_g = Subscription2_g, Name_s = NIC2_s) on Subscription_g, Name_s | project-away Subscription_g1, Name_s1 | extend NICRGandName = split(Name_s, '/'), VMRGandName = split(VMName, '/') | extend NICResourceId = strcat('/subscriptions/', Subscription_g, '/resourceGroups/', NICRGandName[0], '/providers/Microsoft.Network/networkInterfaces/', NICRGandName[1]), VMResourceId = strcat('/subscriptions/', Subscription_g, '/resourceGroups/', VMRGandName[0], '/providers/Microsoft.Compute/virtualMachines/', VMRGandName[1]) | project VMResourceId, NICResourceId, AllowedOutFlows, DeniedOutFlows, AllowedInFlows, DeniedInFlows, Name_s | sort by AllowedOutFlows + DeniedOutFlows + AllowedInFlows + DeniedInFlows desc nulls last",
                      "size": 0,
                      "title": "Virtual machines (select to see traffic for one machine)",
                      "timeContext": {
                        "durationMs": 0
                      },
                      "timeContextFromParameter": "TimeRange",
                      "exportFieldName": "Name_s",
                      "exportParameterName": "SelectedNIC",
                      "exportDefaultValue": "All",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "crossComponentResources": [
                        "{Workspaces}"
                      ],
                      "gridSettings": {
                        "formatters": [
                          {
                            "columnMatch": "AllowedOutFlows",
                            "formatter": 4,
                            "formatOptions": {
                              "palette": "green",
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "DeniedOutFlows",
                            "formatter": 4,
                            "formatOptions": {
                              "palette": "orange",
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "AllowedInFlows",
                            "formatter": 4,
                            "formatOptions": {
                              "palette": "green",
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "DeniedInFlows",
                            "formatter": 4,
                            "formatOptions": {
                              "palette": "orange",
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "Name_s",
                            "formatter": 5
                          }
                        ],
                        "rowLimit": 25,
                        "filter": true
                      }
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "TrafficFlows"
                    },
                    "customWidth": "70",
                    "name": "NICVMQuery"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "AzureNetworkAnalytics_CL | where SubType_s == 'FlowLog' and ('{SelectedNIC}' == NIC1_s or '{SelectedNIC}' == 'All') | extend NSG = tostring(split(NSGList_s, '/')[-1]) | where ('{Resource:label}' !has ',' and NSG =~ '{Resource:label}') or ('{Resource:label}' has ',' and NSG in~ (split('{Resource:label}', ', '))) | summarize count() by FlowDirection = iff(FlowDirection_s == 'I', 'Inbound', 'Outbound')",
                      "size": 0,
                      "title": "Flow direction",
                      "timeContext": {
                        "durationMs": 0
                      },
                      "timeContextFromParameter": "TimeRange",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "crossComponentResources": [
                        "{Workspaces}"
                      ],
                      "visualization": "piechart"
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "TrafficFlows"
                    },
                    "customWidth": "30",
                    "name": "TrafficFlowDirectionQuery"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "AzureNetworkAnalytics_CL | where SubType_s == 'FlowLog' and ('{SelectedNIC}' == NIC1_s or '{SelectedNIC}' == 'All') | extend NSG = tostring(split(NSGList_s, '/')[-1]) | where ('{Resource:label}' !has ',' and NSG =~ '{Resource:label}') or ('{Resource:label}' has ',' and NSG in~ (split('{Resource:label}', ', '))) | summarize TotalFlows = count() by TimeGenerated, VM_s | extend VM = strcat(split(VM_s, '/')[1], ' (', split(VM_s, '/')[0], ')') | project TimeGenerated, VM, TotalFlows",
                      "size": 0,
                      "title": "Virtual machines total flows",
                      "timeContext": {
                        "durationMs": 0
                      },
                      "timeContextFromParameter": "TimeRange",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "crossComponentResources": [
                        "{Workspaces}"
                      ],
                      "visualization": "timechart",
                      "tileSettings": {
                        "showBorder": false,
                        "titleContent": {
                          "columnMatch": "VMResourceId",
                          "formatter": 1
                        },
                        "leftContent": {
                          "columnMatch": "TotalFlows",
                          "formatter": 12,
                          "formatOptions": {
                            "palette": "auto"
                          },
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "maximumSignificantDigits": 3,
                              "maximumFractionDigits": 2
                            }
                          }
                        }
                      },
                      "graphSettings": {
                        "type": 0,
                        "topContent": {
                          "columnMatch": "VMResourceId",
                          "formatter": 1
                        },
                        "centerContent": {
                          "columnMatch": "TotalFlows",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "maximumSignificantDigits": 3,
                              "maximumFractionDigits": 2
                            }
                          }
                        }
                      }
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "TrafficFlows"
                    },
                    "customWidth": "70",
                    "name": "VMQuery"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "AzureNetworkAnalytics_CL | where SubType_s == 'FlowLog' and ('{SelectedNIC}' == NIC1_s or '{SelectedNIC}' == 'All') | extend NSG = tostring(split(NSGList_s, '/')[-1]) | where ('{Resource:label}' !has ',' and NSG =~ '{Resource:label}') or ('{Resource:label}' has ',' and NSG in~ (split('{Resource:label}', ', '))) | summarize count() by FlowType_s",
                      "size": 0,
                      "title": "Flow types",
                      "timeContext": {
                        "durationMs": 0
                      },
                      "timeContextFromParameter": "TimeRange",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "crossComponentResources": [
                        "{Workspaces}"
                      ],
                      "visualization": "piechart"
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "TrafficFlows"
                    },
                    "customWidth": "30",
                    "name": "FlowTypesQuery"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "## Malicious actors"
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "MaliciousTraffic"
                    },
                    "name": "MaliciousTrafficTitle"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "AzureNetworkAnalytics_CL | where SubType_s == 'FlowLog' | extend NSG = tostring(split(NSGList_s, '/')[-1]) | where ('{Resource:label}' !has ',' and NSG =~ '{Resource:label}') or ('{Resource:label}' has ',' and NSG in~ (split('{Resource:label}', ', '))) | where FASchemaVersion_s == '2' and FlowType_s == 'MaliciousFlow' | extend Subnet1 = iif(FlowType_s in ('InterVNet', 'IntraVNet'), Subnet1_s, iif(FlowDirection_s == 'O',  Subnet_s, '' )), Subnet2 = iif(FlowType_s in ('InterVNet', 'IntraVNet'), Subnet2_s, iif(FlowDirection_s == 'I', Subnet_s, '' )) | extend VM1 = iif(FlowType_s in ('InterVNet','IntraVNet'), VM1_s, iif(FlowDirection_s == 'O', VM_s, '' )), VM2 = iif(FlowType_s in ('InterVNet','IntraVNet'), VM2_s, iif(FlowDirection_s == 'I', VM_s, '' )) | extend Subscription1 = iif(FlowType_s == 'InterVNet', Subscription1_g, iif(FlowType_s == 'IntraVNet' or FlowDirection_s == 'O', Subscription_g, '')), Subscription2 = iif(FlowType_s == 'InterVNet', Subscription2_g, iif(FlowType_s == 'IntraVNet' or FlowDirection_s == 'I', Subscription_g, '')) | extend NIC1 = iif(FlowType_s in ('InterVNet', 'IntraVNet'), NIC1_s, iif(FlowDirection_s == 'O', NIC_s, '')), NIC2 = iif(FlowType_s in ('InterVNet', 'IntraVNet'), NIC2_s, iif(FlowDirection_s == 'I', NIC_s, '')) | extend SrcIP = iif(isnotempty(SrcIP_s), SrcIP_s, iif(FlowDirection_s == 'O', VMIP_s, '')), Destination = iif(isnotempty(DestIP_s), DestIP_s, iif(FlowDirection_s == 'I', VMIP_s, '')) | extend CountryOrRegion = iif(FlowType_s == 'AzurePublic', AzureRegion_s, Country_s) | extend FlowDirection_s = iif(FlowType_s in ('InterVNet','IntraVNet'), '', FlowDirection_s) | where FlowDirection_s == 'I' | summarize FlowCount = sum(FlowCount_d), AllowedInFlows = sum(AllowedInFlows_d), DeniedInFlows = sum(DeniedInFlows_d) by IPAdress = strcat(SrcIP, ' (', CountryOrRegion, ')') | sort by AllowedInFlows desc",
                      "size": 0,
                      "title": "Malicious IP address communication",
                      "timeContext": {
                        "durationMs": 0
                      },
                      "timeContextFromParameter": "TimeRange",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "crossComponentResources": [
                        "{Workspaces}"
                      ],
                      "gridSettings": {
                        "formatters": [
                          {
                            "columnMatch": "FlowCount",
                            "formatter": 5,
                            "formatOptions": {
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "AllowedInFlows",
                            "formatter": 4,
                            "formatOptions": {
                              "palette": "red",
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "DeniedInFlows",
                            "formatter": 4,
                            "formatOptions": {
                              "palette": "red",
                              "showIcon": true
                            }
                          }
                        ]
                      }
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "MaliciousTraffic"
                    },
                    "customWidth": "50",
                    "name": "MaliciousCommunicationQuery"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "AzureNetworkAnalytics_CL | where SubType_s == 'FlowLog' | extend NSG = tostring(split(NSGList_s, '/')[-1]) | where ('{Resource:label}' !has ',' and NSG =~ '{Resource:label}') or ('{Resource:label}' has ',' and NSG in~ (split('{Resource:label}', ', '))) | where FASchemaVersion_s == '2' and FlowType_s == 'MaliciousFlow' | extend Subnet1 = iif(FlowType_s in ('InterVNet', 'IntraVNet'), Subnet1_s, iif(FlowDirection_s == 'O',  Subnet_s, '' )), Subnet2 = iif(FlowType_s in ('InterVNet', 'IntraVNet'), Subnet2_s, iif(FlowDirection_s == 'I', Subnet_s, '' )) | extend VM1 = iif(FlowType_s in ('InterVNet','IntraVNet'), VM1_s, iif(FlowDirection_s == 'O', VM_s, '' )), VM2 = iif(FlowType_s in ('InterVNet','IntraVNet'), VM2_s, iif(FlowDirection_s == 'I', VM_s, '')) | extend Subscription1 = iif(FlowType_s == 'InterVNet', Subscription1_g, iif(FlowType_s == 'IntraVNet' or FlowDirection_s == 'O', Subscription_g, '')), Subscription2 = iif(FlowType_s == 'InterVNet', Subscription2_g, iif(FlowType_s == 'IntraVNet' or FlowDirection_s == 'I', Subscription_g, '')) | extend NIC1 = iif(FlowType_s in ('InterVNet', 'IntraVNet'), NIC1_s, iif(FlowDirection_s == 'O', NIC_s, '')), NIC2 = iif(FlowType_s in ('InterVNet', 'IntraVNet'), NIC2_s, iif(FlowDirection_s == 'I', NIC_s, '')) | extend SrcIP = iif(isnotempty(SrcIP_s), SrcIP_s, iif(FlowDirection_s == 'O', VMIP_s, '')), Destination = iif(isnotempty(DestIP_s), DestIP_s, iif(FlowDirection_s == 'I', VMIP_s, '')) | extend CountryOrRegion = iif(FlowType_s == 'AzurePublic', AzureRegion_s, Country_s) | extend FlowDirection_s = iif(FlowType_s in ('InterVNet','IntraVNet'), '', FlowDirection_s) | where FlowDirection_s == 'I' | summarize FlowCount = sum(FlowCount_d) by Country = CountryOrRegion | sort by FlowCount desc",
                      "size": 0,
                      "title": "Traffic country of origin",
                      "timeContext": {
                        "durationMs": 0
                      },
                      "timeContextFromParameter": "TimeRange",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "crossComponentResources": [
                        "{Workspaces}"
                      ],
                      "visualization": "piechart"
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "MaliciousTraffic"
                    },
                    "customWidth": "50",
                    "name": "CountryOriginQuery"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "## Attacked resources"
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "MaliciousTraffic"
                    },
                    "name": "AttackedTitle"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "AzureNetworkAnalytics_CL | where SubType_s == 'FlowLog' | extend NSG = tostring(split(NSGList_s, '/')[-1]) | where ('{Resource:label}' !has ',' and NSG =~ '{Resource:label}') or ('{Resource:label}' has ',' and NSG in~ (split('{Resource:label}', ', '))) | where FASchemaVersion_s == '2' and FlowType_s == 'MaliciousFlow' | extend Subnet1 = iif(FlowType_s in ('InterVNet', 'IntraVNet'), Subnet1_s, iif(FlowDirection_s == 'O',  Subnet_s, '' )), Subnet2 = iif(FlowType_s in ('InterVNet', 'IntraVNet'), Subnet2_s, iif(FlowDirection_s == 'I', Subnet_s, '' )) | extend VM1 = iif(FlowType_s in ('InterVNet','IntraVNet'), VM1_s, iif(FlowDirection_s == 'O', VM_s, '' )), VM2 = iif(FlowType_s in ('InterVNet','IntraVNet'), VM2_s, iif(FlowDirection_s == 'I', VM_s, '' )) | extend Subscription1 = iif(FlowType_s == 'InterVNet', Subscription1_g, iif(FlowType_s == 'IntraVNet' or FlowDirection_s == 'O', Subscription_g, '')), Subscription2 = iif(FlowType_s == 'InterVNet', Subscription2_g, iif(FlowType_s == 'IntraVNet' or FlowDirection_s == 'I', Subscription_g, '')) | extend NIC1 = iif(FlowType_s in ('InterVNet', 'IntraVNet'), NIC1_s, iif(FlowDirection_s == 'O', NIC_s, '')), NIC2 = iif(FlowType_s in ('InterVNet', 'IntraVNet'), NIC2_s, iif(FlowDirection_s == 'I', NIC_s, '')) | extend SrcIP = iif(isnotempty(SrcIP_s), SrcIP_s, iif(FlowDirection_s == 'O', VMIP_s, '')), Destination = iif(isnotempty(DestIP_s), DestIP_s, iif(FlowDirection_s == 'I', VMIP_s, '')) | extend CountryOrRegion = iif(FlowType_s == 'AzurePublic', AzureRegion_s, Country_s) | extend FlowDirection_s = iif(FlowType_s in ('InterVNet','IntraVNet'), '', FlowDirection_s) | where FlowDirection_s == 'I' | summarize AllowedInFlows = sum(AllowedInFlows_d) by Computer = strcat(Destination, ' (', VM2, ' - ', Subscription2, ')') | sort by AllowedInFlows desc",
                      "size": 0,
                      "title": "Most attacked machines",
                      "timeContext": {
                        "durationMs": 0
                      },
                      "timeContextFromParameter": "TimeRange",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "crossComponentResources": [
                        "{Workspaces}"
                      ],
                      "visualization": "piechart"
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "MaliciousTraffic"
                    },
                    "customWidth": "50",
                    "name": "MostAttackedVMsQuery"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "AzureNetworkAnalytics_CL | where SubType_s == 'FlowLog' | extend NSG = tostring(split(NSGList_s, '/')[-1]) | where ('{Resource:label}' !has ',' and NSG =~ '{Resource:label}') or ('{Resource:label}' has ',' and NSG in~ (split('{Resource:label}', ', '))) | where FASchemaVersion_s == '2' and FlowType_s == 'MaliciousFlow' | extend Subnet1 = iif(FlowType_s in ('InterVNet', 'IntraVNet'), Subnet1_s, iif(FlowDirection_s == 'O',  Subnet_s, '' )), Subnet2 = iif(FlowType_s in ('InterVNet', 'IntraVNet'), Subnet2_s, iif(FlowDirection_s == 'I', Subnet_s, '' )) | extend VM1 = iif(FlowType_s in ('InterVNet','IntraVNet'), VM1_s, iif(FlowDirection_s == 'O', VM_s, '' )), VM2 = iif(FlowType_s in ('InterVNet','IntraVNet'), VM2_s, iif(FlowDirection_s == 'I', VM_s, '' )) | extend Subscription1 = iif(FlowType_s == 'InterVNet',Subscription1_g, iif(FlowType_s == 'IntraVNet' or FlowDirection_s == 'O', Subscription_g, '')), Subscription2 = iif(FlowType_s == 'InterVNet', Subscription2_g, iif(FlowType_s == 'IntraVNet' or FlowDirection_s == 'I', Subscription_g, '')) | extend NIC1 = iif(FlowType_s in ('InterVNet', 'IntraVNet'), NIC1_s, iif(FlowDirection_s == 'O', NIC_s, '')), NIC2 = iif(FlowType_s in ('InterVNet', 'IntraVNet'), NIC2_s, iif(FlowDirection_s == 'I', NIC_s, '')) | extend SrcIP = iif(isnotempty(SrcIP_s), SrcIP_s, iif(FlowDirection_s == 'O', VMIP_s, '')), Destination = iif(isnotempty(DestIP_s), DestIP_s, iif(FlowDirection_s == 'I', VMIP_s, '')) | extend CountryOrRegion = iif(FlowType_s == 'AzurePublic', AzureRegion_s, Country_s) | extend FlowDirection_s = iif(FlowType_s in ('InterVNet','IntraVNet'), '', FlowDirection_s) | where FlowDirection_s == 'I' | summarize AllowedInFlows = sum(AllowedInFlows_d) by Subnet = strcat(Subnet2, ' (', Subscription2, ')') | sort by AllowedInFlows desc",
                      "size": 0,
                      "title": "Most attacked subnets",
                      "timeContext": {
                        "durationMs": 0
                      },
                      "timeContextFromParameter": "TimeRange",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "crossComponentResources": [
                        "{Workspaces}"
                      ],
                      "visualization": "piechart"
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "MaliciousTraffic"
                    },
                    "customWidth": "50",
                    "name": "MostAttackedSubnetsQuery"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "AzureNetworkAnalytics_CL | where SubType_s == 'FlowLog' | extend NSG = tostring(split(NSGList_s, '/')[-1]) | where ('{Resource:label}' !has ',' and NSG =~ '{Resource:label}') or ('{Resource:label}' has ',' and NSG in~ (split('{Resource:label}', ', '))) | where FASchemaVersion_s == '2' and FlowType_s == 'MaliciousFlow' | extend Subnet1 = iif(FlowType_s in ('InterVNet', 'IntraVNet'), Subnet1_s, iif(FlowDirection_s == 'O',  Subnet_s, '' )), Subnet2 = iif(FlowType_s in ('InterVNet', 'IntraVNet'), Subnet2_s, iif(FlowDirection_s == 'I', Subnet_s, '' )) | extend VM1 = iif(FlowType_s in ('InterVNet','IntraVNet'), VM1_s, iif(FlowDirection_s == 'O', VM_s, '' )), VM2 = iif(FlowType_s in ('InterVNet','IntraVNet'), VM2_s, iif(FlowDirection_s == 'I', VM_s, '' )) | extend Subscription1 = iif(FlowType_s == 'InterVNet',Subscription1_g, iif(FlowType_s == 'IntraVNet' or FlowDirection_s == 'O', Subscription_g, '')), Subscription2 = iif(FlowType_s == 'InterVNet', Subscription2_g, iif(FlowType_s == 'IntraVNet' or FlowDirection_s == 'I', Subscription_g, '')) | extend NIC1 = iif(FlowType_s in ('InterVNet', 'IntraVNet'), NIC1_s, iif(FlowDirection_s == 'O', NIC_s, '')), NIC2 = iif(FlowType_s in ('InterVNet', 'IntraVNet'), NIC2_s, iif(FlowDirection_s == 'I', NIC_s, '')) | extend SrcIP = iif(isnotempty(SrcIP_s), SrcIP_s, iif(FlowDirection_s == 'O', VMIP_s, '')), Destination = iif(isnotempty(DestIP_s), DestIP_s, iif(FlowDirection_s == 'I', VMIP_s, '')) | extend CountryOrRegion = iif(FlowType_s == 'AzurePublic', AzureRegion_s, Country_s) | extend FlowDirection_s = iif(FlowType_s in ('InterVNet','IntraVNet'), '', FlowDirection_s) | where FlowDirection_s == 'I' | summarize FlowCount = sum(FlowCount_d), AllowedInFlows = sum(AllowedInFlows_d), DeniedInFlows = sum(DeniedInFlows_d) by IPAddress = Destination, VM = VM2, Subnet = Subnet2, Subscription = Subscription2 | sort by AllowedInFlows desc | project IPAddress, VM, VNet = strcat(split(Subnet,'/')[0], '/', split(Subnet,'/')[0]), Subscription, FlowCount, AllowedInFlows, DeniedInFlows | extend VM = strcat('/subscriptions/', Subscription, '/resourceGroups/', split(VM,'/')[0], '/providers/Microsoft.Compute/virtualMachines/', split(VM,'/')[1]) | extend VNet = strcat('/subscriptions/', Subscription, '/resourceGroups/', split(VNet,'/')[0], '/providers/Microsoft.Network/virtualNetworks/', split(VNet,'/')[1])",
                      "size": 0,
                      "title": "Attacked resources",
                      "timeContext": {
                        "durationMs": 0
                      },
                      "timeContextFromParameter": "TimeRange",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "crossComponentResources": [
                        "{Workspaces}"
                      ],
                      "gridSettings": {
                        "formatters": [
                          {
                            "columnMatch": "Subscription",
                            "formatter": 13,
                            "formatOptions": {
                              "linkTarget": null,
                              "showIcon": true
                            }
                          }
                        ]
                      }
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "MaliciousTraffic"
                    },
                    "name": "AttackedResourcesQuery"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "## Malicious traffic target protocols"
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "MaliciousTraffic"
                    },
                    "name": "MaliciousTrafficProtocolsTitle"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "AzureNetworkAnalytics_CL | where SubType_s == 'FlowLog' | extend NSG = tostring(split(NSGList_s, '/')[-1]) | where ('{Resource:label}' !has ',' and NSG =~ '{Resource:label}') or ('{Resource:label}' has ',' and NSG in~ (split('{Resource:label}', ', '))) | where FASchemaVersion_s == '2' and FlowType_s == 'MaliciousFlow' | extend Subnet1 = iif(FlowType_s in ('InterVNet', 'IntraVNet'), Subnet1_s, iif(FlowDirection_s == 'O',  Subnet_s, '' )), Subnet2 = iif(FlowType_s in ('InterVNet', 'IntraVNet'), Subnet2_s, iif(FlowDirection_s == 'I', Subnet_s, '' )) | extend VM1 = iif(FlowType_s in ('InterVNet','IntraVNet'), VM1_s, iif(FlowDirection_s == 'O', VM_s, '' )), VM2 = iif(FlowType_s in ('InterVNet','IntraVNet'), VM2_s, iif(FlowDirection_s == 'I', VM_s, '' )) | extend Subscription1 = iif(FlowType_s == 'InterVNet',Subscription1_g, iif(FlowType_s == 'IntraVNet' or FlowDirection_s == 'O', Subscription_g, '')), Subscription2 = iif(FlowType_s == 'InterVNet', Subscription2_g, iif(FlowType_s == 'IntraVNet' or FlowDirection_s == 'I', Subscription_g, '')) | extend NIC1 = iif(FlowType_s in ('InterVNet', 'IntraVNet'), NIC1_s, iif(FlowDirection_s == 'O', NIC_s, '')), NIC2 = iif(FlowType_s in ('InterVNet', 'IntraVNet'), NIC2_s, iif(FlowDirection_s == 'I', NIC_s, '')) | extend SrcIP = iif(isnotempty(SrcIP_s), SrcIP_s, iif(FlowDirection_s == 'O', VMIP_s, '')), Destination = iif(isnotempty(DestIP_s), DestIP_s, iif(FlowDirection_s == 'I', VMIP_s, '')) | extend CountryOrRegion = iif(FlowType_s == 'AzurePublic', AzureRegion_s, Country_s) | extend FlowDirection_s = iif(FlowType_s in ('InterVNet','IntraVNet'), '', FlowDirection_s) | where FlowDirection_s == 'I' | summarize FlowCount = sum(FlowCount_d), AllowedInFlows = sum(AllowedInFlows_d), DeniedInFlows = sum(DeniedInFlows_d) by L7Protocol = strcat(L7Protocol_s, ' (', toint(DestPort_d), ')') | sort by AllowedInFlows desc | limit 10",
                      "size": 0,
                      "title": "Malicious traffic, by application ports",
                      "timeContext": {
                        "durationMs": 0
                      },
                      "timeContextFromParameter": "TimeRange",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "crossComponentResources": [
                        "{Workspaces}"
                      ],
                      "gridSettings": {
                        "formatters": [
                          {
                            "columnMatch": "FlowCount",
                            "formatter": 4,
                            "formatOptions": {
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "AllowedInFlows",
                            "formatter": 4,
                            "formatOptions": {
                              "palette": "red",
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "DeniedInFlows",
                            "formatter": 4,
                            "formatOptions": {
                              "palette": "blue",
                              "showIcon": true
                            }
                          }
                        ]
                      }
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "MaliciousTraffic"
                    },
                    "name": "MaliciousTrafficApplicationPortsQuery"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "AzureNetworkAnalytics_CL | where SubType_s == 'FlowLog' | extend NSG = tostring(split(NSGList_s, '/')[-1]) | where ('{Resource:label}' !has ',' and NSG =~ '{Resource:label}') or ('{Resource:label}' has ',' and NSG in~ (split('{Resource:label}', ', '))) | where FASchemaVersion_s == '2' and FlowType_s == 'MaliciousFlow' | extend Subnet1 = iif(FlowType_s in ('InterVNet', 'IntraVNet'), Subnet1_s, iif(FlowDirection_s == 'O',  Subnet_s, '' )), Subnet2 = iif(FlowType_s in ('InterVNet', 'IntraVNet'), Subnet2_s, iif(FlowDirection_s == 'I', Subnet_s, '' )) | extend VM1 = iif(FlowType_s in ('InterVNet','IntraVNet'), VM1_s, iif(FlowDirection_s == 'O', VM_s, '' )), VM2 = iif(FlowType_s in ('InterVNet','IntraVNet'), VM2_s, iif(FlowDirection_s == 'I', VM_s, '' )) | extend Subscription1 = iif(FlowType_s == 'InterVNet',Subscription1_g, iif(FlowType_s == 'IntraVNet' or FlowDirection_s == 'O', Subscription_g, '')), Subscription2 = iif(FlowType_s == 'InterVNet', Subscription2_g, iif(FlowType_s == 'IntraVNet' or FlowDirection_s == 'I', Subscription_g, '')) | extend NIC1 = iif(FlowType_s in ('InterVNet', 'IntraVNet'), NIC1_s, iif(FlowDirection_s == 'O', NIC_s, '')), NIC2 = iif(FlowType_s in ('InterVNet', 'IntraVNet'), NIC2_s, iif(FlowDirection_s == 'I', NIC_s, '')) | extend SrcIP = iif(isnotempty(SrcIP_s), SrcIP_s, iif(FlowDirection_s == 'O', VMIP_s, '')), Destination = iif(isnotempty(DestIP_s), DestIP_s, iif(FlowDirection_s == 'I', VMIP_s, '')) | extend CountryOrRegion = iif(FlowType_s == 'AzurePublic', AzureRegion_s, Country_s) | extend FlowDirection_s = iif(FlowType_s in ('InterVNet','IntraVNet'), '', FlowDirection_s) | where FlowDirection_s == 'I' | summarize FlowCount = sum(FlowCount_d) by L4Protocol_s  | extend L4Protocol_s = replace('T', 'TCP', L4Protocol_s) | extend L4Protocol = replace('U', 'UDP', L4Protocol_s) | project L4Protocol , FlowCount",
                      "size": 0,
                      "title": "Malicious traffic protocols",
                      "timeContext": {
                        "durationMs": 0
                      },
                      "timeContextFromParameter": "TimeRange",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "crossComponentResources": [
                        "{Workspaces}"
                      ],
                      "visualization": "piechart"
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "MaliciousTraffic"
                    },
                    "customWidth": "33",
                    "name": "MaliciousTrafficProtocolsQuery"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "AzureNetworkAnalytics_CL | where SubType_s == 'FlowLog' | extend NSG = tostring(split(NSGList_s, '/')[-1]) | where ('{Resource:label}' !has ',' and NSG =~ '{Resource:label}') or ('{Resource:label}' has ',' and NSG in~ (split('{Resource:label}', ', '))) | where FASchemaVersion_s == '2' and FlowType_s == 'MaliciousFlow' | extend Subnet1 = iif(FlowType_s in ('InterVNet', 'IntraVNet'), Subnet1_s, iif(FlowDirection_s == 'O',  Subnet_s, '' )), Subnet2 = iif(FlowType_s in ('InterVNet', 'IntraVNet'), Subnet2_s, iif(FlowDirection_s == 'I', Subnet_s, '' )) | extend VM1 = iif(FlowType_s in ('InterVNet','IntraVNet'), VM1_s, iif(FlowDirection_s == 'O', VM_s, '' )), VM2 = iif(FlowType_s in ('InterVNet','IntraVNet'), VM2_s, iif(FlowDirection_s == 'I', VM_s, '' )) | extend Subscription1 = iif(FlowType_s == 'InterVNet',Subscription1_g, iif(FlowType_s == 'IntraVNet' or FlowDirection_s == 'O', Subscription_g, '')), Subscription2 = iif(FlowType_s == 'InterVNet', Subscription2_g, iif(FlowType_s == 'IntraVNet' or FlowDirection_s == 'I', Subscription_g, '')) | extend NIC1 = iif(FlowType_s in ('InterVNet', 'IntraVNet'), NIC1_s, iif(FlowDirection_s == 'O', NIC_s, '')), NIC2 = iif(FlowType_s in ('InterVNet', 'IntraVNet'), NIC2_s, iif(FlowDirection_s == 'I', NIC_s, '')) | extend SrcIP = iif(isnotempty(SrcIP_s), SrcIP_s, iif(FlowDirection_s == 'O', VMIP_s, '')), Destination = iif(isnotempty(DestIP_s), DestIP_s, iif(FlowDirection_s == 'I', VMIP_s, '')) | extend CountryOrRegion = iif(FlowType_s == 'AzurePublic', AzureRegion_s, Country_s) | extend FlowDirection_s = iif(FlowType_s in ('InterVNet','IntraVNet'), '', FlowDirection_s) | where FlowDirection_s == 'I' | summarize AllowedInFlows = sum(AllowedInFlows_d) by L4Protocol_s | sort by AllowedInFlows desc | extend L4Protocol_s = replace('T', 'TCP', L4Protocol_s) | extend L4Protocol = replace('U', 'UDP', L4Protocol_s) | project L4Protocol, AllowedInFlows",
                      "size": 0,
                      "title": "Allowed malicious traffic",
                      "timeContext": {
                        "durationMs": 0
                      },
                      "timeContextFromParameter": "TimeRange",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "crossComponentResources": [
                        "{Workspaces}"
                      ],
                      "visualization": "piechart"
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "MaliciousTraffic"
                    },
                    "customWidth": "33",
                    "name": "AllowedMaliciousTrafficQuery"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "AzureNetworkAnalytics_CL | where SubType_s == 'FlowLog' | extend NSG = tostring(split(NSGList_s, '/')[-1]) | where ('{Resource:label}' !has ',' and NSG =~ '{Resource:label}') or ('{Resource:label}' has ',' and NSG in~ (split('{Resource:label}', ', '))) | where FASchemaVersion_s == '2' and FlowType_s == 'MaliciousFlow' | extend Subnet1 = iif(FlowType_s in ('InterVNet', 'IntraVNet'), Subnet1_s, iif(FlowDirection_s == 'O',  Subnet_s, '' )), Subnet2 = iif(FlowType_s in ('InterVNet', 'IntraVNet'), Subnet2_s, iif(FlowDirection_s == 'I', Subnet_s, '' )) | extend VM1 = iif(FlowType_s in ('InterVNet','IntraVNet'), VM1_s, iif(FlowDirection_s == 'O', VM_s, '' )), VM2 = iif(FlowType_s in ('InterVNet','IntraVNet'), VM2_s, iif(FlowDirection_s == 'I', VM_s, '' )) | extend Subscription1 = iif(FlowType_s == 'InterVNet',Subscription1_g, iif(FlowType_s == 'IntraVNet' or FlowDirection_s == 'O', Subscription_g, '')), Subscription2 = iif(FlowType_s == 'InterVNet', Subscription2_g, iif(FlowType_s == 'IntraVNet' or FlowDirection_s == 'I', Subscription_g, '')) | extend NIC1 = iif(FlowType_s in ('InterVNet', 'IntraVNet'), NIC1_s, iif(FlowDirection_s == 'O', NIC_s, '')), NIC2 = iif(FlowType_s in ('InterVNet', 'IntraVNet'), NIC2_s, iif(FlowDirection_s == 'I', NIC_s, '')) | extend SrcIP = iif(isnotempty(SrcIP_s), SrcIP_s, iif(FlowDirection_s == 'O', VMIP_s, '')), Destination = iif(isnotempty(DestIP_s), DestIP_s, iif(FlowDirection_s == 'I', VMIP_s, '')) | extend CountryOrRegion = iif(FlowType_s == 'AzurePublic', AzureRegion_s, Country_s) | extend FlowDirection_s = iif(FlowType_s in ('InterVNet','IntraVNet'), '', FlowDirection_s) | where FlowDirection_s == 'I' | summarize DeniedInFlows = sum(DeniedInFlows_d) by L4Protocol_s | sort by DeniedInFlows desc | extend L4Protocol_s = replace('T', 'TCP', L4Protocol_s) | extend L4Protocol = replace('U', 'UDP', L4Protocol_s) | project L4Protocol, DeniedInFlows",
                      "size": 0,
                      "title": "Denied malicious traffic",
                      "timeContext": {
                        "durationMs": 0
                      },
                      "timeContextFromParameter": "TimeRange",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "crossComponentResources": [
                        "{Workspaces}"
                      ],
                      "visualization": "piechart"
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "MaliciousTraffic"
                    },
                    "customWidth": "33",
                    "name": "DeniedMaliciousTrafficQuery"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "AzureNetworkAnalytics_CL | where SubType_s == 'FlowLog' | extend NSG = tostring(split(NSGList_s, '/')[-1]) | where ('{Resource:label}' !has ',' and NSG =~ '{Resource:label}') or ('{Resource:label}' has ',' and NSG in~ (split('{Resource:label}', ', '))) | where FASchemaVersion_s == '2' and FlowType_s == 'MaliciousFlow' | extend Subnet1 = iif(FlowType_s in ('InterVNet', 'IntraVNet'), Subnet1_s, iif(FlowDirection_s == 'O',  Subnet_s, '' )), Subnet2 = iif(FlowType_s in ('InterVNet', 'IntraVNet'), Subnet2_s, iif(FlowDirection_s == 'I', Subnet_s, '' )) | extend VM1 = iif(FlowType_s in ('InterVNet','IntraVNet'), VM1_s, iif(FlowDirection_s == 'O', VM_s, '' )), VM2 = iif(FlowType_s in ('InterVNet','IntraVNet'), VM2_s, iif(FlowDirection_s == 'I', VM_s, '' )) | extend Subscription1 = iif(FlowType_s == 'InterVNet',Subscription1_g, iif(FlowType_s == 'IntraVNet' or FlowDirection_s == 'O', Subscription_g, '')), Subscription2 = iif(FlowType_s == 'InterVNet', Subscription2_g, iif(FlowType_s == 'IntraVNet' or FlowDirection_s == 'I', Subscription_g, '')) | extend NIC1 = iif(FlowType_s in ('InterVNet', 'IntraVNet'), NIC1_s, iif(FlowDirection_s == 'O', NIC_s, '')), NIC2 = iif(FlowType_s in ('InterVNet', 'IntraVNet'), NIC2_s, iif(FlowDirection_s == 'I', NIC_s, '')) | extend SrcIP = iif(isnotempty(SrcIP_s), SrcIP_s, iif(FlowDirection_s == 'O', VMIP_s, '')), Destination = iif(isnotempty(DestIP_s), DestIP_s, iif(FlowDirection_s == 'I', VMIP_s, '')) | extend CountryOrRegion = iif(FlowType_s == 'AzurePublic', AzureRegion_s, Country_s) | extend FlowDirection_s = iif(FlowType_s in ('InterVNet','IntraVNet'), '', FlowDirection_s) | where FlowDirection_s == 'I' | summarize FlowCount = sum(FlowCount_d) by L7Protocol = strcat(L7Protocol_s, ' (', toint(DestPort_d), ')') | sort by FlowCount desc | limit 10",
                      "size": 0,
                      "title": "Malicious traffic, by application port",
                      "timeContext": {
                        "durationMs": 0
                      },
                      "timeContextFromParameter": "TimeRange",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "crossComponentResources": [
                        "{Workspaces}"
                      ],
                      "visualization": "piechart"
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "MaliciousTraffic"
                    },
                    "customWidth": "33",
                    "name": "MaliciousTrafficApplicationPortQuery"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "AzureNetworkAnalytics_CL | where SubType_s == 'FlowLog' | extend NSG = tostring(split(NSGList_s, '/')[-1]) | where ('{Resource:label}' !has ',' and NSG =~ '{Resource:label}') or ('{Resource:label}' has ',' and NSG in~ (split('{Resource:label}', ', '))) | where FASchemaVersion_s == '2' and FlowType_s == 'MaliciousFlow' | extend Subnet1 = iif(FlowType_s in ('InterVNet', 'IntraVNet'), Subnet1_s, iif(FlowDirection_s == 'O',  Subnet_s, '' )), Subnet2 = iif(FlowType_s in ('InterVNet', 'IntraVNet'), Subnet2_s, iif(FlowDirection_s == 'I', Subnet_s, '' )) | extend VM1 = iif(FlowType_s in ('InterVNet','IntraVNet'), VM1_s, iif(FlowDirection_s == 'O', VM_s, '' )), VM2 = iif(FlowType_s in ('InterVNet','IntraVNet'), VM2_s, iif(FlowDirection_s == 'I', VM_s, '' )) | extend Subscription1 = iif(FlowType_s == 'InterVNet',Subscription1_g, iif(FlowType_s == 'IntraVNet' or FlowDirection_s == 'O', Subscription_g, '')), Subscription2 = iif(FlowType_s == 'InterVNet', Subscription2_g, iif(FlowType_s == 'IntraVNet' or FlowDirection_s == 'I', Subscription_g, '')) | extend NIC1 = iif(FlowType_s in ('InterVNet', 'IntraVNet'), NIC1_s, iif(FlowDirection_s == 'O', NIC_s, '')), NIC2 = iif(FlowType_s in ('InterVNet', 'IntraVNet'), NIC2_s, iif(FlowDirection_s == 'I', NIC_s, '')) | extend SrcIP = iif(isnotempty(SrcIP_s), SrcIP_s, iif(FlowDirection_s == 'O', VMIP_s, '')), Destination = iif(isnotempty(DestIP_s), DestIP_s, iif(FlowDirection_s == 'I', VMIP_s, '')) | extend CountryOrRegion = iif(FlowType_s == 'AzurePublic', AzureRegion_s, Country_s) | extend FlowDirection_s = iif(FlowType_s in ('InterVNet','IntraVNet'), '', FlowDirection_s) | where FlowDirection_s == 'I' | summarize AllowedInFlows = sum(AllowedInFlows_d) by L7Protocol = strcat(L7Protocol_s, ' (', toint(DestPort_d), ')')  | sort by AllowedInFlows desc | limit 10",
                      "size": 0,
                      "title": "Allowed malicious traffic, by application port",
                      "timeContext": {
                        "durationMs": 0
                      },
                      "timeContextFromParameter": "TimeRange",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "crossComponentResources": [
                        "{Workspaces}"
                      ],
                      "visualization": "piechart"
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "MaliciousTraffic"
                    },
                    "customWidth": "33",
                    "name": "AllowedMaliciousTrafficApplicationPortQuery"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "AzureNetworkAnalytics_CL | where SubType_s == 'FlowLog' | extend NSG = tostring(split(NSGList_s, '/')[-1]) | where ('{Resource:label}' !has ',' and NSG =~ '{Resource:label}') or ('{Resource:label}' has ',' and NSG in~ (split('{Resource:label}', ', '))) | where FASchemaVersion_s == '2' and FlowType_s == 'MaliciousFlow' | extend Subnet1 = iif(FlowType_s in ('InterVNet', 'IntraVNet'), Subnet1_s, iif(FlowDirection_s == 'O',  Subnet_s, '' )), Subnet2 = iif(FlowType_s in ('InterVNet', 'IntraVNet'), Subnet2_s, iif(FlowDirection_s == 'I', Subnet_s, '' )) | extend VM1 = iif(FlowType_s in ('InterVNet','IntraVNet'), VM1_s, iif(FlowDirection_s == 'O', VM_s, '' )), VM2 = iif(FlowType_s in ('InterVNet','IntraVNet'), VM2_s, iif(FlowDirection_s == 'I', VM_s, '' )) | extend Subscription1 = iif(FlowType_s == 'InterVNet',Subscription1_g, iif(FlowType_s == 'IntraVNet' or FlowDirection_s == 'O', Subscription_g, '')), Subscription2 = iif(FlowType_s == 'InterVNet', Subscription2_g, iif(FlowType_s == 'IntraVNet' or FlowDirection_s == 'I', Subscription_g, '')) | extend NIC1 = iif(FlowType_s in ('InterVNet', 'IntraVNet'), NIC1_s, iif(FlowDirection_s == 'O', NIC_s, '')), NIC2 = iif(FlowType_s in ('InterVNet', 'IntraVNet'), NIC2_s, iif(FlowDirection_s == 'I', NIC_s, '')) | extend SrcIP = iif(isnotempty(SrcIP_s), SrcIP_s, iif(FlowDirection_s == 'O', VMIP_s, '')), Destination = iif(isnotempty(DestIP_s), DestIP_s, iif(FlowDirection_s == 'I', VMIP_s, '')) | extend CountryOrRegion = iif(FlowType_s == 'AzurePublic', AzureRegion_s, Country_s) | extend FlowDirection_s = iif(FlowType_s in ('InterVNet','IntraVNet'), '', FlowDirection_s) | where FlowDirection_s == 'I' | summarize DeniedInFlows = sum(DeniedInFlows_d) by L7Protocol = strcat(L7Protocol_s, ' (', toint(DestPort_d), ')')  | sort by DeniedInFlows desc | limit 10",
                      "size": 0,
                      "title": "Denied malicious traffic, by application port",
                      "timeContext": {
                        "durationMs": 0
                      },
                      "timeContextFromParameter": "TimeRange",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "crossComponentResources": [
                        "{Workspaces}"
                      ],
                      "visualization": "piechart"
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "MaliciousTraffic"
                    },
                    "customWidth": "33",
                    "name": "DeniedMaliciousTrafficApplicationPortQuery"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "## NSG rule hits by malicious traffic"
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "MaliciousTraffic"
                    },
                    "name": "NSGHitsMaliciousTrafficTitle"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "AzureNetworkAnalytics_CL | where SubType_s == 'FlowLog' | extend NSG = tostring(split(NSGList_s, '/')[-1]) | where ('{Resource:label}' !has ',' and NSG =~ '{Resource:label}') or ('{Resource:label}' has ',' and NSG in~ (split('{Resource:label}', ', '))) | where FASchemaVersion_s == '2' and FlowType_s == 'MaliciousFlow' | extend nsgList = split(NSGList_s, ' ') | extend nsgRuleList = split(NSGRules_s, ' ') | mvexpand nsgRule = nsgRuleList | extend nsgRuleSplit = split(nsgRule, '|') | extend nsg = tostring(nsgList[toint(nsgRuleSplit[0])]), rule = tostring(nsgRuleSplit[1]), countHits = nsgRuleSplit[4], direction = tostring(nsgRuleSplit[2]) | extend prefixStrippedRule = replace('defaultrule_','', replace('userrule_','', rule)) | extend completeNsgRule = strcat(nsg, '/', prefixStrippedRule) | where direction == 'I' and FlowStatus_s  == 'A' | summarize rule_hits = sum(toint(countHits)) by nsg, rule, Source = iif(isempty(SrcIP_s), 'N/A', SrcIP_s), Destination = iif(isempty(DestIP_s), 'N/A', DestIP_s), Country = iif(isempty(Country_s), 'N/A', Country_s), Region = iif(isempty(Region_s), 'N/A', Region_s), Subnet = iif(isempty(Subnet_s), 'N/A', Subnet_s), NIC = iif(isempty(NIC_s), 'N/A', NIC_s) | summarize TotalHits = sum(rule_hits) by FullRule = strcat(nsg, '/', rule) | sort by TotalHits desc",
                      "size": 0,
                      "title": "NSG rules allowing inbound malicious traffic",
                      "timeContext": {
                        "durationMs": 0
                      },
                      "timeContextFromParameter": "TimeRange",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "crossComponentResources": [
                        "{Workspaces}"
                      ],
                      "visualization": "categoricalbar"
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "MaliciousTraffic"
                    },
                    "customWidth": "40",
                    "name": "NSGAllowingInboundMaliciousTrafficBarQuery"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "AzureNetworkAnalytics_CL | where SubType_s == 'FlowLog' | extend NSG = tostring(split(NSGList_s, '/')[-1]) | where ('{Resource:label}' !has ',' and NSG =~ '{Resource:label}') or ('{Resource:label}' has ',' and NSG in~ (split('{Resource:label}', ', '))) | where FASchemaVersion_s == '2' and FlowType_s == 'MaliciousFlow' | extend nsgList = split(NSGList_s, ' ') | extend nsgRuleList = split(NSGRules_s, ' ') | mvexpand nsgRule = nsgRuleList | extend nsgRuleSplit = split(nsgRule, '|') | extend nsg = tostring(nsgList[toint(nsgRuleSplit[0])]), rule = tostring(nsgRuleSplit[1]), countHits = nsgRuleSplit[4], direction = tostring(nsgRuleSplit[2]) | extend prefixStrippedRule = replace('defaultrule_','', replace('userrule_','', rule)) | extend completeNsgRule = strcat(nsg, '/', prefixStrippedRule) | where direction == 'I' and FlowStatus_s  == 'A' | summarize rule_hits = sum(toint(countHits)) by nsg, rule, Source = iif(isempty(SrcIP_s), 'N/A', SrcIP_s), Destination = iif(isempty(DestIP_s), 'N/A', DestIP_s), Country = iif(isempty(Country_s), 'N/A', Country_s), Region = iif(isempty(Region_s), 'N/A', Region_s), Subnet = iif(isempty(Subnet_s), 'N/A', Subnet_s), NIC = iif(isempty(NIC_s), 'N/A', NIC_s) | summarize TotalHits = sum(rule_hits) by nsg, rule | sort by TotalHits desc | extend nsg = strcat('/subscriptions/', split(nsg, '/')[0], '/resourceGroups/', split(nsg, '/')[1], '/providers/Microsoft.Network/networkSecurityGroups/', split(nsg, '/')[2])",
                      "size": 0,
                      "title": "NSG rules allowing inbound malicious traffic",
                      "timeContext": {
                        "durationMs": 0
                      },
                      "timeContextFromParameter": "TimeRange",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "crossComponentResources": [
                        "{Workspaces}"
                      ],
                      "gridSettings": {
                        "formatters": [
                          {
                            "columnMatch": "TotalHits",
                            "formatter": 4,
                            "formatOptions": {
                              "palette": "red",
                              "showIcon": true
                            }
                          }
                        ]
                      }
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "MaliciousTraffic"
                    },
                    "customWidth": "60",
                    "name": "NSGAllowingInboundMaliciousTrafficQuery"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "AzureNetworkAnalytics_CL | where SubType_s == 'FlowLog' | extend NSG = tostring(split(NSGList_s, '/')[-1]) | where ('{Resource:label}' !has ',' and NSG =~ '{Resource:label}') or ('{Resource:label}' has ',' and NSG in~ (split('{Resource:label}', ', '))) | where FASchemaVersion_s == '2' and FlowType_s == 'MaliciousFlow' | extend nsgList = split(NSGList_s, ' ') | extend nsgRuleList = split(NSGRules_s, ' ') | mvexpand nsgRule = nsgRuleList | extend nsgRuleSplit = split(nsgRule, '|') | extend nsg = tostring(nsgList[toint(nsgRuleSplit[0])]), rule = tostring(nsgRuleSplit[1]), countHits = nsgRuleSplit[4], direction = tostring(nsgRuleSplit[2]) | extend prefixStrippedRule = replace('defaultrule_','', replace('userrule_','', rule)) | extend completeNsgRule = strcat(nsg, '/', prefixStrippedRule) | where direction == 'I' and FlowStatus_s  == 'D' | summarize rule_hits = sum(toint(countHits)) by nsg, rule, Source = iif(isempty(SrcIP_s), 'N/A', SrcIP_s), Destination = iif(isempty(DestIP_s), 'N/A', DestIP_s), Country = iif(isempty(Country_s), 'N/A', Country_s), Region = iif(isempty(Region_s), 'N/A', Region_s), Subnet = iif(isempty(Subnet_s), 'N/A', Subnet_s), NIC = iif(isempty(NIC_s), 'N/A', NIC_s) | summarize TotalHits = sum(rule_hits) by FullRule = strcat(nsg, '/', rule) | sort by TotalHits desc",
                      "size": 0,
                      "title": "NSG rules denying inbound malicious traffic",
                      "timeContext": {
                        "durationMs": 0
                      },
                      "timeContextFromParameter": "TimeRange",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "crossComponentResources": [
                        "{Workspaces}"
                      ],
                      "visualization": "categoricalbar"
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "MaliciousTraffic"
                    },
                    "customWidth": "40",
                    "name": "NSGDenyingInboundMaliciousTrafficBarQuery"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "AzureNetworkAnalytics_CL | where SubType_s == 'FlowLog' | extend NSG = tostring(split(NSGList_s, '/')[-1]) | where ('{Resource:label}' !has ',' and NSG =~ '{Resource:label}') or ('{Resource:label}' has ',' and NSG in~ (split('{Resource:label}', ', '))) | where FASchemaVersion_s == '2' and FlowType_s == 'MaliciousFlow' | extend nsgList = split(NSGList_s, ' ') | extend nsgRuleList = split(NSGRules_s, ' ') | mvexpand nsgRule = nsgRuleList | extend nsgRuleSplit = split(nsgRule, '|') | extend nsg = tostring(nsgList[toint(nsgRuleSplit[0])]), rule = tostring(nsgRuleSplit[1]), countHits = nsgRuleSplit[4], direction = tostring(nsgRuleSplit[2]) | extend prefixStrippedRule = replace('defaultrule_','', replace('userrule_','', rule)) | extend completeNsgRule = strcat(nsg, '/', prefixStrippedRule) | where direction == 'I' and FlowStatus_s  == 'D' | summarize rule_hits = sum(toint(countHits)) by nsg, rule, Source = iif(isempty(SrcIP_s), 'N/A', SrcIP_s), Destination = iif(isempty(DestIP_s), 'N/A', DestIP_s), Country = iif(isempty(Country_s), 'N/A', Country_s), Region = iif(isempty(Region_s), 'N/A', Region_s), Subnet = iif(isempty(Subnet_s), 'N/A', Subnet_s), NIC = iif(isempty(NIC_s), 'N/A', NIC_s) | summarize TotalHits = sum(rule_hits) by nsg, rule | sort by TotalHits desc | extend nsg = strcat('/subscriptions/', split(nsg, '/')[0], '/resourceGroups/', split(nsg, '/')[1], '/providers/Microsoft.Network/networkSecurityGroups/', split(nsg, '/')[2])",
                      "size": 0,
                      "title": "NSG rules denying inbound malicious traffic",
                      "timeContext": {
                        "durationMs": 0
                      },
                      "timeContextFromParameter": "TimeRange",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "crossComponentResources": [
                        "{Workspaces}"
                      ],
                      "gridSettings": {
                        "formatters": [
                          {
                            "columnMatch": "TotalHits",
                            "formatter": 4,
                            "formatOptions": {
                              "palette": "blue",
                              "showIcon": true
                            }
                          }
                        ]
                      }
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "MaliciousTraffic"
                    },
                    "customWidth": "60",
                    "name": "NSGDenyingInboundMaliciousTrafficQuery"
                  }
                ],
                "fallbackResourceIds": [
                  "Azure Monitor"
                ],
                "fromTemplateId": "sentinel-AzureNetworkWatcher",
                "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
              }
            }
          ]
        },
        "workspaceId": {
          "value": "[@_res.arm.workspace.id_@]"
        }
      }
    },
    { // Monitor Workbooks
      "name": "res.arm.workbooks",
      "templatePath": "https://piacinnofactor.blob.core.windows.net/modules/res.arm.workbooks/2021-02-25/res.arm.workbooks.json",
      "canRedeploy": true,
      "force": false,
      "parameters": {
        "partnerCountry": {
          "value": "[#_central.partner.country_#]"
        },
        "workbooks": {
          "value": [
            { // VDC Virtual Machine Health
              "displayName": "VDC Virtual Machine Health",
              "content": {
                "version": "Notebook/1.0",
                "items": [
                  {
                    "type": 9,
                    "content": {
                      "version": "KqlParameterItem/1.0",
                      "parameters": [
                        {
                          "id": "c4b69c01-2263-4ada-8d9c-43433b739ff3",
                          "version": "KqlParameterItem/1.0",
                          "isRequired": true,
                          "type": 4,
                          "name": "TimeRange",
                          "label": "Time range",
                          "value": {
                            "durationMs": 14400000
                          },
                          "resourceType": "microsoft.insights/components",
                          "typeSettings": {
                            "selectableValues": [
                              {
                                "durationMs": 300000
                              },
                              {
                                "durationMs": 900000
                              },
                              {
                                "durationMs": 1800000
                              },
                              {
                                "durationMs": 3600000
                              },
                              {
                                "durationMs": 14400000
                              },
                              {
                                "durationMs": 43200000
                              },
                              {
                                "durationMs": 86400000
                              },
                              {
                                "durationMs": 172800000
                              },
                              {
                                "durationMs": 259200000
                              },
                              {
                                "durationMs": 604800000
                              },
                              {
                                "durationMs": 1209600000
                              },
                              {
                                "durationMs": 2419200000
                              },
                              {
                                "durationMs": 2592000000
                              },
                              {
                                "durationMs": 5184000000
                              },
                              {
                                "durationMs": 7776000000
                              }
                            ]
                          }
                        },
                        {
                          "version": "KqlParameterItem/1.0",
                          "isRequired": true,
                          "label": "Unhealthy Criteria",
                          "jsonData": "[\r\n    { \"value\":\"1m\", \"label\":\"1 minute without heartbeat\", \"selected\":false },\r\n    { \"value\":\"5m\", \"label\":\"5 minutes without heartbeat\", \"selected\":false },\r\n    { \"value\":\"30m\", \"label\":\"30 minutes without heartbeat\", \"selected\":false },\r\n    { \"value\":\"1h\", \"label\":\"1 hour without heartbeat\", \"selected\":true },\r\n    { \"value\":\"2h\", \"label\":\"2 hours without heartbeat\", \"selected\":false },\r\n    { \"value\":\"8h\", \"label\":\"8 hours without heartbeat\", \"selected\":false },\r\n    { \"value\":\"1d\", \"label\":\"1 day without heartbeat\", \"selected\":false },\r\n    { \"value\":\"2d\", \"label\":\"2 days without heartbeat\", \"selected\":false },\r\n    { \"value\":\"7d\", \"label\":\"7 days without heartbeat\", \"selected\":false }\r\n]",
                          "id": "c4d8d055-6dbe-451b-bf64-2be8d9e21fd8",
                          "name": "UnhealthyCriteria",
                          "type": 2,
                          "typeSettings": {
                            "additionalResourceOptions": []
                          }
                        },
                        {
                          "name": "HasHeartbeat",
                          "isHiddenWhenLocked": true,
                          "id": "819e30a0-df07-4a23-b40e-7536c6323f38",
                          "query": "Heartbeat\r\n| take 1\r\n| summarize count() ",
                          "typeSettings": {
                            "additionalResourceOptions": [
                              "value::1"
                            ]
                          },
                          "version": "KqlParameterItem/1.0",
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "isRequired": true,
                          "queryType": 0,
                          "type": 2,
                          "value": "value::1"
                        }
                      ],
                      "style": "pills",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces"
                    },
                    "name": "parameters - 1"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "Heartbeat\r\n| where TimeGenerated {TimeRange:query}\r\n| summarize LastHeartbeat = max(TimeGenerated) by Computer\r\n| extend State = iff(LastHeartbeat < ago({UnhealthyCriteria}), 'Unhealthy', 'Healthy')\r\n| extend TimeFromNow = now() - LastHeartbeat\r\n| extend ['TimeAgo'] = strcat(case(TimeFromNow < 2m, strcat(toint(TimeFromNow / 1m), ' seconds'), TimeFromNow < 2h, strcat(toint(TimeFromNow / 1m), ' minutes'), TimeFromNow < 2d, strcat(toint(TimeFromNow / 1h), ' hours'), strcat(toint(TimeFromNow / 1d), ' days')), ' ago')\r\n| join\r\n(\r\n    Heartbeat\r\n    | where TimeGenerated {TimeRange:query}\r\n    | extend Packed = pack_all()\r\n)\r\non Computer\r\n| where TimeGenerated == LastHeartbeat\r\n| join\r\n(\r\n    Heartbeat\r\n    | where TimeGenerated {TimeRange:query}\r\n    | make-series InternalTrend=iff(count() > 0, 1, 0) default = 0 on TimeGenerated from {TimeRange:start} to now() step {UnhealthyCriteria} by Computer\r\n    | extend Trend=array_slice(InternalTrend, array_length(InternalTrend) - 30, array_length(InternalTrend)-1)\r\n    | extend (s_min, s_minId, s_max, s_maxId, s_avg, s_var, s_stdev) = series_stats(Trend)\r\n    | project Computer, Trend, s_avg\r\n)\r\non Computer\r\n| join kind=leftouter\r\n(\r\n    Update\r\n    | where TimeGenerated > ago(1d)\r\n    | extend updtInfo = iif(Title=='',strcat(Product, '\\\\',ProductVersion),Title)\r\n    | summarize arg_max(TimeGenerated, *) by updtInfo, Computer\r\n    | where UpdateState == 'Needed'\r\n    | summarize count(updtInfo) by Computer\r\n)\r\non Computer\r\n| join kind=leftouter\r\n(\r\n    InsightsMetrics\r\n    | where TimeGenerated {TimeRange:query} \r\n    | where Namespace == 'Processor' and Name == 'UtilizationPercentage'\r\n    | summarize avg_CPU=avg(Val) by Computer \r\n)\r\non Computer\r\n| join kind=leftouter\r\n(\r\n    InsightsMetrics\r\n    | where TimeGenerated {TimeRange:query}\r\n    | where Namespace == 'Memory' and Name == 'AvailableMB' | extend maxMem = toreal(parse_json(Tags).['vm.azm.ms/memorySizeMB'])\r\n    | extend usedMemPerc = (1-(Val/maxMem))*100\r\n    | summarize avg_MEM=avg(usedMemPerc) by Computer\r\n)\r\non Computer\r\n| order by State, s_avg asc, TimeAgo, Computer asc\r\n| project ['_ComputerName_'] = Computer, Computer, State, ['OS     ']=iff(isempty(OSName), OSType, OSName), ['Time']=TimeAgo, ['Heartbeat Trend']=Trend, ['Average CPU']=avg_CPU, ['Average MEM']=avg_MEM, ['Details']=Packed, ['Missing updates']=count_updtInfo, ['Azure Resource']=ResourceId",
                      "size": 0,
                      "showAnalytics": true,
                      "title": "Agent details",
                      "noDataMessage": "Looks like you have no agents sending heartbeat information in this time range. Pick a larger time range or a different workspace.",
                      "timeContext": {
                        "durationMs": 0
                      },
                      "timeContextFromParameter": "TimeRange",
                      "exportFieldName": "_ComputerName_",
                      "exportParameterName": "ComputerName",
                      "exportDefaultValue": "\"\"",
                      "showExportToExcel": true,
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "gridSettings": {
                        "formatters": [
                          {
                            "columnMatch": "_ComputerName_",
                            "formatter": 5,
                            "formatOptions": {
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "Azure Resource",
                            "formatter": 0,
                            "formatOptions": {
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "State",
                            "formatter": 18,
                            "formatOptions": {
                              "linkColumn": "Details",
                              "linkTarget": "CellDetails",
                              "linkIsContextBlade": true,
                              "showIcon": true,
                              "thresholdsOptions": "icons",
                              "thresholdsGrid": [
                                {
                                  "thresholdValue": "Unhealthy",
                                  "operator": "==",
                                  "text": "{0}",
                                  "representation": "4"
                                },
                                {
                                  "thresholdValue": null,
                                  "operator": "Default",
                                  "text": "{0}",
                                  "representation": "success"
                                }
                              ]
                            },
                            "tooltipFormat": {
                              "tooltip": "Click to see details of the last event sent by this computer."
                            }
                          },
                          {
                            "columnMatch": "OS     ",
                            "formatter": 0,
                            "formatOptions": {
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "Time",
                            "formatter": 0,
                            "formatOptions": {
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "Heartbeat Trend",
                            "formatter": 10,
                            "formatOptions": {
                              "palette": "redGreen",
                              "showIcon": true
                            },
                            "tooltipFormat": {
                              "tooltip": "Each bar represents the bucket of time based on the Unhealthy Criteria. Showing last 30 buckets max."
                            }
                          },
                          {
                            "columnMatch": "Missing updates",
                            "formatter": 0,
                            "formatOptions": {
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "Average CPU",
                            "formatter": 8,
                            "formatOptions": {
                              "min": 0,
                              "max": 100,
                              "palette": "greenRed",
                              "showIcon": true
                            },
                            "numberFormat": {
                              "unit": 1,
                              "options": {
                                "style": "decimal",
                                "useGrouping": false
                              }
                            }
                          },
                          {
                            "columnMatch": "Average MEM",
                            "formatter": 8,
                            "formatOptions": {
                              "min": 0,
                              "max": 100,
                              "palette": "greenRed",
                              "showIcon": true
                            },
                            "numberFormat": {
                              "unit": 1,
                              "options": {
                                "style": "decimal"
                              }
                            }
                          },
                          {
                            "columnMatch": "Details",
                            "formatter": 5,
                            "formatOptions": {
                              "linkTarget": "CellDetails",
                              "linkLabel": "?? View Details",
                              "linkIsContextBlade": true,
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "Computer",
                            "formatter": 0,
                            "formatOptions": {
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "Environment",
                            "formatter": 0,
                            "formatOptions": {
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "OS",
                            "formatter": 0,
                            "formatOptions": {
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "ResourceId",
                            "formatter": 0,
                            "formatOptions": {
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "Category",
                            "formatter": 0,
                            "formatOptions": {
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "OS Type",
                            "formatter": 0,
                            "formatOptions": {
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "Time Ago",
                            "formatter": 0,
                            "formatOptions": {
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "OSType",
                            "formatter": 0,
                            "formatOptions": {
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "ComputerEnvironment",
                            "formatter": 0,
                            "formatOptions": {
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "LastHeartbeat",
                            "formatter": 0,
                            "formatOptions": {
                              "showIcon": true
                            }
                          }
                        ],
                        "filter": true,
                        "sortBy": [
                          {
                            "itemKey": "Missing updates",
                            "sortOrder": 2
                          }
                        ],
                        "labelSettings": [
                          {
                            "label": "Last Heartbeat",
                            "columnId": "Time"
                          }
                        ]
                      },
                      "sortBy": [
                        {
                          "itemKey": "Missing updates",
                          "sortOrder": 2
                        }
                      ]
                    },
                    "conditionalVisibility": {
                      "parameterName": "HasHeartbeat",
                      "comparison": "isNotEqualTo",
                      "value": "0"
                    },
                    "showPin": true,
                    "name": "query - 2 - Copy",
                    "styleSettings": {
                      "progressStyle": "spinner"
                    }
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "## Details about {ComputerName}"
                    },
                    "conditionalVisibility": {
                      "parameterName": "ComputerName",
                      "comparison": "isNotEqualTo",
                      "value": "\"\""
                    },
                    "name": "text - 5"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "InsightsMetrics\r\n| where Computer == '{ComputerName}' \r\n| where Namespace == 'Processor' and Name == 'UtilizationPercentage'\r\n| make-series Trend=avg(Val) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {UnhealthyCriteria} by Computer\r\n",
                      "size": 1,
                      "aggregation": 3,
                      "showAnnotations": true,
                      "showAnalytics": true,
                      "title": "CPU usage %",
                      "timeContext": {
                        "durationMs": 0
                      },
                      "timeContextFromParameter": "TimeRange",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "visualization": "areachart"
                    },
                    "conditionalVisibility": {
                      "parameterName": "ComputerName",
                      "comparison": "isNotEqualTo",
                      "value": "\"\""
                    },
                    "customWidth": "33",
                    "name": "query - 6"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "InsightsMetrics\r\n| where Namespace == 'Memory' and Name == 'AvailableMB'\r\n| where Computer == '{ComputerName}' \r\n| extend maxMem = toreal(parse_json(Tags).['vm.azm.ms/memorySizeMB'])\r\n| extend usedMemPerc = (1-(Val/maxMem))*100\r\n| make-series Trend=avg(usedMemPerc) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {UnhealthyCriteria} by Computer",
                      "size": 1,
                      "aggregation": 3,
                      "showAnnotations": true,
                      "showAnalytics": true,
                      "title": "Memory usage %",
                      "timeContext": {
                        "durationMs": 0
                      },
                      "timeContextFromParameter": "TimeRange",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "visualization": "areachart"
                    },
                    "conditionalVisibility": {
                      "parameterName": "ComputerName",
                      "comparison": "isNotEqualTo",
                      "value": "\"\""
                    },
                    "customWidth": "33",
                    "name": "query - 6 - Copy"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "Heartbeat\r\n| where Computer == '{ComputerName}'\r\n| make-series Trend=count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {UnhealthyCriteria} by Computer",
                      "size": 1,
                      "aggregation": 3,
                      "showAnnotations": true,
                      "showAnalytics": true,
                      "title": "Heartbeat volume trend",
                      "timeContext": {
                        "durationMs": 0
                      },
                      "timeContextFromParameter": "TimeRange",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "visualization": "areachart",
                      "chartSettings": {}
                    },
                    "conditionalVisibility": {
                      "parameterName": "ComputerName",
                      "comparison": "isNotEqualTo",
                      "value": "\"\""
                    },
                    "customWidth": "33",
                    "name": "query - 6",
                    "styleSettings": {
                      "progressStyle": "spinner"
                    }
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "InsightsMetrics\r\n| where Computer == '{ComputerName}'\r\n| where Namespace == 'LogicalDisk' and Name == 'FreeSpacePercentage' \r\n| extend dskMount = tostring(parse_json(Tags).['vm.azm.ms/mountId'])\r\n| extend usedPerc = 100-Val\r\n| make-series Trend=(avg(usedPerc)) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {UnhealthyCriteria} by dskMount",
                      "size": 1,
                      "aggregation": 5,
                      "showAnnotations": true,
                      "showAnalytics": true,
                      "title": "Used disk space %",
                      "timeContext": {
                        "durationMs": 0
                      },
                      "timeContextFromParameter": "TimeRange",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "visualization": "linechart"
                    },
                    "conditionalVisibility": {
                      "parameterName": "ComputerName",
                      "comparison": "isNotEqualTo",
                      "value": "\"\""
                    },
                    "customWidth": "33",
                    "name": "query - 6 - Copy"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "Event\r\n| where Computer == '{ComputerName}'\r\n| where EventLevelName !in ('Information', 'Success', 'Audit Error')\r\n| make-series Trend=count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {UnhealthyCriteria} by EventLevelName ",
                      "size": 1,
                      "showAnnotations": true,
                      "showAnalytics": true,
                      "title": "Event logs",
                      "timeContext": {
                        "durationMs": 0
                      },
                      "timeContextFromParameter": "TimeRange",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "visualization": "timechart",
                      "tileSettings": {
                        "showBorder": false
                      },
                      "graphSettings": {
                        "type": 0
                      }
                    },
                    "conditionalVisibility": {
                      "parameterName": "ComputerName",
                      "comparison": "isNotEqualTo",
                      "value": "\"\""
                    },
                    "customWidth": "66",
                    "name": "query - 4",
                    "styleSettings": {
                      "progressStyle": "spinner"
                    }
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "AddonAzureBackupJobs\r\n| where TimeGenerated {TimeRange:query}\r\n| parse ProtectedContainerUniqueId with ContainerRegion ';' BackupInfo ';' IaaSContainerInfo ';' VMResourceGroup ';' VM\r\n| where VM == '{ComputerName}'\r\n| project VM, JobStatus, DataTransferredInMB, JobDurationInSecs, JobStartDateTime, JobOperation\r\n| sort by JobStartDateTime desc",
                      "size": 1,
                      "showAnalytics": true,
                      "title": "Backup jobs",
                      "noDataMessage": "No backup jobs for selected VM",
                      "timeContext": {
                        "durationMs": 0
                      },
                      "timeContextFromParameter": "TimeRange",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces"
                    },
                    "conditionalVisibility": {
                      "parameterName": "ComputerName",
                      "comparison": "isNotEqualTo",
                      "value": "\"\""
                    },
                    "customWidth": "33",
                    "name": "query - 8"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "Update\r\n| where TimeGenerated > ago(1d)\r\n| where Computer == '{ComputerName}'\r\n| extend updtInfo = iif(Title=='',strcat(Product, '\\\\',ProductVersion),Title)\r\n| summarize arg_max(TimeGenerated, *) by updtInfo, Computer\r\n| where UpdateState == 'Needed'\r\n| project ['Update Text']=updtInfo, Classification",
                      "size": 1,
                      "showAnalytics": true,
                      "title": "Missing Updates",
                      "timeContext": {
                        "durationMs": 0
                      },
                      "timeContextFromParameter": "TimeRange",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces"
                    },
                    "conditionalVisibility": {
                      "parameterName": "ComputerName",
                      "comparison": "isNotEqualTo",
                      "value": "\"\""
                    },
                    "customWidth": "33",
                    "name": "query - 9"
                  }
                ],
                "fallbackResourceIds": [
                  "Azure Monitor"
                ],
                "fromTemplateId": "community-Workbooks/Workspace/Agent Health",
                "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
              }
            },
            { // VDC Backup report
              "displayName": "VDC Backup report",
              "content": {
                "version": "Notebook/1.0",
                "items": [
                  {
                    "type": 9,
                    "content": {
                      "version": "KqlParameterItem/1.0",
                      "parameters": [
                        {
                          "id": "bcdbf2d9-93c7-4ad5-bcf7-287467e76180",
                          "version": "KqlParameterItem/1.0",
                          "isRequired": true,
                          "type": 4,
                          "name": "TimeRange",
                          "label": "Time range",
                          "value": {
                            "durationMs": 604800000
                          },
                          "resourceType": "microsoft.insights/components",
                          "typeSettings": {
                            "selectableValues": [
                              {
                                "durationMs": 86400000
                              },
                              {
                                "durationMs": 172800000
                              },
                              {
                                "durationMs": 259200000
                              },
                              {
                                "durationMs": 604800000
                              },
                              {
                                "durationMs": 1209600000
                              },
                              {
                                "durationMs": 2419200000
                              },
                              {
                                "durationMs": 2592000000
                              },
                              {
                                "durationMs": 5184000000
                              },
                              {
                                "durationMs": 7776000000
                              }
                            ]
                          }
                        }
                      ],
                      "style": "pills",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces"
                    },
                    "name": "parameters - 0"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "AddonAzureBackupJobs\r\n| where TimeGenerated {TimeRange:query}\r\n| parse BackupItemUniqueId with Location ';' ItemId ';' ContainerType ';' ResourceGroup ';' Computer\r\n| extend LatestJob = JobStartDateTime\r\n| join\r\n(\r\n    AddonAzureBackupJobs\r\n    | where TimeGenerated {TimeRange:query}\r\n    | parse BackupItemUniqueId with Location ';' ItemId ';' ContainerType ';' ResourceGroup ';' Computer\r\n    | top-nested of Computer by LatestJob=max(JobStartDateTime)\r\n)\r\non LatestJob\r\n| extend JobDurationMin = round(JobDurationInSecs/60)\r\n| project ['ComputerName']=Computer, ['Data Transferred MB']=DataTransferredInMB, ['Minutes']=JobDurationMin, JobStatus, JobFailureCode, ['Recovery Vault']=ResourceId ",
                      "size": 0,
                      "title": "Latest backup jobs by computer in TimeRange",
                      "timeContext": {
                        "durationMs": 0
                      },
                      "timeContextFromParameter": "TimeRange",
                      "exportFieldName": "ComputerName",
                      "exportParameterName": "ComputerName",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "sortBy": []
                    },
                    "name": "query - 1"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "AddonAzureBackupJobs\r\n| where TimeGenerated {TimeRange:query}\r\n| parse BackupItemUniqueId with Location ';' ItemId ';' ContainerType ';' ResourceGroup ';' Computer\r\n| where Computer == '{ComputerName}'\r\n| summarize count() by bin(JobStartDateTime, 1d), DataTransferredInMB",
                      "size": 0,
                      "aggregation": 3,
                      "title": "Backup size in MB",
                      "timeContext": {
                        "durationMs": 0
                      },
                      "timeContextFromParameter": "TimeRange",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "visualization": "barchart"
                    },
                    "conditionalVisibility": {
                      "parameterName": "ComputerName",
                      "comparison": "isNotEqualTo",
                      "value": "\"\""
                    },
                    "customWidth": "50",
                    "name": "query - 2"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "AddonAzureBackupJobs\r\n| where TimeGenerated {TimeRange:query}\r\n| parse BackupItemUniqueId with Location ';' ItemId ';' ContainerType ';' ResourceGroup ';' Computer\r\n| where Computer == '{ComputerName}'\r\n| project JobStartDateTime, ['Minutes']=JobDurationInSecs/60",
                      "size": 0,
                      "aggregation": 3,
                      "title": "Backup duration",
                      "timeContext": {
                        "durationMs": 0
                      },
                      "timeContextFromParameter": "TimeRange",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "visualization": "barchart"
                    },
                    "customWidth": "50",
                    "name": "query - 3"
                  }
                ],
                "fallbackResourceIds": [
                  "Azure Monitor"
                ],
                "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
              }
            },
            { // VDC Overview
              "displayName": "VDC Overview",
              "content": {
                "version": "Notebook/1.0",
                "items": [
                  {
                    "type": 9,
                    "content": {
                      "version": "KqlParameterItem/1.0",
                      "parameters": [
                        {
                          "id": "a4b69c01-2263-4ada-8d9c-43433b739ff3",
                          "version": "KqlParameterItem/1.0",
                          "isRequired": true,
                          "type": 4,
                          "name": "TimeRange",
                          "label": "Time range",
                          "value": {
                            "durationMs": 14400000
                          },
                          "resourceType": "microsoft.insights/components",
                          "typeSettings": {
                            "selectableValues": [
                              {
                                "durationMs": 300000
                              },
                              {
                                "durationMs": 900000
                              },
                              {
                                "durationMs": 1800000
                              },
                              {
                                "durationMs": 3600000
                              },
                              {
                                "durationMs": 14400000
                              },
                              {
                                "durationMs": 43200000
                              },
                              {
                                "durationMs": 86400000
                              },
                              {
                                "durationMs": 172800000
                              },
                              {
                                "durationMs": 259200000
                              },
                              {
                                "durationMs": 604800000
                              },
                              {
                                "durationMs": 1209600000
                              },
                              {
                                "durationMs": 2419200000
                              },
                              {
                                "durationMs": 2592000000
                              },
                              {
                                "durationMs": 5184000000
                              },
                              {
                                "durationMs": 7776000000
                              }
                            ]
                          }
                        },
                        { // Parameter - TimeStep
                          "id": "c4d8d055-6dbe-451b-bf64-2be8d9e21fd8",
                          "version": "KqlParameterItem/1.0",
                          "isRequired": true,
                          "type": 2,
                          "name": "TimeStep",
                          "label": "Step",
                          "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n    { \\\"value\\\":\\\"1m\\\", \\\"label\\\":\\\"1 minute\\\", \\\"selected\\\":false },\\r\\n    { \\\"value\\\":\\\"5m\\\", \\\"label\\\":\\\"5 minutes\\\", \\\"selected\\\":false },\\r\\n    { \\\"value\\\":\\\"30m\\\", \\\"label\\\":\\\"30 minutes\\\", \\\"selected\\\":false },\\r\\n    { \\\"value\\\":\\\"1h\\\", \\\"label\\\":\\\"1 hour\\\", \\\"selected\\\":true },\\r\\n    { \\\"value\\\":\\\"2h\\\", \\\"label\\\":\\\"2 hours\\\", \\\"selected\\\":false },\\r\\n    { \\\"value\\\":\\\"8h\\\", \\\"label\\\":\\\"8 hours\\\", \\\"selected\\\":false },\\r\\n    { \\\"value\\\":\\\"1d\\\", \\\"label\\\":\\\"1 day\\\", \\\"selected\\\":false },\\r\\n    { \\\"value\\\":\\\"2d\\\", \\\"label\\\":\\\"2 days\\\", \\\"selected\\\":false },\\r\\n    { \\\"value\\\":\\\"7d\\\", \\\"label\\\":\\\"7 days\\\", \\\"selected\\\":false }\\r\\n]\"}",
                          "queryType": 8,
                          "typeSettings": {
                            "additionalResourceOptions": []
                          }
                        },
                        {
                          "name": "TopN",
                          "timeContextFromParameter": "TimeRange",
                          "typeSettings": {
                            "additionalResourceOptions": []
                          },
                          "jsonData": "[\r\n    { \"value\":\"5\", \"label\":\"5 VMs\", \"selected\":true },\r\n    { \"value\":\"10\", \"label\":\"10 VMs\", \"selected\":false },\r\n    { \"value\":\"15\", \"label\":\"15 VMs\",\"selected\":false },\r\n    { \"value\":\"20\", \"label\":\"20 VMs\", \"selected\":false },\r\n    { \"value\":\"30\", \"label\":\"30 VMs\", \"selected\":false },\r\n    { \"value\":\"50\", \"label\":\"50 VMs\", \"selected\":false }\r\n]",
                          "timeContext": {
                            "durationMs": 0
                          },
                          "version": "KqlParameterItem/1.0",
                          "id": "661b58db-c99e-47e8-9cb2-82794c858065",
                          "type": 2,
                          "label": "Top  N"
                        }
                      ],
                      "style": "pills",
                      "queryType": 8,
                      "resourceType": "microsoft.operationalinsights/workspaces"
                    },
                    "name": "parameters - 2"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "## Firewall stats"
                    },
                    "name": "text - 6"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "AzureMetrics\r\n| where MetricName == 'DataProcessed' \r\n| make-series Trend=(sum(Total/1000000000)) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeStep} by Resource",
                      "size": 1,
                      "title": "Data processed by Firewall in GB",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "visualization": "timechart"
                    },
                    "customWidth": "35",
                    "name": "query - 1"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "AzureMetrics\r\n| where MetricName == 'NetworkRuleHit' or MetricName == 'ApplicationRuleHit'\r\n| make-series Trend=(avg(Total)) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeStep} by MetricName, Resource",
                      "size": 1,
                      "title": "Rule hits on Firewall",
                      "timeContext": {
                        "durationMs": 0
                      },
                      "timeContextFromParameter": "TimeRange",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "visualization": "timechart"
                    },
                    "customWidth": "35",
                    "name": "query - 3"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "AzureMetrics \r\n| where MetricName == 'FirewallHealth' \r\n| make-series Trend=(avg(Average)) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeStep} by Resource",
                      "size": 1,
                      "aggregation": 3,
                      "title": "Firewall Health %",
                      "timeContext": {
                        "durationMs": 0
                      },
                      "timeContextFromParameter": "TimeRange",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "visualization": "timechart",
                      "tileSettings": {
                        "showBorder": false,
                        "titleContent": {
                          "columnMatch": "Resource",
                          "formatter": 1
                        },
                        "leftContent": {
                          "formatOptions": {
                            "palette": "auto"
                          },
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "maximumSignificantDigits": 3,
                              "maximumFractionDigits": 2
                            }
                          },
                          "formatter": 12,
                          "columnMatch": "max_Maximum"
                        }
                      },
                      "graphSettings": {
                        "centerContent": {
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "maximumSignificantDigits": 3,
                              "maximumFractionDigits": 2
                            }
                          },
                          "formatter": 1,
                          "columnMatch": "max_Maximum"
                        },
                        "type": 0,
                        "topContent": {
                          "columnMatch": "Resource",
                          "formatter": 1
                        }
                      }
                    },
                    "customWidth": "30",
                    "name": "query - 3"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "## VM stats"
                    },
                    "name": "text - 5"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "InsightsMetrics\r\n| where Namespace == 'Processor' and Name == 'UtilizationPercentage'\r\n| make-series Trend=(avg(Val)) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeStep} by Computer\r\n| join (\r\n   InsightsMetrics\r\n   | where TimeGenerated {TimeRange:query}\r\n   | where Namespace == 'Processor' and Name == 'UtilizationPercentage'\r\n   | summarize avg(Val) by Computer\r\n   | top {TopN} by Computer asc nulls last\r\n) on Computer ",
                      "size": 0,
                      "aggregation": 3,
                      "title": "Top N CPU %",
                      "timeContext": {
                        "durationMs": 0
                      },
                      "timeContextFromParameter": "TimeRange",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "visualization": "timechart"
                    },
                    "name": "query - 4"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "InsightsMetrics\r\n| where Namespace == 'Memory' and Name == 'AvailableMB' | extend maxMem = toreal(parse_json(Tags).['vm.azm.ms/memorySizeMB'])\r\n| extend usedMemPerc = (1-(Val/maxMem))*100\r\n| make-series Trend=avg(usedMemPerc) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeStep} by Computer\r\n| join (\r\n   InsightsMetrics\r\n   | where TimeGenerated {TimeRange:query}\r\n   | where Namespace == 'Memory' and Name == 'AvailableMB'\r\n   | extend maxMem = toreal(parse_json(Tags).['vm.azm.ms/memorySizeMB'])\r\n   | extend usedMemPerc = (1-(Val/maxMem))*100\r\n   | summarize avg(usedMemPerc) by Computer\r\n   | top {TopN} by Computer asc nulls last\r\n) on Computer  ",
                      "size": 0,
                      "aggregation": 3,
                      "title": "Top N Memory usage %",
                      "timeContext": {
                        "durationMs": 0
                      },
                      "timeContextFromParameter": "TimeRange",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "visualization": "timechart"
                    },
                    "name": "query - 7"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "InsightsMetrics\r\n| where Namespace == 'LogicalDisk' and Name == 'FreeSpacePercentage' \r\n| extend dskMount = tostring(parse_json(Tags).['vm.azm.ms/mountId'])\r\n| extend usedPerc = 100-Val\r\n| extend diskInfo = strcat(dskMount, ' on ', Computer)\r\n| make-series Trend=(avg(usedPerc)) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeStep} by diskInfo\r\n| join (\r\n   InsightsMetrics\r\n   | where Namespace == 'LogicalDisk' and Name == 'FreeSpacePercentage' \r\n   | extend dskMount = tostring(parse_json(Tags).['vm.azm.ms/mountId'])\r\n   | extend usedPerc = 100-Val\r\n   | extend diskInfo = strcat(dskMount, ' on ', Computer)\r\n   | summarize avg(usedPerc) by diskInfo\r\n   | top {TopN} by avg_usedPerc desc nulls last\r\n) on diskInfo ",
                      "size": 0,
                      "aggregation": 3,
                      "title": "Top N most used disk space %",
                      "timeContext": {
                        "durationMs": 0
                      },
                      "timeContextFromParameter": "TimeRange",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "visualization": "timechart",
                      "chartSettings": {}
                    },
                    "name": "query - 9"
                  }
                ],
                "fallbackResourceIds": [
                  "Azure Monitor"
                ],
                "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
              }
            },
            { // VDC Update Report
              "displayName": "VDC Update Report",
              "content": {
                "version": "Notebook/1.0",
                "items": [
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "Update\n| distinct ResourceId, Computer\n| project ['Computers in Workspace']=ResourceId, ['_ComputerName_']=Computer",
                      "size": 1,
                      "title": "Select Computer",
                      "exportFieldName": "_ComputerName_",
                      "exportParameterName": "ComputerName",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "gridSettings": {
                        "formatters": [
                          {
                            "columnMatch": "Virtual Machines",
                            "formatter": 0,
                            "formatOptions": {
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "_ComputerName_",
                            "formatter": 5,
                            "formatOptions": {
                              "showIcon": true
                            }
                          }
                        ],
                        "filter": true
                      }
                    },
                    "name": "query - 2"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "Update\r\n| where Computer == '{ComputerName}'\r\n| where UpdateState !in ('Installed', 'NotNeeded')\r\n| project-away TimeGenerated, SourceComputerId, Computer, SubscriptionId, ResourceGroup, ResourceProvider, Resource, TenantId\r\n| distinct *\r\n| project ['Update Text']=iff(isempty(OSType),Title , strcat(Product, ' - ', ProductVersion)), Classification, UpdateState",
                      "size": 1,
                      "title": "Required updates",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces"
                    },
                    "conditionalVisibility": {
                      "parameterName": "ComputerName",
                      "comparison": "isNotEqualTo",
                      "value": "\"\""
                    },
                    "name": "query - 2"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "Update\r\n| where OSType != 'Linux'\r\n| sort by TimeGenerated desc\r\n| project-away TimeGenerated, SourceComputerId, SubscriptionId, ResourceGroup, ResourceProvider, ResourceType, Type, SourceSystem, ManagementGroupName\r\n| extend ['KBarticle']= strcat('https://support.microsoft.com/en-us/search?query=KB', KBID) \r\n| distinct Title, Classification, KBarticle",
                      "size": 0,
                      "title": "All Windows updates",
                      "exportFieldName": "Title",
                      "exportParameterName": "UpdateTitle",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "gridSettings": {
                        "formatters": [
                          {
                            "columnMatch": "Title",
                            "formatter": 0,
                            "formatOptions": {
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "KBarticle",
                            "formatter": 7,
                            "formatOptions": {
                              "linkTarget": "Url",
                              "showIcon": true
                            }
                          }
                        ],
                        "filter": true
                      }
                    },
                    "customWidth": "50",
                    "name": "query - 3"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "Update\r\n| where OSType == 'Linux'\r\n| sort by TimeGenerated desc \r\n| distinct Product, ProductVersion",
                      "size": 0,
                      "title": "All Linux updates",
                      "exportedParameters": [
                        {
                          "fieldName": "Product",
                          "parameterName": "UpdateProduct",
                          "parameterType": 1
                        },
                        {
                          "fieldName": "ProductVersion",
                          "parameterName": "UpdateProductVersion",
                          "parameterType": 1
                        }
                      ],
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "gridSettings": {
                        "filter": true
                      }
                    },
                    "customWidth": "50",
                    "name": "query - 4"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "Update\r\n| where Title == '{UpdateTitle}'\r\n| distinct Computer, UpdateState\r\n| sort by UpdateState",
                      "size": 0,
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces"
                    },
                    "customWidth": "50",
                    "name": "query - 5"
                  }
                ],
                "fallbackResourceIds": [
                  "Azure Monitor"
                ],
                "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
              }
            },
            { // Azure Inventory
              // This is an adjusted version of https://github.com/microsoft/AzureMonitorCommunity/blob/master/Azure%20Services/Azure%20Resource%20Graph/Workbooks/galleryTemplate/template.json
              // from commit 3bc9344 on 27 Oct 2020
              "displayName": "Azure Inventory",
              "content": {
                "version": "Notebook/1.0",
                "items": [
                  {
                    "type": 9,
                    "content": {
                      "version": "KqlParameterItem/1.0",
                      "parameters": [
                        {
                          "id": "a36f0b3d-8826-4bec-95a9-70ec6cb77713",
                          "version": "KqlParameterItem/1.0",
                          "name": "Subscriptions",
                          "type": 6,
                          "isRequired": true,
                          "multiSelect": true,
                          "quote": "'",
                          "delimiter": ",",
                          "value": [
                            "value::all"
                          ],
                          "typeSettings": {
                            "additionalResourceOptions": [
                              "value::1",
                              "value::all"
                            ],
                            "includeAll": true
                          }
                        }
                      ],
                      "style": "pills",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces"
                    },
                    "name": "parameters - 8"
                  },
                  {
                    "type": 11,
                    "content": {
                      "version": "LinkItem/1.0",
                      "style": "tabs",
                      "links": [
                        {
                          "id": "f321b3dd-4d96-4aa7-ac57-5ad8ce236a48",
                          "cellValue": "selectedTab",
                          "linkTarget": "parameter",
                          "linkLabel": "Overview",
                          "subTarget": "overview",
                          "style": "link"
                        },
                        {
                          "id": "e79a9ba1-8aca-4e4a-9df7-83123cae1627",
                          "cellValue": "selectedTab",
                          "linkTarget": "parameter",
                          "linkLabel": "Compute",
                          "subTarget": "compute",
                          "preText": "IaaS",
                          "style": "link"
                        },
                        {
                          "id": "ed3b708b-7054-424d-b32b-49451e04d36b",
                          "cellValue": "selectedTab",
                          "linkTarget": "parameter",
                          "linkLabel": "PaaS",
                          "subTarget": "paas",
                          "style": "link"
                        },
                        {
                          "id": "9bd4447c-8cac-4e8a-9f9b-bbcc99209b13",
                          "cellValue": "selectedTab",
                          "linkTarget": "parameter",
                          "linkLabel": "Networking",
                          "subTarget": "network",
                          "style": "link"
                        },
                        {
                          "id": "8192cd42-be72-4d18-b234-9e9fef4418dd",
                          "cellValue": "selectedTab",
                          "linkTarget": "parameter",
                          "linkLabel": "Monitoring & Security",
                          "subTarget": "monitor",
                          "style": "link"
                        },
                        {
                          "id": "1c2b6655-5c72-47bf-b4c6-9ea2665c07ef",
                          "cellValue": "selectedTab",
                          "linkTarget": "parameter",
                          "linkLabel": "Tagged Resources",
                          "subTarget": "tags",
                          "style": "link"
                        },
                        {
                          "id": "284d9e1f-d3f9-477e-8fac-0fad54c0b392",
                          "cellValue": "selectedTab",
                          "linkTarget": "parameter",
                          "linkLabel": "Untagged Resources",
                          "subTarget": "notag",
                          "style": "link"
                        }
                      ]
                    },
                    "name": "links - 6",
                    "styleSettings": {
                      "padding": "0 0 20px 0"
                    }
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "## NoShow - Begin Overview"
                    },
                    "conditionalVisibility": {
                      "parameterName": "noshow",
                      "comparison": "isEqualTo",
                      "value": "noshow"
                    },
                    "name": "text - NoShow Overview"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "# Overview Azure Resources"
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "overview"
                    },
                    "name": "text - Title"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "Resources | summarize count(type)",
                      "size": 4,
                      "title": "Count of All Resources",
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources",
                      "crossComponentResources": [
                        "{Subscriptions}"
                      ],
                      "visualization": "tiles",
                      "sortBy": [],
                      "tileSettings": {
                        "titleContent": {
                          "formatter": 1,
                          "formatOptions": {
                            "showIcon": true
                          }
                        },
                        "leftContent": {
                          "columnMatch": "count_type",
                          "formatter": 12,
                          "formatOptions": {
                            "showIcon": true
                          }
                        },
                        "showBorder": true,
                        "sortOrderField": 2
                      }
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "overview"
                    },
                    "name": "query - Overview Count"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "## Subscriptions and Resource Groups"
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "overview"
                    },
                    "name": "text - Subscriptions text"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "resourcecontainers \r\n| where type has \"microsoft.resources/subscriptions/resourcegroups\"\r\n| summarize Count=count(type) by type, subscriptionId | extend type = replace(@\"microsoft.resources/subscriptions/resourcegroups\", @\"Resource Groups\", type)",
                      "size": 0,
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources",
                      "crossComponentResources": [
                        "{Subscriptions}"
                      ],
                      "gridSettings": {
                        "formatters": [
                          {
                            "columnMatch": "$gen_group",
                            "formatter": 13,
                            "formatOptions": {
                              "linkTarget": null,
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "type",
                            "formatter": 16,
                            "formatOptions": {
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "subscriptionId",
                            "formatter": 5
                          }
                        ],
                        "hierarchySettings": {
                          "treeType": 1,
                          "groupBy": [
                            "subscriptionId"
                          ],
                          "expandTopLevel": true
                        }
                      },
                      "tileSettings": {
                        "showBorder": false,
                        "titleContent": {
                          "columnMatch": "type",
                          "formatter": 1
                        },
                        "leftContent": {
                          "columnMatch": "Count",
                          "formatter": 12,
                          "formatOptions": {
                            "palette": "auto"
                          },
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "maximumSignificantDigits": 3,
                              "maximumFractionDigits": 2
                            }
                          }
                        }
                      }
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "overview"
                    },
                    "name": "query - Subscription Overview"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "## Resource Counts"
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "overview"
                    },
                    "name": "text - Overview Resource text"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "Resources \r\n| where type != 'microsoft.compute/disks' \r\n| where type != 'microsoft.compute/virtualmachines/extensions'\r\n| where type !has 'microsoft.insights'\r\n| where type != 'microsoft.operationsmanagement/solutions'\r\n| where type != 'microsoft.compute/images'\r\n| where type != 'microsoft.netapp/netappaccounts/capacitypools/volumes'\r\n| extend type = case(\r\ntype =~ 'microsoft.automation/automationaccounts', 'Automation Accounts',\r\ntype =~ 'microsoft.operationalinsights/workspaces', 'Log Analytics Workspaces',\r\ntype =~ 'microsoft.netapp/netappaccounts', 'NetApp Accounts',\r\ntype == 'microsoft.web/serverfarms', \"App Service Plans\",\r\ntype == 'microsoft.web/sites', \"App Services\",\r\ntype =~ \"microsoft.compute/virtualmachines\", \"Azure Compute\",\r\ntype =~ \"microsoft.logic/workflows\", \"LogicApps\",\r\ntype =~ 'microsoft.keyvault/vaults', \"Key Vaults\",\r\ntype =~ 'microsoft.keyvault/vaults', \"Hybrid Compute\",\r\ntype =~ 'microsoft.storage/storageaccounts', \"Storage Accounts\",\r\ntype =~ 'microsoft.compute/availabilitysets', 'Availability Sets',\r\ntype =~ 'microsoft.insights/components','Application Insights',\r\ntype =~ 'microsoft.desktopvirtualization/applicationgroups', 'WVD Application Groups',\r\ntype =~ 'microsoft.desktopvirtualization/workspaces', 'WVD Workspaces',\r\ntype =~ 'microsoft.desktopvirtualization/hostpools', 'WVD Hostpools',\r\ntype =~ 'microsoft.recoveryservices/vaults', 'Backup Vaults',\r\ntype =~ 'microsoft.insights/webtests', 'URL Web Tests',\r\ntype =~ 'microsoft.web/connections', 'LogicApp Connectors',\r\ntype =~ 'microsoft.web/customapis','LogicApp API Connectors',\r\ntype =~ 'microsoft.managedidentity/userassignedidentities','Managed Identities',\r\ntype =~ 'microsoft.storagesync/storagesyncservices', 'Azure File Sync',\r\ntype =~ 'microsoft.hybridcompute/machines', 'ARC Machines',\r\ntype has 'microsoft.network', 'Network Resources',\r\nstrcat(\"Not Translated: \", type))\r\n| summarize count() by type\r\n| where type !has \"Not Translated\"",
                      "size": 2,
                      "title": "Resource Count by Type",
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources",
                      "crossComponentResources": [
                        "{Subscriptions}"
                      ],
                      "visualization": "tiles",
                      "tileSettings": {
                        "titleContent": {
                          "columnMatch": "type",
                          "formatter": 1
                        },
                        "leftContent": {
                          "columnMatch": "count_",
                          "formatter": 12,
                          "formatOptions": {
                            "palette": "auto"
                          },
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false,
                              "maximumFractionDigits": 2,
                              "maximumSignificantDigits": 3
                            }
                          }
                        },
                        "showBorder": true,
                        "sortCriteriaField": "count_",
                        "sortOrderField": 2
                      }
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "overview"
                    },
                    "name": "query - Overview Resource Counts by type"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "## NoShow - End Overview\r\n\r\n\r\n## NoShow - Begin Compute"
                    },
                    "conditionalVisibility": {
                      "parameterName": "noshow",
                      "comparison": "isEqualTo",
                      "value": "noshow"
                    },
                    "name": "text - NoShow Begin Compute"
                  },
                  {
                    "type": 11,
                    "content": {
                      "version": "LinkItem/1.0",
                      "style": "tabs",
                      "links": [
                        {
                          "id": "a5b84469-ab4c-4b30-9983-22c454d61468",
                          "cellValue": "compute",
                          "linkTarget": "parameter",
                          "linkLabel": "Azure Compute",
                          "subTarget": "azure",
                          "style": "link"
                        },
                        {
                          "id": "d44b3ab8-d86b-4c5c-939f-273554437a4e",
                          "cellValue": "compute",
                          "linkTarget": "parameter",
                          "linkLabel": "Hybrid Compute",
                          "subTarget": "arc",
                          "style": "link"
                        }
                      ]
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "compute"
                    },
                    "name": "tabs -  Compute"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "## Current VM Status"
                    },
                    "conditionalVisibilities": [
                      {
                        "parameterName": "selectedTab",
                        "comparison": "isEqualTo",
                        "value": "compute"
                      },
                      {
                        "parameterName": "compute",
                        "comparison": "isEqualTo",
                        "value": "azure"
                      }
                    ],
                    "name": "text - Azure Compute"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "Resources | where type == \"microsoft.compute/virtualmachines\"\r\n| extend vmState = tostring(properties.extended.instanceView.powerState.displayStatus)\r\n| extend vmState = iif(isempty(vmState), \"VM State Unknown\", (vmState))\r\n| summarize count() by vmState",
                      "size": 4,
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources",
                      "crossComponentResources": [
                        "{Subscriptions}"
                      ],
                      "visualization": "tiles",
                      "tileSettings": {
                        "titleContent": {
                          "columnMatch": "vmState",
                          "formatter": 1
                        },
                        "leftContent": {
                          "columnMatch": "count_",
                          "formatter": 12,
                          "formatOptions": {
                            "palette": "auto"
                          },
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false,
                              "maximumFractionDigits": 2,
                              "maximumSignificantDigits": 3
                            }
                          }
                        },
                        "showBorder": true
                      },
                      "graphSettings": {
                        "type": 0,
                        "topContent": {
                          "columnMatch": "vmSize",
                          "formatter": 1
                        },
                        "centerContent": {
                          "columnMatch": "Count",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "maximumSignificantDigits": 3,
                              "maximumFractionDigits": 2
                            }
                          }
                        }
                      }
                    },
                    "conditionalVisibilities": [
                      {
                        "parameterName": "selectedTab",
                        "comparison": "isEqualTo",
                        "value": "compute"
                      },
                      {
                        "parameterName": "compute",
                        "comparison": "isEqualTo",
                        "value": "azure"
                      }
                    ],
                    "name": "query - Azure Compute Summary - Copy"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "## Count of VMs by VM Size."
                    },
                    "conditionalVisibilities": [
                      {
                        "parameterName": "selectedTab",
                        "comparison": "isEqualTo",
                        "value": "compute"
                      },
                      {
                        "parameterName": "compute",
                        "comparison": "isEqualTo",
                        "value": "azure"
                      }
                    ],
                    "name": "text - Azure Compute - Copy"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "Resources | where type == \"microsoft.compute/virtualmachines\"\r\n| summarize Count=count(properties.hardwareProfile.vmSize) by vmSize=tostring(properties.hardwareProfile.vmSize)",
                      "size": 0,
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources",
                      "crossComponentResources": [
                        "{Subscriptions}"
                      ],
                      "visualization": "tiles",
                      "tileSettings": {
                        "titleContent": {
                          "columnMatch": "vmSize",
                          "formatter": 1,
                          "formatOptions": {
                            "showIcon": true
                          }
                        },
                        "leftContent": {
                          "columnMatch": "Count",
                          "formatter": 12,
                          "formatOptions": {
                            "palette": "auto",
                            "showIcon": true
                          },
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "maximumSignificantDigits": 3,
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        "showBorder": true
                      },
                      "graphSettings": {
                        "type": 0,
                        "topContent": {
                          "columnMatch": "vmSize",
                          "formatter": 1
                        },
                        "centerContent": {
                          "columnMatch": "Count",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "maximumSignificantDigits": 3,
                              "maximumFractionDigits": 2
                            }
                          }
                        }
                      }
                    },
                    "conditionalVisibilities": [
                      {
                        "parameterName": "selectedTab",
                        "comparison": "isEqualTo",
                        "value": "compute"
                      },
                      {
                        "parameterName": "compute",
                        "comparison": "isEqualTo",
                        "value": "azure"
                      }
                    ],
                    "name": "query - Azure Compute Summary"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "## VMs by Storage and Networking\r\n\r\n💡 Select tab to see corresponding breakdown"
                    },
                    "conditionalVisibilities": [
                      {
                        "parameterName": "selectedTab",
                        "comparison": "isEqualTo",
                        "value": "compute"
                      },
                      {
                        "parameterName": "compute",
                        "comparison": "isEqualTo",
                        "value": "azure"
                      }
                    ],
                    "name": "text - Azure Compute - Copy"
                  },
                  {
                    "type": 11,
                    "content": {
                      "version": "LinkItem/1.0",
                      "style": "tabs",
                      "links": [
                        {
                          "id": "ac392a07-01a6-4727-b82b-117c529867c7",
                          "cellValue": "hardware",
                          "linkTarget": "parameter",
                          "linkLabel": "Networking",
                          "subTarget": "network",
                          "style": "link"
                        },
                        {
                          "id": "9ba284c0-ba39-460c-9f74-b9ae8845245c",
                          "cellValue": "hardware",
                          "linkTarget": "parameter",
                          "linkLabel": "Storage",
                          "subTarget": "storage",
                          "style": "link"
                        },
                        {
                          "id": "74bab549-0028-4018-8bf3-065b6c6fa28e",
                          "cellValue": "hardware",
                          "linkTarget": "parameter",
                          "linkLabel": "Orphaned Disks",
                          "subTarget": "orphaneddisks",
                          "style": "link"
                        },
                        {
                          "id": "a45a3005-c5b6-46a7-8873-ac1e471c51b4",
                          "cellValue": "hardware",
                          "linkTarget": "parameter",
                          "linkLabel": "Orphaned NICs",
                          "subTarget": "orphanednics",
                          "style": "link"
                        }
                      ]
                    },
                    "conditionalVisibilities": [
                      {
                        "parameterName": "selectedTab",
                        "comparison": "isEqualTo",
                        "value": "compute"
                      },
                      {
                        "parameterName": "compute",
                        "comparison": "isEqualTo",
                        "value": "azure"
                      }
                    ],
                    "name": "links - Azure Compute Storage Networking Breakdown"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "Resources\r\n| where type =~ 'microsoft.compute/virtualmachines'\r\n| extend nics=array_length(properties.networkProfile.networkInterfaces)\r\n| mv-expand nic=properties.networkProfile.networkInterfaces\r\n| where nics == 1 or nic.properties.primary =~ 'true' or isempty(nic)\r\n| project vmId = id, vmName = name, vmSize=tostring(properties.hardwareProfile.vmSize), nicId = tostring(nic.id)\r\n\t| join kind=leftouter (\r\n \t\tResources\r\n  \t\t| where type =~ 'microsoft.network/networkinterfaces'\r\n  \t\t| extend ipConfigsCount=array_length(properties.ipConfigurations)\r\n  \t\t| mv-expand ipconfig=properties.ipConfigurations\r\n  \t\t| where ipConfigsCount == 1 or ipconfig.properties.primary =~ 'true'\r\n  \t\t| project nicId = id, privateIP= tostring(ipconfig.properties.privateIPAddress), publicIpId = tostring(ipconfig.properties.publicIPAddress.id), subscriptionId) on nicId\r\n| project-away nicId1\r\n| summarize by vmId, vmSize, nicId, privateIP, publicIpId, subscriptionId\r\n\t| join kind=leftouter (\r\n  \t\tResources\r\n  \t\t| where type =~ 'microsoft.network/publicipaddresses'\r\n  \t\t| project publicIpId = id, publicIpAddress = tostring(properties.ipAddress)) on publicIpId\r\n| project-away publicIpId1\r\n| sort by publicIpAddress desc",
                      "size": 2,
                      "showExportToExcel": true,
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources",
                      "crossComponentResources": [
                        "{Subscriptions}"
                      ],
                      "visualization": "table",
                      "gridSettings": {
                        "formatters": [
                          {
                            "columnMatch": "$gen_group",
                            "formatter": 13,
                            "formatOptions": {
                              "linkTarget": "Resource",
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "vmId",
                            "formatter": 5
                          },
                          {
                            "columnMatch": "subscriptionId",
                            "formatter": 5
                          }
                        ],
                        "rowLimit": 1000,
                        "filter": true,
                        "hierarchySettings": {
                          "treeType": 1,
                          "groupBy": [
                            "subscriptionId"
                          ],
                          "expandTopLevel": true,
                          "finalBy": "vmId"
                        }
                      },
                      "tileSettings": {
                        "titleContent": {
                          "columnMatch": "vmSize",
                          "formatter": 1,
                          "formatOptions": {
                            "showIcon": true
                          }
                        },
                        "leftContent": {
                          "columnMatch": "Count",
                          "formatter": 12,
                          "formatOptions": {
                            "palette": "auto",
                            "showIcon": true
                          },
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "maximumSignificantDigits": 3,
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        "showBorder": true
                      },
                      "graphSettings": {
                        "type": 0,
                        "topContent": {
                          "columnMatch": "vmSize",
                          "formatter": 1
                        },
                        "centerContent": {
                          "columnMatch": "Count",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "maximumSignificantDigits": 3,
                              "maximumFractionDigits": 2
                            }
                          }
                        }
                      }
                    },
                    "conditionalVisibilities": [
                      {
                        "parameterName": "selectedTab",
                        "comparison": "isEqualTo",
                        "value": "compute"
                      },
                      {
                        "parameterName": "compute",
                        "comparison": "isEqualTo",
                        "value": "azure"
                      },
                      {
                        "parameterName": "hardware",
                        "comparison": "isEqualTo",
                        "value": "network"
                      }
                    ],
                    "name": "query - Azure Compute Networking",
                    "styleSettings": {
                      "padding": "0 0 200px 0"
                    }
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "Resources | where type == \"microsoft.compute/virtualmachines\"\r\n| extend osDiskId= tostring(properties.storageProfile.osDisk.managedDisk.id)\r\n        | join kind=leftouter(resources\r\n            | where type =~ 'microsoft.compute/disks'\r\n            | where properties !has 'Unattached'\r\n            | where properties has 'osType'\r\n            | project OS = tostring(properties.osType), osSku = tostring(sku.name), osDiskSizeGB = toint(properties.diskSizeGB), osDiskId=tostring(id)) on osDiskId\r\n        | join kind=leftouter(Resources\r\n            | where type =~ 'microsoft.compute/disks'\r\n            | where properties !has \"osType\"\r\n            | where properties !has 'Unattached'\r\n            | project sku = tostring(sku.name), diskSizeGB = toint(properties.diskSizeGB), id = managedBy\r\n            | summarize sum(diskSizeGB), count(sku) by id, sku) on id\r\n| project vmId=id, OS, location, resourceGroup, subscriptionId, osDiskId, osSku, osDiskSizeGB, DataDisksGB=sum_diskSizeGB, diskSkuCount=count_sku\r\n| sort by diskSkuCount desc",
                      "size": 2,
                      "showExportToExcel": true,
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources",
                      "crossComponentResources": [
                        "{Subscriptions}"
                      ],
                      "visualization": "table",
                      "gridSettings": {
                        "formatters": [
                          {
                            "columnMatch": "$gen_group",
                            "formatter": 13,
                            "formatOptions": {
                              "linkTarget": "Resource",
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "vmId",
                            "formatter": 5
                          },
                          {
                            "columnMatch": "subscriptionId",
                            "formatter": 5
                          }
                        ],
                        "rowLimit": 1000,
                        "filter": true,
                        "hierarchySettings": {
                          "treeType": 1,
                          "groupBy": [
                            "subscriptionId"
                          ],
                          "expandTopLevel": true,
                          "finalBy": "vmId"
                        }
                      },
                      "tileSettings": {
                        "titleContent": {
                          "columnMatch": "vmSize",
                          "formatter": 1,
                          "formatOptions": {
                            "showIcon": true
                          }
                        },
                        "leftContent": {
                          "columnMatch": "Count",
                          "formatter": 12,
                          "formatOptions": {
                            "palette": "auto",
                            "showIcon": true
                          },
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "maximumSignificantDigits": 3,
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        "showBorder": true
                      },
                      "graphSettings": {
                        "type": 0,
                        "topContent": {
                          "columnMatch": "vmSize",
                          "formatter": 1
                        },
                        "centerContent": {
                          "columnMatch": "Count",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "maximumSignificantDigits": 3,
                              "maximumFractionDigits": 2
                            }
                          }
                        }
                      }
                    },
                    "conditionalVisibilities": [
                      {
                        "parameterName": "selectedTab",
                        "comparison": "isEqualTo",
                        "value": "compute"
                      },
                      {
                        "parameterName": "compute",
                        "comparison": "isEqualTo",
                        "value": "azure"
                      },
                      {
                        "parameterName": "hardware",
                        "comparison": "isEqualTo",
                        "value": "storage"
                      }
                    ],
                    "name": "query - Azure Compute Disks",
                    "styleSettings": {
                      "padding": "0 0 200px 0"
                    }
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "Resources  \r\n| where type contains \"microsoft.compute/disks\" \r\n| extend diskState = tostring(properties.diskState)\r\n| where managedBy == \"\"\r\n    or diskState == 'Unattached'\r\n| project id, diskState, resourceGroup, location, subscriptionId",
                      "size": 2,
                      "noDataMessage": "No oprhaned disks found",
                      "noDataMessageStyle": 3,
                      "showExportToExcel": true,
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources",
                      "crossComponentResources": [
                        "{Subscriptions}"
                      ],
                      "gridSettings": {
                        "formatters": [
                          {
                            "columnMatch": "$gen_group",
                            "formatter": 13,
                            "formatOptions": {
                              "linkTarget": "Resource",
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "id",
                            "formatter": 5
                          },
                          {
                            "columnMatch": "subscriptionId",
                            "formatter": 5
                          }
                        ],
                        "rowLimit": 1000,
                        "filter": true,
                        "hierarchySettings": {
                          "treeType": 1,
                          "groupBy": [
                            "subscriptionId"
                          ],
                          "expandTopLevel": true,
                          "finalBy": "id"
                        }
                      },
                      "tileSettings": {
                        "titleContent": {
                          "columnMatch": "vmSize",
                          "formatter": 1,
                          "formatOptions": {
                            "showIcon": true
                          }
                        },
                        "leftContent": {
                          "columnMatch": "Count",
                          "formatter": 12,
                          "formatOptions": {
                            "palette": "auto",
                            "showIcon": true
                          },
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "maximumSignificantDigits": 3,
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        "showBorder": true
                      },
                      "graphSettings": {
                        "type": 0,
                        "topContent": {
                          "columnMatch": "vmSize",
                          "formatter": 1
                        },
                        "centerContent": {
                          "columnMatch": "Count",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "maximumSignificantDigits": 3,
                              "maximumFractionDigits": 2
                            }
                          }
                        }
                      }
                    },
                    "conditionalVisibilities": [
                      {
                        "parameterName": "selectedTab",
                        "comparison": "isEqualTo",
                        "value": "compute"
                      },
                      {
                        "parameterName": "compute",
                        "comparison": "isEqualTo",
                        "value": "azure"
                      },
                      {
                        "parameterName": "hardware",
                        "comparison": "isEqualTo",
                        "value": "orphaneddisks"
                      }
                    ],
                    "name": "query - Azure Compute - Orphaned Disks",
                    "styleSettings": {
                      "padding": "0 0 200px 0"
                    }
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "resources\r\n| where type contains \"microsoft.network/networkinterfaces\"\r\n| where properties !has 'virtualmachine'\r\n| project id, resourceGroup, location, subscriptionId",
                      "size": 2,
                      "noDataMessage": "No orphaned nics found",
                      "noDataMessageStyle": 3,
                      "showExportToExcel": true,
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources",
                      "crossComponentResources": [
                        "{Subscriptions}"
                      ],
                      "visualization": "table",
                      "gridSettings": {
                        "formatters": [
                          {
                            "columnMatch": "$gen_group",
                            "formatter": 13,
                            "formatOptions": {
                              "linkTarget": "Resource",
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "id",
                            "formatter": 5
                          },
                          {
                            "columnMatch": "subscriptionId",
                            "formatter": 5
                          }
                        ],
                        "rowLimit": 1000,
                        "filter": true,
                        "hierarchySettings": {
                          "treeType": 1,
                          "groupBy": [
                            "subscriptionId"
                          ],
                          "expandTopLevel": true,
                          "finalBy": "id"
                        }
                      },
                      "tileSettings": {
                        "titleContent": {
                          "columnMatch": "vmSize",
                          "formatter": 1,
                          "formatOptions": {
                            "showIcon": true
                          }
                        },
                        "leftContent": {
                          "columnMatch": "Count",
                          "formatter": 12,
                          "formatOptions": {
                            "palette": "auto",
                            "showIcon": true
                          },
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "maximumSignificantDigits": 3,
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        "showBorder": true
                      },
                      "graphSettings": {
                        "type": 0,
                        "topContent": {
                          "columnMatch": "vmSize",
                          "formatter": 1
                        },
                        "centerContent": {
                          "columnMatch": "Count",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "maximumSignificantDigits": 3,
                              "maximumFractionDigits": 2
                            }
                          }
                        }
                      }
                    },
                    "conditionalVisibilities": [
                      {
                        "parameterName": "selectedTab",
                        "comparison": "isEqualTo",
                        "value": "compute"
                      },
                      {
                        "parameterName": "compute",
                        "comparison": "isEqualTo",
                        "value": "azure"
                      },
                      {
                        "parameterName": "hardware",
                        "comparison": "isEqualTo",
                        "value": "orphanednics"
                      }
                    ],
                    "name": "query - Azure Compute Orphaned NICs",
                    "styleSettings": {
                      "padding": "0 0 200px 0"
                    }
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "where type == \"microsoft.hybridcompute/machines\"\r\n| project id, status = properties.status, \r\n\t\t\t  LastSeen = properties.lastStatusChange, \r\n\t\t\t  FQDN = properties.machineFqdn, \r\n\t\t\t  OS = properties.osName, \r\n\t\t\t  ServerVersion = properties.osVersion\r\n| extend ServerVersion = iif(OS has \"windows\", ServerVersion = case(\r\n    ServerVersion has '10.0.17763', 'Server 2019',\r\n    ServerVersion has '10.0.16299', 'Server 2016',\r\n    ServerVersion has '10.0.14393', 'Server 2016',\r\n    ServerVersion has '6.3.9600', 'Server 2012 R2',\r\n    strcat(\"Version  not found\", ServerVersion)), 'OS Not Windows')",
                      "size": 0,
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources",
                      "crossComponentResources": [
                        "{Subscriptions}"
                      ],
                      "visualization": "table",
                      "tileSettings": {
                        "titleContent": {
                          "columnMatch": "vmSize",
                          "formatter": 1,
                          "formatOptions": {
                            "showIcon": true
                          }
                        },
                        "leftContent": {
                          "columnMatch": "Count",
                          "formatter": 12,
                          "formatOptions": {
                            "palette": "auto",
                            "showIcon": true
                          },
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "maximumSignificantDigits": 3,
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        "showBorder": true
                      },
                      "graphSettings": {
                        "type": 0,
                        "topContent": {
                          "columnMatch": "vmSize",
                          "formatter": 1
                        },
                        "centerContent": {
                          "columnMatch": "Count",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "maximumSignificantDigits": 3,
                              "maximumFractionDigits": 2
                            }
                          }
                        }
                      }
                    },
                    "conditionalVisibilities": [
                      {
                        "parameterName": "selectedTab",
                        "comparison": "isEqualTo",
                        "value": "compute"
                      },
                      {
                        "parameterName": "compute",
                        "comparison": "isEqualTo",
                        "value": "arc"
                      }
                    ],
                    "name": "query - ARC Machines Inventory"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "## NoShow - End Compute\r\n\r\n## NoShow - Begin PaaS"
                    },
                    "conditionalVisibility": {
                      "parameterName": "noshow",
                      "comparison": "isEqualTo",
                      "value": "noshow"
                    },
                    "name": "text - NoShow Beging Networking"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "## PaaS Resources\r\n\r\n💡 Select tab to view releated resources for PaaS Services\r\n\r\n\r\n"
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "paas"
                    },
                    "name": "text - PaaS Text",
                    "styleSettings": {
                      "padding": "0 0 15px 0"
                    }
                  },
                  {
                    "type": 11,
                    "content": {
                      "version": "LinkItem/1.0",
                      "style": "tabs",
                      "links": [
                        {
                          "id": "a4ee3213-3bfc-4333-b798-934e866c48de",
                          "cellValue": "paas",
                          "linkTarget": "parameter",
                          "linkLabel": "Automation",
                          "subTarget": "automation",
                          "style": "link"
                        },
                        {
                          "id": "c5ba791c-2cc3-4c32-8b5c-eab75cc0354c",
                          "cellValue": "paas",
                          "linkTarget": "parameter",
                          "linkLabel": "App Services",
                          "subTarget": "apps",
                          "style": "link"
                        },
                        {
                          "id": "8d82d272-3094-4750-a058-9122b11ae50b",
                          "cellValue": "paas",
                          "linkTarget": "parameter",
                          "linkLabel": "Events",
                          "subTarget": "events",
                          "style": "link"
                        },
                        {
                          "id": "ed78617d-664d-4727-87c6-91ac79010e2d",
                          "cellValue": "paas",
                          "linkTarget": "parameter",
                          "linkLabel": "Data",
                          "subTarget": "data",
                          "style": "link"
                        },
                        {
                          "id": "a4e4ea2e-4c32-4143-92bd-27473db8bc81",
                          "cellValue": "paas",
                          "linkTarget": "parameter",
                          "linkLabel": "Storage and Backup",
                          "subTarget": "storage",
                          "style": "link"
                        }
                      ]
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "paas"
                    },
                    "name": "links - PaaS Tabs",
                    "styleSettings": {
                      "padding": "0 0 15px 0"
                    }
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "### Count of all Resource Types\r\n\r\n\r\n\r\n"
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "paas"
                    },
                    "name": "text - PaaS Text - Overview",
                    "styleSettings": {
                      "padding": "0 0 10px 0"
                    }
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "### NoShow - Begin PaaS - Automation"
                    },
                    "conditionalVisibility": {
                      "parameterName": "noshow",
                      "comparison": "isEqualTo",
                      "value": "noshow"
                    },
                    "name": "text - NoShow Begin Automation"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "resources\r\n| where type has 'microsoft.automation'\r\n\tor type has 'microsoft.logic'\r\n\tor type has 'microsoft.web/customapis'\r\n| extend type = case(\r\n\ttype =~ 'microsoft.automation/automationaccounts', 'Automation Accounts',\r\n\ttype == 'microsoft.web/serverfarms', \"App Service Plans\",\r\n\tkind == 'functionapp', \"Azure Functions\", \r\n\tkind == \"api\", \"API Apps\", \r\n\ttype == 'microsoft.web/sites', \"App Services\",\r\n\ttype =~ 'microsoft.web/connections', 'LogicApp Connectors',\r\n\ttype =~ 'microsoft.web/customapis','LogicApp API Connectors',\r\n\ttype =~ 'microsoft.logic/workflows','LogicApps',\r\n\ttype =~ 'microsoft.automation/automationaccounts/runbooks', 'Automation Runbooks',\r\n    type =~ 'microsoft.automation/automationaccounts/configurations', 'Automation Configurations',\r\nstrcat(\"Not Translated: \", type))\r\n| summarize count() by type\r\n| where type !has \"Not Translated\"",
                      "size": 1,
                      "noDataMessage": "No resources found",
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources",
                      "crossComponentResources": [
                        "{Subscriptions}"
                      ],
                      "visualization": "tiles",
                      "tileSettings": {
                        "titleContent": {
                          "columnMatch": "type",
                          "formatter": 1
                        },
                        "leftContent": {
                          "columnMatch": "count_",
                          "formatter": 12,
                          "formatOptions": {
                            "palette": "auto"
                          },
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "maximumSignificantDigits": 3,
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        "showBorder": true,
                        "sortCriteriaField": "type",
                        "sortOrderField": 1
                      }
                    },
                    "conditionalVisibilities": [
                      {
                        "parameterName": "selectedTab",
                        "comparison": "isEqualTo",
                        "value": "paas"
                      },
                      {
                        "parameterName": "paas",
                        "comparison": "isEqualTo",
                        "value": "automation"
                      }
                    ],
                    "name": "query - PaaS - Automation Overview"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "### Detailed View\r\n\r\n💡 select 'View Details' to see full return from Azure Resource Graph"
                    },
                    "conditionalVisibilities": [
                      {
                        "parameterName": "selectedTab",
                        "comparison": "isEqualTo",
                        "value": "paas"
                      },
                      {
                        "parameterName": "paas",
                        "comparison": "isEqualTo",
                        "value": "automation"
                      }
                    ],
                    "name": "text - PaaS Text - Automation - Details "
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "resources\r\n| where type has 'microsoft.automation'\r\n\t or type has 'microsoft.logic'\r\n\t or type has 'microsoft.web/customapis'\r\n| extend type = case(\r\n\ttype =~ 'microsoft.automation/automationaccounts', 'Automation Accounts',\r\n\ttype =~ 'microsoft.web/connections', 'LogicApp Connectors',\r\n\ttype =~ 'microsoft.web/customapis','LogicApp API Connectors',\r\n\ttype =~ 'microsoft.logic/workflows','LogicApps',\r\n\ttype =~ 'microsoft.automation/automationaccounts/runbooks', 'Automation Runbooks',\r\n\ttype =~ 'microsoft.automation/automationaccounts/configurations', 'Automation Configurations',\r\n\tstrcat(\"Not Translated: \", type))\r\n| extend RunbookType = tostring(properties.runbookType)\r\n| extend LogicAppTrigger = properties.definition.triggers\r\n| extend LogicAppTrigger = iif(type =~ 'LogicApps', case(\r\n\tLogicAppTrigger has 'manual', tostring(LogicAppTrigger.manual.type),\r\n\tLogicAppTrigger has 'Recurrence', tostring(LogicAppTrigger.Recurrence.type),\r\n\tstrcat(\"Unknown Trigger type\", LogicAppTrigger)), LogicAppTrigger)\r\n| extend State = case(\r\n\ttype =~ 'Automation Runbooks', properties.state, \r\n\ttype =~ 'LogicApps', properties.state,\r\n\ttype =~ 'Automation Accounts', properties.state,\r\n\ttype =~ 'Automation Configurations', properties.state,\r\n\t' ')\r\n| extend CreatedDate = case(\r\n\ttype =~ 'Automation Runbooks', properties.creationTime, \r\n\ttype =~ 'LogicApps', properties.createdTime,\r\n\ttype =~ 'Automation Accounts', properties.creationTime,\r\n\ttype =~ 'Automation Configurations', properties.creationTime,\r\n\t' ')\r\n| extend LastModified = case(\r\n\ttype =~ 'Automation Runbooks', properties.lastModifiedTime, \r\n\ttype =~ 'LogicApps', properties.changedTime,\r\n\ttype =~ 'Automation Accounts', properties.lastModifiedTime,\r\n\ttype =~ 'Automation Configurations', properties.lastModifiedTime,\r\n\t' ')\r\n| extend Details = pack_all()\r\n| project Resource=id, subscriptionId, type, resourceGroup, RunbookType, LogicAppTrigger, State, Details",
                      "size": 2,
                      "noDataMessage": "No resources found",
                      "showExportToExcel": true,
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources",
                      "crossComponentResources": [
                        "{Subscriptions}"
                      ],
                      "gridSettings": {
                        "formatters": [
                          {
                            "columnMatch": "$gen_group",
                            "formatter": 13,
                            "formatOptions": {
                              "linkTarget": "Resource",
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "Resource",
                            "formatter": 5
                          },
                          {
                            "columnMatch": "subscriptionId",
                            "formatter": 5
                          },
                          {
                            "columnMatch": "Details",
                            "formatter": 7,
                            "formatOptions": {
                              "linkTarget": "CellDetails",
                              "linkLabel": "🔍 View Details",
                              "linkIsContextBlade": true
                            }
                          }
                        ],
                        "rowLimit": 1000,
                        "filter": true,
                        "hierarchySettings": {
                          "treeType": 1,
                          "groupBy": [
                            "subscriptionId"
                          ],
                          "expandTopLevel": true,
                          "finalBy": "Resource"
                        }
                      },
                      "tileSettings": {
                        "titleContent": {
                          "columnMatch": "type",
                          "formatter": 1
                        },
                        "leftContent": {
                          "columnMatch": "count_",
                          "formatter": 12,
                          "formatOptions": {
                            "palette": "auto"
                          },
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "maximumSignificantDigits": 3,
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        "showBorder": true,
                        "sortCriteriaField": "type",
                        "sortOrderField": 1
                      }
                    },
                    "conditionalVisibilities": [
                      {
                        "parameterName": "selectedTab",
                        "comparison": "isEqualTo",
                        "value": "paas"
                      },
                      {
                        "parameterName": "paas",
                        "comparison": "isEqualTo",
                        "value": "automation"
                      }
                    ],
                    "name": "query - PaaS - Automation Detailed",
                    "styleSettings": {
                      "padding": "0 0 200px 0"
                    }
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "### NoShow - End PaaS - Automation"
                    },
                    "conditionalVisibility": {
                      "parameterName": "noshow",
                      "comparison": "isEqualTo",
                      "value": "noshow"
                    },
                    "name": "text - NoShow End - PaaS - Automation"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "### NoShow - Begin PaaS - Apps"
                    },
                    "conditionalVisibility": {
                      "parameterName": "noshow",
                      "comparison": "isEqualTo",
                      "value": "noshow"
                    },
                    "name": "text - NoShow Begin Automation"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "resources\r\n| where type has 'microsoft.web'\r\n\t or type =~ 'microsoft.apimanagement/service'\r\n\t or type =~ 'microsoft.network/frontdoors'\r\n\t or type =~ 'microsoft.network/applicationgateways'\r\n\t or type =~ 'microsoft.appconfiguration/configurationstores'\r\n| extend type = case(\r\n\ttype == 'microsoft.web/serverfarms', \"App Service Plans\",\r\n\tkind == 'functionapp', \"Azure Functions\", \r\n\tkind == \"api\", \"API Apps\", \r\n\ttype == 'microsoft.web/sites', \"App Services\",\r\n\ttype =~ 'microsoft.network/applicationgateways', 'App Gateways',\r\n\ttype =~ 'microsoft.network/frontdoors', 'Front Door',\r\n\ttype =~ 'microsoft.apimanagement/service', 'API Management',\r\n\ttype =~ 'microsoft.web/certificates', 'App Certificates',\r\n\ttype =~ 'microsoft.appconfiguration/configurationstores', 'App Config Stores',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| summarize count() by type",
                      "size": 1,
                      "noDataMessage": "No resources found",
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources",
                      "crossComponentResources": [
                        "{Subscriptions}"
                      ],
                      "visualization": "tiles",
                      "gridSettings": {
                        "formatters": [
                          {
                            "columnMatch": "$gen_group",
                            "formatter": 13,
                            "formatOptions": {
                              "linkTarget": null,
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "Resource",
                            "formatter": 5
                          },
                          {
                            "columnMatch": "subscriptionId",
                            "formatter": 5
                          }
                        ],
                        "hierarchySettings": {
                          "treeType": 1,
                          "groupBy": [
                            "subscriptionId"
                          ],
                          "expandTopLevel": true,
                          "finalBy": "Resource"
                        }
                      },
                      "tileSettings": {
                        "titleContent": {
                          "columnMatch": "type",
                          "formatter": 1
                        },
                        "leftContent": {
                          "columnMatch": "count_",
                          "formatter": 12,
                          "formatOptions": {
                            "palette": "auto"
                          },
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "maximumSignificantDigits": 3,
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        "showBorder": true,
                        "sortCriteriaField": "type",
                        "sortOrderField": 1
                      }
                    },
                    "conditionalVisibilities": [
                      {
                        "parameterName": "selectedTab",
                        "comparison": "isEqualTo",
                        "value": "paas"
                      },
                      {
                        "parameterName": "paas",
                        "comparison": "isEqualTo",
                        "value": "apps"
                      }
                    ],
                    "name": "query - PaaS - Apps Overview"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "### Detailed View\r\n\r\n💡 select 'View Details' to see full return from Azure Resource Graph"
                    },
                    "conditionalVisibilities": [
                      {
                        "parameterName": "selectedTab",
                        "comparison": "isEqualTo",
                        "value": "paas"
                      },
                      {
                        "parameterName": "paas",
                        "comparison": "isEqualTo",
                        "value": "apps"
                      }
                    ],
                    "name": "text - PaaS Text - App Services Details"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "resources\r\n| where type has 'microsoft.web'\r\n\t or type =~ 'microsoft.apimanagement/service'\r\n\t or type =~ 'microsoft.network/frontdoors'\r\n\t or type =~ 'microsoft.network/applicationgateways'\r\n\t or type =~ 'microsoft.appconfiguration/configurationstores'\r\n| extend type = case(\r\n\ttype == 'microsoft.web/serverfarms', \"App Service Plans\",\r\n\tkind == 'functionapp', \"Azure Functions\", \r\n\tkind == \"api\", \"API Apps\", \r\n\ttype == 'microsoft.web/sites', \"App Services\",\r\n\ttype =~ 'microsoft.network/applicationgateways', 'App Gateways',\r\n\ttype =~ 'microsoft.network/frontdoors', 'Front Door',\r\n\ttype =~ 'microsoft.apimanagement/service', 'API Management',\r\n\ttype =~ 'microsoft.web/certificates', 'App Certificates',\r\n\ttype =~ 'microsoft.appconfiguration/configurationstores', 'App Config Stores',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| extend Sku = case(\r\n\ttype =~ 'App Gateways', properties.sku.name, \r\n\ttype =~ 'Azure Functions', properties.sku,\r\n\ttype =~ 'API Management', sku.name,\r\n\ttype =~ 'App Service Plans', sku.name,\r\n\ttype =~ 'App Services', properties.sku,\r\n\ttype =~ 'App Config Stores', sku.name,\r\n\t' ')\r\n| extend State = case(\r\n\ttype =~ 'App Config Stores', properties.provisioningState,\r\n\ttype =~ 'App Service Plans', properties.status,\r\n\ttype =~ 'Azure Functions', properties.enabled,\r\n\ttype =~ 'App Services', properties.state,\r\n\ttype =~ 'API Management', properties.provisioningState,\r\n\ttype =~ 'App Gateways', properties.provisioningState,\r\n\ttype =~ 'Front Door', properties.provisioningState,\r\n\t' ')\r\n| mv-expand publicIpId=properties.frontendIPConfigurations\r\n| mv-expand publicIpId = publicIpId.properties.publicIPAddress.id\r\n| extend publicIpId = tostring(publicIpId)\r\n\t| join kind=leftouter(\r\n\t  \tResources\r\n  \t\t| where type =~ 'microsoft.network/publicipaddresses'\r\n  \t\t| project publicIpId = id, publicIpAddress = tostring(properties.ipAddress)) on publicIpId\r\n| extend PublicIP = case(\r\n\ttype =~ 'API Management', properties.publicIPAddresses,\r\n\ttype =~ 'App Gateways', publicIpAddress,\r\n\t' ')\r\n| extend Details = pack_all()\r\n| project Resource=id, type, subscriptionId, Sku, State, PublicIP, Details",
                      "size": 2,
                      "noDataMessage": "No resources found",
                      "showExportToExcel": true,
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources",
                      "crossComponentResources": [
                        "{Subscriptions}"
                      ],
                      "gridSettings": {
                        "formatters": [
                          {
                            "columnMatch": "$gen_group",
                            "formatter": 13,
                            "formatOptions": {
                              "linkTarget": "Resource",
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "Resource",
                            "formatter": 5
                          },
                          {
                            "columnMatch": "subscriptionId",
                            "formatter": 5
                          },
                          {
                            "columnMatch": "Details",
                            "formatter": 7,
                            "formatOptions": {
                              "linkTarget": "CellDetails",
                              "linkLabel": "🔍 View Details",
                              "linkIsContextBlade": true
                            }
                          }
                        ],
                        "rowLimit": 1000,
                        "filter": true,
                        "hierarchySettings": {
                          "treeType": 1,
                          "groupBy": [
                            "subscriptionId"
                          ],
                          "expandTopLevel": true,
                          "finalBy": "Resource"
                        }
                      },
                      "tileSettings": {
                        "titleContent": {
                          "columnMatch": "type",
                          "formatter": 1
                        },
                        "leftContent": {
                          "columnMatch": "count_",
                          "formatter": 12,
                          "formatOptions": {
                            "palette": "auto"
                          },
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "maximumSignificantDigits": 3,
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        "showBorder": true,
                        "sortCriteriaField": "type",
                        "sortOrderField": 1
                      }
                    },
                    "conditionalVisibilities": [
                      {
                        "parameterName": "selectedTab",
                        "comparison": "isEqualTo",
                        "value": "paas"
                      },
                      {
                        "parameterName": "paas",
                        "comparison": "isEqualTo",
                        "value": "apps"
                      }
                    ],
                    "name": "query - PaaS - Apps Detailed",
                    "styleSettings": {
                      "padding": "0 0 200px 0"
                    }
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "### NoShow - End PaaS - Apps"
                    },
                    "conditionalVisibility": {
                      "parameterName": "noshow",
                      "comparison": "isEqualTo",
                      "value": "noshow"
                    },
                    "name": "text - NoShow End PaaS - Apps"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "### NoShow - Begin PaaS - Events"
                    },
                    "conditionalVisibility": {
                      "parameterName": "noshow",
                      "comparison": "isEqualTo",
                      "value": "noshow"
                    },
                    "name": "text - NoShow Begin PaaS - Events"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "resources\r\n| where type has 'microsoft.servicebus'\r\n\tor type has 'microsoft.eventhub'\r\n\tor type has 'microsoft.eventgrid'\r\n\tor type has 'microsoft.relay'\r\n| extend type = case(\r\n\ttype == 'microsoft.eventgrid/systemtopics', \"EventGrid System Topics\",\r\n\ttype =~ \"microsoft.eventgrid/topics\", \"EventGrid Topics\",\r\n\ttype =~ 'microsoft.eventhub/namespaces', \"EventHub Namespaces\",\r\n\ttype =~ 'microsoft.servicebus/namespaces', 'ServiceBus Namespaces',\r\n\ttype =~ 'microsoft.relay/namespaces', 'Relays',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| summarize count() by type",
                      "size": 1,
                      "noDataMessage": "No resources found",
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources",
                      "crossComponentResources": [
                        "{Subscriptions}"
                      ],
                      "visualization": "tiles",
                      "gridSettings": {
                        "formatters": [
                          {
                            "columnMatch": "$gen_group",
                            "formatter": 13,
                            "formatOptions": {
                              "linkTarget": null,
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "Resource",
                            "formatter": 5
                          },
                          {
                            "columnMatch": "subscriptionId",
                            "formatter": 5
                          }
                        ],
                        "hierarchySettings": {
                          "treeType": 1,
                          "groupBy": [
                            "subscriptionId"
                          ],
                          "expandTopLevel": true,
                          "finalBy": "Resource"
                        }
                      },
                      "tileSettings": {
                        "titleContent": {
                          "columnMatch": "type",
                          "formatter": 1
                        },
                        "leftContent": {
                          "columnMatch": "count_",
                          "formatter": 12,
                          "formatOptions": {
                            "palette": "auto"
                          },
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "maximumSignificantDigits": 3,
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        "showBorder": true,
                        "sortCriteriaField": "type",
                        "sortOrderField": 1
                      }
                    },
                    "conditionalVisibilities": [
                      {
                        "parameterName": "selectedTab",
                        "comparison": "isEqualTo",
                        "value": "paas"
                      },
                      {
                        "parameterName": "paas",
                        "comparison": "isEqualTo",
                        "value": "events"
                      }
                    ],
                    "name": "query - PaaS - Events Overview"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "### Detailed View\r\n\r\n💡 select 'View Details' to see full return from Azure Resource Graph"
                    },
                    "conditionalVisibilities": [
                      {
                        "parameterName": "selectedTab",
                        "comparison": "isEqualTo",
                        "value": "paas"
                      },
                      {
                        "parameterName": "paas",
                        "comparison": "isEqualTo",
                        "value": "events"
                      }
                    ],
                    "name": "text - PaaS Text - Events - Details"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "resources\r\n| where type has 'microsoft.servicebus'\r\n\tor type has 'microsoft.eventhub'\r\n\tor type has 'microsoft.eventgrid'\r\n\tor type has 'microsoft.relay'\r\n| extend type = case(\r\n\ttype == 'microsoft.eventgrid/systemtopics', \"EventGrid System Topics\",\r\n\ttype =~ \"microsoft.eventgrid/topics\", \"EventGrid Topics\",\r\n\ttype =~ 'microsoft.eventhub/namespaces', \"EventHub Namespaces\",\r\n\ttype =~ 'microsoft.servicebus/namespaces', 'ServiceBus Namespaces',\r\n\ttype =~ 'microsoft.relay/namespaces', 'Relays',\r\n\tstrcat(\"Not Translated: \", type))\r\n| extend Sku = case(\r\n\ttype =~ 'Relays', sku.name, \r\n\ttype =~ 'EventGrid System Topics', properties.sku,\r\n\ttype =~ 'EventGrid Topics', sku.name,\r\n\ttype =~ 'EventHub Namespaces', sku.name,\r\n\ttype =~ 'ServiceBus Namespaces', sku.sku,\r\n\t' ')\r\n| extend Endpoint = case(\r\n\ttype =~ 'Relays', properties.serviceBusEndpoint,\r\n\ttype =~ 'EventGrid Topics', properties.endpoint,\r\n\ttype =~ 'EventHub Namespaces', properties.serviceBusEndpoint,\r\n\ttype =~ 'ServiceBus Namespaces', properties.serviceBusEndpoint,\r\n\t' ')\r\n| extend Status = case(\r\n\ttype =~ 'Relays', properties.provisioningState,\r\n\ttype =~ 'EventGrid System Topics', properties.provisioningState,\r\n\ttype =~ 'EventGrid Topics', properties.publicNetworkAccess,\r\n\ttype =~ 'EventHub Namespaces', properties.status,\r\n\ttype =~ 'ServiceBus Namespaces', properties.status,\r\n\t' ')\r\n| extend Details = pack_all()\r\n| project Resource=id, subscriptionId, resourceGroup, Sku, Status, Endpoint, Details",
                      "size": 2,
                      "noDataMessage": "No resources found",
                      "showExportToExcel": true,
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources",
                      "crossComponentResources": [
                        "{Subscriptions}"
                      ],
                      "gridSettings": {
                        "formatters": [
                          {
                            "columnMatch": "$gen_group",
                            "formatter": 13,
                            "formatOptions": {
                              "linkTarget": "Resource",
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "Resource",
                            "formatter": 5
                          },
                          {
                            "columnMatch": "subscriptionId",
                            "formatter": 5
                          },
                          {
                            "columnMatch": "Details",
                            "formatter": 7,
                            "formatOptions": {
                              "linkTarget": "CellDetails",
                              "linkLabel": "🔍 View Details",
                              "linkIsContextBlade": true
                            }
                          }
                        ],
                        "rowLimit": 1000,
                        "filter": true,
                        "hierarchySettings": {
                          "treeType": 1,
                          "groupBy": [
                            "subscriptionId"
                          ],
                          "expandTopLevel": true,
                          "finalBy": "Resource"
                        }
                      },
                      "tileSettings": {
                        "titleContent": {
                          "columnMatch": "type",
                          "formatter": 1
                        },
                        "leftContent": {
                          "columnMatch": "count_",
                          "formatter": 12,
                          "formatOptions": {
                            "palette": "auto"
                          },
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "maximumSignificantDigits": 3,
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        "showBorder": true,
                        "sortCriteriaField": "type",
                        "sortOrderField": 1
                      }
                    },
                    "conditionalVisibilities": [
                      {
                        "parameterName": "selectedTab",
                        "comparison": "isEqualTo",
                        "value": "paas"
                      },
                      {
                        "parameterName": "paas",
                        "comparison": "isEqualTo",
                        "value": "events"
                      }
                    ],
                    "name": "query - PaaS - Events Detailed",
                    "styleSettings": {
                      "padding": "0 0 200px 0"
                    }
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "### NoShow - End PaaS - Events"
                    },
                    "conditionalVisibility": {
                      "parameterName": "noshow",
                      "comparison": "isEqualTo",
                      "value": "noshow"
                    },
                    "name": "text - NoShow End PaaS - Events"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "### NoShow - Begin PaaS - Data"
                    },
                    "conditionalVisibility": {
                      "parameterName": "noshow",
                      "comparison": "isEqualTo",
                      "value": "noshow"
                    },
                    "name": "text - NoShow Begin PaaS - Data"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "resources \r\n| where type =~ 'microsoft.documentdb/databaseaccounts'\r\n\tor type =~ 'microsoft.sql/servers/databases'\r\n\tor type =~ 'microsoft.dbformysql/servers'\r\n\tor type =~ 'microsoft.sql/servers'\r\n| extend type = case(\r\n\ttype =~ 'microsoft.documentdb/databaseaccounts', 'CosmosDB',\r\n\ttype =~ 'microsoft.sql/servers/databases', 'SQL DBs',\r\n\ttype =~ 'microsoft.dbformysql/servers', 'MySQL',\r\n\ttype =~ 'microsoft.sql/servers', 'SQL Servers',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| summarize count() by type",
                      "size": 1,
                      "noDataMessage": "No resources found",
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources",
                      "crossComponentResources": [
                        "{Subscriptions}"
                      ],
                      "visualization": "tiles",
                      "gridSettings": {
                        "formatters": [
                          {
                            "columnMatch": "$gen_group",
                            "formatter": 13,
                            "formatOptions": {
                              "linkTarget": null,
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "Resource",
                            "formatter": 5
                          },
                          {
                            "columnMatch": "subscriptionId",
                            "formatter": 5
                          }
                        ],
                        "hierarchySettings": {
                          "treeType": 1,
                          "groupBy": [
                            "subscriptionId"
                          ],
                          "expandTopLevel": true,
                          "finalBy": "Resource"
                        }
                      },
                      "tileSettings": {
                        "titleContent": {
                          "columnMatch": "type",
                          "formatter": 1
                        },
                        "leftContent": {
                          "columnMatch": "count_",
                          "formatter": 12,
                          "formatOptions": {
                            "palette": "auto"
                          },
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "maximumSignificantDigits": 3,
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        "showBorder": true,
                        "sortCriteriaField": "type",
                        "sortOrderField": 1
                      }
                    },
                    "conditionalVisibilities": [
                      {
                        "parameterName": "selectedTab",
                        "comparison": "isEqualTo",
                        "value": "paas"
                      },
                      {
                        "parameterName": "paas",
                        "comparison": "isEqualTo",
                        "value": "data"
                      }
                    ],
                    "name": "query - PaaS - Data Overview"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "### Detailed View\r\n\r\n💡 select 'View Details' to see full return from Azure Resource Graph"
                    },
                    "conditionalVisibilities": [
                      {
                        "parameterName": "selectedTab",
                        "comparison": "isEqualTo",
                        "value": "paas"
                      },
                      {
                        "parameterName": "paas",
                        "comparison": "isEqualTo",
                        "value": "data"
                      }
                    ],
                    "name": "text - PaaS Text - Data - Details"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "// data\r\n// Click the \"Run query\" command above to execute the query and see results.\r\nresources \r\n| where type =~ 'microsoft.documentdb/databaseaccounts'\r\n\tor type =~ 'microsoft.sql/servers/databases'\r\n\tor type =~ 'microsoft.dbformysql/servers'\r\n\tor type =~ 'microsoft.sql/servers'\r\n| extend type = case(\r\n\ttype =~ 'microsoft.documentdb/databaseaccounts', 'CosmosDB',\r\n\ttype =~ 'microsoft.sql/servers/databases', 'SQL DBs',\r\n\ttype =~ 'microsoft.dbformysql/servers', 'MySQL',\r\n\ttype =~ 'microsoft.sql/servers', 'SQL Servers',\r\n\tstrcat(\"Not Translated: \", type))\r\n| extend Sku = case(\r\n\ttype =~ 'CosmosDB', properties.databaseAccountOfferType,\r\n\ttype =~ 'SQL DBs', sku.name,\r\n\ttype =~ 'MySQL', sku.name,\r\n\t' ')\r\n| extend Status = case(\r\n\ttype =~ 'CosmosDB', properties.provisioningState,\r\n\ttype =~ 'SQL DBs', properties.status,\r\n\ttype =~ 'MySQL', properties.userVisibleState,\r\n\t' ')\r\n| extend Endpoint = case(\r\n\ttype =~ 'MySQL', properties.fullyQualifiedDomainName,\r\n\ttype =~ 'SQL Servers', properties.fullyQualifiedDomainName,\r\n\ttype =~ 'CosmosDB', properties.documentEndpoint,\r\n\t' ')\r\n| extend maxSizeGB = todouble(case(\r\n\ttype =~ 'SQL DBs', properties.maxSizeBytes,\r\n\ttype =~ 'MySQL', properties.storageProfile.storageMB,\r\n\t' '))\r\n| extend maxSizeGB = iif(type has 'SQL DBs', maxSizeGB /1000 /1000, maxSizeGB)\r\n| extend Details = pack_all()\r\n| project Resource=id, resourceGroup, subscriptionId, type, Sku, Status, Endpoint, maxSizeGB, Details\r\n\r\n",
                      "size": 2,
                      "noDataMessage": "No resources found",
                      "showExportToExcel": true,
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources",
                      "crossComponentResources": [
                        "{Subscriptions}"
                      ],
                      "gridSettings": {
                        "formatters": [
                          {
                            "columnMatch": "$gen_group",
                            "formatter": 13,
                            "formatOptions": {
                              "linkTarget": "Resource",
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "Resource",
                            "formatter": 5
                          },
                          {
                            "columnMatch": "subscriptionId",
                            "formatter": 5
                          },
                          {
                            "columnMatch": "maxSizeGB",
                            "formatter": 0,
                            "numberFormat": {
                              "unit": 4,
                              "options": {
                                "style": "decimal",
                                "useGrouping": false
                              }
                            }
                          },
                          {
                            "columnMatch": "Details",
                            "formatter": 7,
                            "formatOptions": {
                              "linkTarget": "CellDetails",
                              "linkLabel": "🔍 View Details",
                              "linkIsContextBlade": true
                            }
                          }
                        ],
                        "rowLimit": 1000,
                        "hierarchySettings": {
                          "treeType": 1,
                          "groupBy": [
                            "subscriptionId"
                          ],
                          "expandTopLevel": true,
                          "finalBy": "Resource"
                        }
                      },
                      "tileSettings": {
                        "titleContent": {
                          "columnMatch": "type",
                          "formatter": 1
                        },
                        "leftContent": {
                          "columnMatch": "count_",
                          "formatter": 12,
                          "formatOptions": {
                            "palette": "auto"
                          },
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "maximumSignificantDigits": 3,
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        "showBorder": true,
                        "sortCriteriaField": "type",
                        "sortOrderField": 1
                      }
                    },
                    "conditionalVisibilities": [
                      {
                        "parameterName": "selectedTab",
                        "comparison": "isEqualTo",
                        "value": "paas"
                      },
                      {
                        "parameterName": "paas",
                        "comparison": "isEqualTo",
                        "value": "data"
                      }
                    ],
                    "name": "query - PaaS - Data Detailed",
                    "styleSettings": {
                      "padding": "0 0 200px 0"
                    }
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "### NoShow - End PaaS - Data"
                    },
                    "conditionalVisibility": {
                      "parameterName": "noshow",
                      "comparison": "isEqualTo",
                      "value": "noshow"
                    },
                    "name": "text - NoShow End PaaS - Data"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "### NoShow - Begin PaaS - Storage"
                    },
                    "conditionalVisibility": {
                      "parameterName": "noshow",
                      "comparison": "isEqualTo",
                      "value": "noshow"
                    },
                    "name": "text - NoShow Begin PaaS - Storage"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "resources \r\n| where type =~ 'microsoft.storagesync/storagesyncservices'\r\n\tor type =~ 'microsoft.recoveryservices/vaults'\r\n\tor type =~ 'microsoft.storage/storageaccounts'\r\n\tor type =~ 'microsoft.keyvault/vaults'\r\n| extend type = case(\r\n\ttype =~ 'microsoft.storagesync/storagesyncservices', 'Azure File Sync',\r\n\ttype =~ 'microsoft.recoveryservices/vaults', 'Azure Backup',\r\n\ttype =~ 'microsoft.storage/storageaccounts', 'Storage Accounts',\r\n\ttype =~ 'microsoft.keyvault/vaults', 'Key Vaults',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| summarize count() by type",
                      "size": 1,
                      "noDataMessage": "No resources found",
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources",
                      "crossComponentResources": [
                        "{Subscriptions}"
                      ],
                      "visualization": "tiles",
                      "gridSettings": {
                        "formatters": [
                          {
                            "columnMatch": "$gen_group",
                            "formatter": 13,
                            "formatOptions": {
                              "linkTarget": null,
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "Resource",
                            "formatter": 5
                          },
                          {
                            "columnMatch": "subscriptionId",
                            "formatter": 5
                          }
                        ],
                        "hierarchySettings": {
                          "treeType": 1,
                          "groupBy": [
                            "subscriptionId"
                          ],
                          "expandTopLevel": true,
                          "finalBy": "Resource"
                        }
                      },
                      "tileSettings": {
                        "titleContent": {
                          "columnMatch": "type",
                          "formatter": 1
                        },
                        "leftContent": {
                          "columnMatch": "count_",
                          "formatter": 12,
                          "formatOptions": {
                            "palette": "auto"
                          },
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "maximumSignificantDigits": 3,
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        "showBorder": true,
                        "sortCriteriaField": "type",
                        "sortOrderField": 1
                      }
                    },
                    "conditionalVisibilities": [
                      {
                        "parameterName": "selectedTab",
                        "comparison": "isEqualTo",
                        "value": "paas"
                      },
                      {
                        "parameterName": "paas",
                        "comparison": "isEqualTo",
                        "value": "storage"
                      }
                    ],
                    "name": "query - PaaS - Data Overview "
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "### Detailed View\r\n\r\n💡 select 'View Details' to see full return from Azure Resource Graph"
                    },
                    "conditionalVisibilities": [
                      {
                        "parameterName": "selectedTab",
                        "comparison": "isEqualTo",
                        "value": "paas"
                      },
                      {
                        "parameterName": "paas",
                        "comparison": "isEqualTo",
                        "value": "storage"
                      }
                    ],
                    "name": "text - PaaS Text - Storage - Details"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "resources \r\n| where type =~ 'microsoft.storagesync/storagesyncservices'\r\n\tor type =~ 'microsoft.recoveryservices/vaults'\r\n\tor type =~ 'microsoft.storage/storageaccounts'\r\n\tor type =~ 'microsoft.keyvault/vaults'\r\n| extend type = case(\r\n\ttype =~ 'microsoft.storagesync/storagesyncservices', 'Azure File Sync',\r\n\ttype =~ 'microsoft.recoveryservices/vaults', 'Azure Backup',\r\n\ttype =~ 'microsoft.storage/storageaccounts', 'Storage Accounts',\r\n\ttype =~ 'microsoft.keyvault/vaults', 'Key Vaults',\r\n\tstrcat(\"Not Translated: \", type))\r\n| extend Sku = case(\r\n\ttype !has 'Key Vaults', sku.name,\r\n\ttype =~ 'Key Vaults', properties.sku.name,\r\n\t' ')\r\n| extend Details = pack_all()\r\n| project Resource=id, type, kind, subscriptionId, resourceGroup, Sku, Details",
                      "size": 2,
                      "noDataMessage": "No resources found",
                      "showExportToExcel": true,
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources",
                      "crossComponentResources": [
                        "{Subscriptions}"
                      ],
                      "gridSettings": {
                        "formatters": [
                          {
                            "columnMatch": "$gen_group",
                            "formatter": 13,
                            "formatOptions": {
                              "linkTarget": "Resource",
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "Resource",
                            "formatter": 5
                          },
                          {
                            "columnMatch": "subscriptionId",
                            "formatter": 5
                          },
                          {
                            "columnMatch": "Details",
                            "formatter": 7,
                            "formatOptions": {
                              "linkTarget": "CellDetails",
                              "linkLabel": "🔍 View Details",
                              "linkIsContextBlade": true
                            }
                          }
                        ],
                        "rowLimit": 1000,
                        "filter": true,
                        "hierarchySettings": {
                          "treeType": 1,
                          "groupBy": [
                            "subscriptionId"
                          ],
                          "expandTopLevel": true,
                          "finalBy": "Resource"
                        }
                      }
                    },
                    "conditionalVisibilities": [
                      {
                        "parameterName": "selectedTab",
                        "comparison": "isEqualTo",
                        "value": "paas"
                      },
                      {
                        "parameterName": "paas",
                        "comparison": "isEqualTo",
                        "value": "storage"
                      }
                    ],
                    "name": "query - PaaS - Data Detailed",
                    "styleSettings": {
                      "padding": "0 0 200px 0"
                    }
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "### NoShow - End PaaS - Storage"
                    },
                    "conditionalVisibility": {
                      "parameterName": "noshow",
                      "comparison": "isEqualTo",
                      "value": "noshow"
                    },
                    "name": "text - NoShow End PaaS - Storage - Copy"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "## End PaaS\r\n\r\n\r\n## Begin Networking"
                    },
                    "conditionalVisibility": {
                      "parameterName": "noshow",
                      "comparison": "isEqualTo",
                      "value": "noshow"
                    },
                    "name": "text - NoShow Monitoring Security"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "## Networking Overview"
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "network"
                    },
                    "name": "text - Networking Overview"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "where type has \"microsoft.network\"\r\n| extend type = case(\r\n\ttype == 'microsoft.network/networkinterfaces', \"NICs\",\r\n\ttype == 'microsoft.network/networksecuritygroups', \"NSGs\", \r\n\ttype == \"microsoft.network/publicipaddresses\", \"Public IPs\", \r\n\ttype == 'microsoft.network/virtualnetworks', \"vNets\",\r\n\ttype == 'microsoft.network/networkwatchers/connectionmonitors', \"Connection Monitors\",\r\n\ttype == 'microsoft.network/privatednszones', \"Private DNS\",\r\n\ttype == 'microsoft.network/virtualnetworkgateways', @\"vNet Gateways\",\r\n\ttype == 'microsoft.network/connections', \"Connections\",\r\n\ttype == 'microsoft.network/networkwatchers', \"Network Watchers\",\r\n\ttype == 'microsoft.network/privateendpoints', \"Private Endpoints\",\r\n\ttype == 'microsoft.network/localnetworkgateways', \"Local Network Gateways\",\r\n\ttype == 'microsoft.network/privatednszones/virtualnetworklinks', \"vNet Links\",\r\n\ttype == 'microsoft.network/dnszones', 'DNS Zones',\r\n\ttype == 'microsoft.network/networkwatchers/flowlogs', 'Flow Logs',\r\n\ttype == 'microsoft.network/routetables', 'Route Tables',\r\n\ttype == 'microsoft.network/loadbalancers', 'Load Balancers',\r\n\tstrcat(\"Not Translated: \", type))\r\n| summarize count() by type\r\n| where type !has \"Not Translated\"",
                      "size": 2,
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources",
                      "crossComponentResources": [
                        "{Subscriptions}"
                      ],
                      "visualization": "tiles",
                      "tileSettings": {
                        "titleContent": {
                          "columnMatch": "type",
                          "formatter": 1
                        },
                        "leftContent": {
                          "columnMatch": "count_",
                          "formatter": 12,
                          "formatOptions": {
                            "palette": "auto"
                          },
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "maximumSignificantDigits": 3,
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        "showBorder": true,
                        "sortCriteriaField": "count_",
                        "sortOrderField": 2
                      }
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "network"
                    },
                    "name": "query - Networking Summary"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "## Networking Details\r\n\r\n💡 select tab to view NSG Details\r\n\r\n💡 select 'View Details' to see full return from Azure Resource Graph"
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "network"
                    },
                    "name": "text - Neworking Details"
                  },
                  {
                    "type": 11,
                    "content": {
                      "version": "LinkItem/1.0",
                      "style": "tabs",
                      "links": [
                        {
                          "id": "11426c5c-1edb-41a5-bb7f-fbfb8bbc4bba",
                          "cellValue": "network",
                          "linkTarget": "parameter",
                          "linkLabel": "Unassociated NSGs",
                          "subTarget": "blanknsgs",
                          "style": "link"
                        },
                        {
                          "id": "5c167305-3eff-4612-a28a-8be527307914",
                          "cellValue": "network",
                          "linkTarget": "parameter",
                          "linkLabel": "NSG Rules",
                          "subTarget": "nsgrules",
                          "style": "link"
                        }
                      ]
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "network"
                    },
                    "name": "links - Networking Details - Tabs"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "Resources\r\n| where type =~ 'microsoft.network/networksecuritygroups' and isnull(properties.networkInterfaces) and isnull(properties.subnets)\r\n| project Resource=id, resourceGroup, subscriptionId, location",
                      "size": 0,
                      "noDataMessage": "No Unassociated NSGs Found",
                      "noDataMessageStyle": 3,
                      "showExportToExcel": true,
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources",
                      "crossComponentResources": [
                        "{Subscriptions}"
                      ],
                      "visualization": "table",
                      "gridSettings": {
                        "formatters": [
                          {
                            "columnMatch": "$gen_group",
                            "formatter": 13,
                            "formatOptions": {
                              "linkTarget": "Resource",
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "Resource",
                            "formatter": 5
                          },
                          {
                            "columnMatch": "subscriptionId",
                            "formatter": 5
                          },
                          {
                            "columnMatch": "id",
                            "formatter": 5
                          },
                          {
                            "columnMatch": "Details",
                            "formatter": 7,
                            "formatOptions": {
                              "linkTarget": "CellDetails",
                              "linkLabel": "🔍 View Details",
                              "linkIsContextBlade": true
                            }
                          }
                        ],
                        "hierarchySettings": {
                          "treeType": 1,
                          "groupBy": [
                            "subscriptionId"
                          ],
                          "expandTopLevel": true,
                          "finalBy": "Resource"
                        }
                      },
                      "tileSettings": {
                        "titleContent": {
                          "columnMatch": "type",
                          "formatter": 1
                        },
                        "leftContent": {
                          "columnMatch": "count_",
                          "formatter": 12,
                          "formatOptions": {
                            "palette": "auto"
                          },
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "maximumSignificantDigits": 3,
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        "showBorder": true,
                        "sortCriteriaField": "count_",
                        "sortOrderField": 2
                      }
                    },
                    "conditionalVisibilities": [
                      {
                        "parameterName": "selectedTab",
                        "comparison": "isEqualTo",
                        "value": "network"
                      },
                      {
                        "parameterName": "network",
                        "comparison": "isEqualTo",
                        "value": "blanknsgs"
                      }
                    ],
                    "name": "query - Networking Details - Unassociated NSGs",
                    "styleSettings": {
                      "padding": "0 0 100px 0"
                    }
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "Resources\r\n    | where type =~ 'microsoft.network/networksecuritygroups'\r\n    | project id, nsgRules = parse_json(parse_json(properties).securityRules), networksecurityGroupName = name, subscriptionId, resourceGroup , location\r\n    | mvexpand nsgRule = nsgRules\r\n    | project id, location, access=nsgRule.properties.access,protocol=nsgRule.properties.protocol ,direction=nsgRule.properties.direction,provisioningState= nsgRule.properties.provisioningState ,priority=nsgRule.properties.priority, \r\n        sourceAddressPrefix = nsgRule.properties.sourceAddressPrefix, \r\n        sourceAddressPrefixes = nsgRule.properties.sourceAddressPrefixes,\r\n        destinationAddressPrefix = nsgRule.properties.destinationAddressPrefix, \r\n        destinationAddressPrefixes = nsgRule.properties.destinationAddressPrefixes, \r\n        networksecurityGroupName, networksecurityRuleName = tostring(nsgRule.name), \r\n        subscriptionId, resourceGroup,\r\n        destinationPortRanges = nsgRule.properties.destinationPortRanges,\r\n        destinationPortRange = nsgRule.properties.destinationPortRange,\r\n        sourcePortRanges = nsgRule.properties.sourcePortRanges,\r\n        sourcePortRange = nsgRule.properties.sourcePortRange\r\n| extend Details = pack_all()\r\n| project id, location, access, direction, subscriptionId, resourceGroup, Details",
                      "size": 2,
                      "showExportToExcel": true,
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources",
                      "crossComponentResources": [
                        "{Subscriptions}"
                      ],
                      "visualization": "table",
                      "gridSettings": {
                        "formatters": [
                          {
                            "columnMatch": "$gen_group",
                            "formatter": 13,
                            "formatOptions": {
                              "linkTarget": "Resource",
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "id",
                            "formatter": 5
                          },
                          {
                            "columnMatch": "subscriptionId",
                            "formatter": 5
                          },
                          {
                            "columnMatch": "resourceGroup",
                            "formatter": 0,
                            "formatOptions": {
                              "customColumnWidthSetting": "24.1429ch"
                            }
                          },
                          {
                            "columnMatch": "Details",
                            "formatter": 7,
                            "formatOptions": {
                              "linkTarget": "CellDetails",
                              "linkLabel": "🔍 View Details",
                              "linkIsContextBlade": true
                            }
                          }
                        ],
                        "rowLimit": 1000,
                        "filter": true,
                        "hierarchySettings": {
                          "treeType": 1,
                          "groupBy": [
                            "subscriptionId"
                          ],
                          "expandTopLevel": true,
                          "finalBy": "id"
                        }
                      },
                      "tileSettings": {
                        "titleContent": {
                          "columnMatch": "type",
                          "formatter": 1
                        },
                        "leftContent": {
                          "columnMatch": "count_",
                          "formatter": 12,
                          "formatOptions": {
                            "palette": "auto"
                          },
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "maximumSignificantDigits": 3,
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        "showBorder": true,
                        "sortCriteriaField": "count_",
                        "sortOrderField": 2
                      }
                    },
                    "conditionalVisibilities": [
                      {
                        "parameterName": "selectedTab",
                        "comparison": "isEqualTo",
                        "value": "network"
                      },
                      {
                        "parameterName": "network",
                        "comparison": "isEqualTo",
                        "value": "nsgrules"
                      }
                    ],
                    "name": "query - Networking Details - NSG Rules",
                    "styleSettings": {
                      "padding": "0 0 200px 0"
                    }
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "## End Networking\r\n\r\n\r\n## Begin Monitoring & Security"
                    },
                    "conditionalVisibility": {
                      "parameterName": "noshow",
                      "comparison": "isEqualTo",
                      "value": "noshow"
                    },
                    "name": "text - End Networking"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "## Monitor & Security  \r\n   \r\n   \r\n   \r\n### Workspaces Overview"
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "monitor"
                    },
                    "name": "text - Monitor & Security"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "resources \r\n| where type =~ 'microsoft.operationalinsights/workspaces'\r\nor type =~ 'microsoft.insights/components'\r\n| summarize count() by type\r\n| extend type = case(\r\ntype == 'microsoft.insights/components', \"Application Insights\",\r\ntype == 'microsoft.operationalinsights/workspaces', \"Log Analytics workspaces\",\r\nstrcat(type, type))",
                      "size": 4,
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources",
                      "crossComponentResources": [
                        "{Subscriptions}"
                      ],
                      "visualization": "tiles",
                      "gridSettings": {
                        "formatters": [
                          {
                            "columnMatch": "Solutions",
                            "formatter": 5
                          },
                          {
                            "columnMatch": "AzureSecurityCenter",
                            "formatter": 18,
                            "formatOptions": {
                              "thresholdsOptions": "icons",
                              "thresholdsGrid": [
                                {
                                  "operator": "==",
                                  "representation": "disabled",
                                  "text": "{0}{1}"
                                },
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "Available",
                                  "text": "{0}{1}"
                                }
                              ]
                            }
                          },
                          {
                            "columnMatch": "AzureSecurityCenterFree",
                            "formatter": 18,
                            "formatOptions": {
                              "thresholdsOptions": "icons",
                              "thresholdsGrid": [
                                {
                                  "operator": "==",
                                  "thresholdValue": "Not Enabled",
                                  "representation": "disabled",
                                  "text": "{0}{1}"
                                },
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "Available",
                                  "text": "{0}{1}"
                                }
                              ]
                            }
                          },
                          {
                            "columnMatch": "AzureSentinel",
                            "formatter": 18,
                            "formatOptions": {
                              "thresholdsOptions": "icons",
                              "thresholdsGrid": [
                                {
                                  "operator": "==",
                                  "thresholdValue": "Not Enabled",
                                  "representation": "disabled",
                                  "text": "{0}{1}"
                                },
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "Available",
                                  "text": "{0}{1}"
                                }
                              ]
                            }
                          },
                          {
                            "columnMatch": "AzureMonitorVMs",
                            "formatter": 18,
                            "formatOptions": {
                              "thresholdsOptions": "icons",
                              "thresholdsGrid": [
                                {
                                  "operator": "==",
                                  "thresholdValue": "Not Enabled",
                                  "representation": "disabled",
                                  "text": "{0}{1}"
                                },
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "Available",
                                  "text": "{0}{1}"
                                }
                              ]
                            }
                          },
                          {
                            "columnMatch": "ServiceDesk",
                            "formatter": 18,
                            "formatOptions": {
                              "thresholdsOptions": "icons",
                              "thresholdsGrid": [
                                {
                                  "operator": "==",
                                  "thresholdValue": "Not Enabled",
                                  "representation": "disabled",
                                  "text": "{0}{1}"
                                },
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "Available",
                                  "text": "{0}{1}"
                                }
                              ]
                            }
                          },
                          {
                            "columnMatch": "AzureAutomation",
                            "formatter": 18,
                            "formatOptions": {
                              "thresholdsOptions": "icons",
                              "thresholdsGrid": [
                                {
                                  "operator": "==",
                                  "thresholdValue": "Not Enabled",
                                  "representation": "disabled",
                                  "text": "{0}{1}"
                                },
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "Available",
                                  "text": "{0}{1}"
                                }
                              ]
                            }
                          },
                          {
                            "columnMatch": "ChangeTracking",
                            "formatter": 18,
                            "formatOptions": {
                              "thresholdsOptions": "icons",
                              "thresholdsGrid": [
                                {
                                  "operator": "==",
                                  "thresholdValue": "Not Enabled",
                                  "representation": "disabled",
                                  "text": "{0}{1}"
                                },
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "Available",
                                  "text": "{0}{1}"
                                }
                              ]
                            }
                          },
                          {
                            "columnMatch": "UpdateManagement",
                            "formatter": 18,
                            "formatOptions": {
                              "thresholdsOptions": "icons",
                              "thresholdsGrid": [
                                {
                                  "operator": "==",
                                  "thresholdValue": "Not Enabled",
                                  "representation": "disabled",
                                  "text": "{0}{1}"
                                },
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "Available",
                                  "text": "{0}{1}"
                                }
                              ]
                            }
                          },
                          {
                            "columnMatch": "UpdateCompliance",
                            "formatter": 18,
                            "formatOptions": {
                              "thresholdsOptions": "icons",
                              "thresholdsGrid": [
                                {
                                  "operator": "==",
                                  "thresholdValue": "Not Enabled",
                                  "representation": "disabled",
                                  "text": "{0}{1}"
                                },
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "Available",
                                  "text": "{0}{1}"
                                }
                              ]
                            }
                          },
                          {
                            "columnMatch": "AzureMonitorContainers",
                            "formatter": 18,
                            "formatOptions": {
                              "thresholdsOptions": "icons",
                              "thresholdsGrid": [
                                {
                                  "operator": "==",
                                  "thresholdValue": "Not Enabled",
                                  "representation": "disabled",
                                  "text": "{0}{1}"
                                },
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "Available",
                                  "text": "{0}{1}"
                                }
                              ]
                            }
                          },
                          {
                            "columnMatch": "KeyVaultAnalytics",
                            "formatter": 18,
                            "formatOptions": {
                              "thresholdsOptions": "icons",
                              "thresholdsGrid": [
                                {
                                  "operator": "==",
                                  "thresholdValue": "Not Enabled",
                                  "representation": "disabled",
                                  "text": "{0}{1}"
                                },
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "Available",
                                  "text": "{0}{1}"
                                }
                              ]
                            }
                          },
                          {
                            "columnMatch": "SQLHealthCheck",
                            "formatter": 18,
                            "formatOptions": {
                              "thresholdsOptions": "icons",
                              "thresholdsGrid": [
                                {
                                  "operator": "==",
                                  "thresholdValue": "Not Enabled",
                                  "representation": "disabled",
                                  "text": "{0}{1}"
                                },
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "Available",
                                  "text": "{0}{1}"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "sortBy": [],
                      "tileSettings": {
                        "titleContent": {
                          "columnMatch": "type",
                          "formatter": 1
                        },
                        "leftContent": {
                          "columnMatch": "count_",
                          "formatter": 12,
                          "formatOptions": {
                            "palette": "auto"
                          },
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "maximumSignificantDigits": 3,
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        "showBorder": true
                      }
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "monitor"
                    },
                    "name": "query - Monitoring Security Overview - Copy - Copy"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "### Azure Monitor Workbooks & Alerting Resources"
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "monitor"
                    },
                    "name": "text - Monitor & Security - Azure Monitor Alerts"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "resources\r\n| where type has 'microsoft.insights/'\r\n     or type has 'microsoft.alertsmanagement/smartdetectoralertrules'\r\n     or type has 'microsoft.portal/dashboards'\r\n| where type != 'microsoft.insights/components'\r\n| extend type = case(\r\n \ttype == 'microsoft.insights/workbooks', \"Workbooks\",\r\n\ttype == 'microsoft.insights/activitylogalerts', \"Activity Log Alerts\",\r\n\ttype == 'microsoft.insights/scheduledqueryrules', \"Log Search Alerts\",\r\n\ttype == 'microsoft.insights/actiongroups', \"Action Groups\",\r\n\ttype == 'microsoft.insights/metricalerts', \"Metric Alerts\",\r\n\ttype =~ 'microsoft.alertsmanagement/smartdetectoralertrules','Smart Detection Rules',\r\n    type =~ 'microsoft.insights/webtests', 'URL Web Tests',\r\n    type =~ 'microsoft.portal/dashboards', 'Portal Dashboards',\r\nstrcat(\"Not Translated: \", type))\r\n| summarize count() by type",
                      "size": 1,
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources",
                      "crossComponentResources": [
                        "{Subscriptions}"
                      ],
                      "visualization": "tiles",
                      "gridSettings": {
                        "formatters": [
                          {
                            "columnMatch": "Solutions",
                            "formatter": 5
                          },
                          {
                            "columnMatch": "AzureSecurityCenter",
                            "formatter": 18,
                            "formatOptions": {
                              "thresholdsOptions": "icons",
                              "thresholdsGrid": [
                                {
                                  "operator": "==",
                                  "representation": "disabled",
                                  "text": "{0}{1}"
                                },
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "Available",
                                  "text": "{0}{1}"
                                }
                              ]
                            }
                          },
                          {
                            "columnMatch": "AzureSecurityCenterFree",
                            "formatter": 18,
                            "formatOptions": {
                              "thresholdsOptions": "icons",
                              "thresholdsGrid": [
                                {
                                  "operator": "==",
                                  "thresholdValue": "Not Enabled",
                                  "representation": "disabled",
                                  "text": "{0}{1}"
                                },
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "Available",
                                  "text": "{0}{1}"
                                }
                              ]
                            }
                          },
                          {
                            "columnMatch": "AzureSentinel",
                            "formatter": 18,
                            "formatOptions": {
                              "thresholdsOptions": "icons",
                              "thresholdsGrid": [
                                {
                                  "operator": "==",
                                  "thresholdValue": "Not Enabled",
                                  "representation": "disabled",
                                  "text": "{0}{1}"
                                },
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "Available",
                                  "text": "{0}{1}"
                                }
                              ]
                            }
                          },
                          {
                            "columnMatch": "AzureMonitorVMs",
                            "formatter": 18,
                            "formatOptions": {
                              "thresholdsOptions": "icons",
                              "thresholdsGrid": [
                                {
                                  "operator": "==",
                                  "thresholdValue": "Not Enabled",
                                  "representation": "disabled",
                                  "text": "{0}{1}"
                                },
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "Available",
                                  "text": "{0}{1}"
                                }
                              ]
                            }
                          },
                          {
                            "columnMatch": "ServiceDesk",
                            "formatter": 18,
                            "formatOptions": {
                              "thresholdsOptions": "icons",
                              "thresholdsGrid": [
                                {
                                  "operator": "==",
                                  "thresholdValue": "Not Enabled",
                                  "representation": "disabled",
                                  "text": "{0}{1}"
                                },
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "Available",
                                  "text": "{0}{1}"
                                }
                              ]
                            }
                          },
                          {
                            "columnMatch": "AzureAutomation",
                            "formatter": 18,
                            "formatOptions": {
                              "thresholdsOptions": "icons",
                              "thresholdsGrid": [
                                {
                                  "operator": "==",
                                  "thresholdValue": "Not Enabled",
                                  "representation": "disabled",
                                  "text": "{0}{1}"
                                },
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "Available",
                                  "text": "{0}{1}"
                                }
                              ]
                            }
                          },
                          {
                            "columnMatch": "ChangeTracking",
                            "formatter": 18,
                            "formatOptions": {
                              "thresholdsOptions": "icons",
                              "thresholdsGrid": [
                                {
                                  "operator": "==",
                                  "thresholdValue": "Not Enabled",
                                  "representation": "disabled",
                                  "text": "{0}{1}"
                                },
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "Available",
                                  "text": "{0}{1}"
                                }
                              ]
                            }
                          },
                          {
                            "columnMatch": "UpdateManagement",
                            "formatter": 18,
                            "formatOptions": {
                              "thresholdsOptions": "icons",
                              "thresholdsGrid": [
                                {
                                  "operator": "==",
                                  "thresholdValue": "Not Enabled",
                                  "representation": "disabled",
                                  "text": "{0}{1}"
                                },
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "Available",
                                  "text": "{0}{1}"
                                }
                              ]
                            }
                          },
                          {
                            "columnMatch": "UpdateCompliance",
                            "formatter": 18,
                            "formatOptions": {
                              "thresholdsOptions": "icons",
                              "thresholdsGrid": [
                                {
                                  "operator": "==",
                                  "thresholdValue": "Not Enabled",
                                  "representation": "disabled",
                                  "text": "{0}{1}"
                                },
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "Available",
                                  "text": "{0}{1}"
                                }
                              ]
                            }
                          },
                          {
                            "columnMatch": "AzureMonitorContainers",
                            "formatter": 18,
                            "formatOptions": {
                              "thresholdsOptions": "icons",
                              "thresholdsGrid": [
                                {
                                  "operator": "==",
                                  "thresholdValue": "Not Enabled",
                                  "representation": "disabled",
                                  "text": "{0}{1}"
                                },
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "Available",
                                  "text": "{0}{1}"
                                }
                              ]
                            }
                          },
                          {
                            "columnMatch": "KeyVaultAnalytics",
                            "formatter": 18,
                            "formatOptions": {
                              "thresholdsOptions": "icons",
                              "thresholdsGrid": [
                                {
                                  "operator": "==",
                                  "thresholdValue": "Not Enabled",
                                  "representation": "disabled",
                                  "text": "{0}{1}"
                                },
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "Available",
                                  "text": "{0}{1}"
                                }
                              ]
                            }
                          },
                          {
                            "columnMatch": "SQLHealthCheck",
                            "formatter": 18,
                            "formatOptions": {
                              "thresholdsOptions": "icons",
                              "thresholdsGrid": [
                                {
                                  "operator": "==",
                                  "thresholdValue": "Not Enabled",
                                  "representation": "disabled",
                                  "text": "{0}{1}"
                                },
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "Available",
                                  "text": "{0}{1}"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "sortBy": [],
                      "tileSettings": {
                        "titleContent": {
                          "columnMatch": "type",
                          "formatter": 1
                        },
                        "leftContent": {
                          "columnMatch": "count_",
                          "formatter": 12,
                          "formatOptions": {
                            "palette": "auto"
                          },
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "maximumSignificantDigits": 3,
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        "showBorder": true,
                        "sortCriteriaField": "count_",
                        "sortOrderField": 2
                      }
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "monitor"
                    },
                    "name": "query - Monitoring Security Overview - Copy"
                  },
                  {
                    "type": 11,
                    "content": {
                      "version": "LinkItem/1.0",
                      "style": "tabs",
                      "links": [
                        {
                          "id": "ed3b3650-dd46-4a66-9acd-cbda10b14c04",
                          "cellValue": "monitor",
                          "linkTarget": "parameter",
                          "linkLabel": "Active Alerts",
                          "subTarget": "alerts",
                          "preText": "Active Alerts",
                          "style": "link"
                        },
                        {
                          "id": "9224d88a-9c0d-49de-8b24-38b3f8c380d3",
                          "cellValue": "monitor",
                          "linkTarget": "parameter",
                          "linkLabel": "Workbooks & Alerting Resources",
                          "subTarget": "alertresources",
                          "preText": "Monitor Resources",
                          "style": "link"
                        },
                        {
                          "id": "b90eaf7d-647e-4b37-ae0a-6fc6a49ce07c",
                          "cellValue": "monitor",
                          "linkTarget": "parameter",
                          "linkLabel": "App Monitoring",
                          "subTarget": "apm",
                          "preText": "App Monitoring",
                          "style": "link"
                        },
                        {
                          "id": "1b181560-7b87-4f30-886c-2054a3648401",
                          "cellValue": "monitor",
                          "linkTarget": "parameter",
                          "linkLabel": "Log Analytics",
                          "subTarget": "loganalytics",
                          "preText": "Log Analytics",
                          "style": "link"
                        },
                        {
                          "id": "d19b8a04-9a79-40ca-90a6-7ebc1be7fe75",
                          "cellValue": "monitor",
                          "linkTarget": "parameter",
                          "linkLabel": "Security Score",
                          "subTarget": "security",
                          "preText": "Security Score",
                          "style": "link"
                        }
                      ]
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "monitor"
                    },
                    "name": "links - Monitor & Security - Tabs"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "### NoShow - Begin - Monitor & Security - Active Alerts"
                    },
                    "conditionalVisibility": {
                      "parameterName": "noshow",
                      "comparison": "isEqualTo",
                      "value": "noshow"
                    },
                    "name": "text - NoShow - Begin Active Alerts"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "AlertsManagementResources\r\n| extend AlertStatus = properties.essentials.monitorCondition\r\n| extend AlertState = properties.essentials.alertState\r\n| extend AlertTime = properties.essentials.startDateTime\r\n| extend AlertSuppressed = properties.essentials.actionStatus.isSuppressed\r\n| extend Severity = properties.essentials.severity\r\n| where AlertStatus == 'Fired'\r\n| extend Details = pack_all()\r\n| project id, name, subscriptionId, resourceGroup, AlertStatus, AlertState, AlertTime, AlertSuppressed, Severity, Details",
                      "size": 2,
                      "showExportToExcel": true,
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources",
                      "crossComponentResources": [
                        "{Subscriptions}"
                      ],
                      "gridSettings": {
                        "formatters": [
                          {
                            "columnMatch": "$gen_group",
                            "formatter": 13,
                            "formatOptions": {
                              "linkTarget": null,
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "id",
                            "formatter": 5
                          },
                          {
                            "columnMatch": "name",
                            "formatter": 5
                          },
                          {
                            "columnMatch": "subscriptionId",
                            "formatter": 5
                          },
                          {
                            "columnMatch": "Details",
                            "formatter": 7,
                            "formatOptions": {
                              "linkTarget": "CellDetails",
                              "linkLabel": "🔍 View Details",
                              "linkIsContextBlade": true
                            }
                          }
                        ],
                        "rowLimit": 1000,
                        "filter": true,
                        "hierarchySettings": {
                          "treeType": 1,
                          "groupBy": [
                            "subscriptionId"
                          ],
                          "expandTopLevel": true,
                          "finalBy": "name"
                        }
                      }
                    },
                    "conditionalVisibilities": [
                      {
                        "parameterName": "selectedTab",
                        "comparison": "isEqualTo",
                        "value": "monitor"
                      },
                      {
                        "parameterName": "monitor",
                        "comparison": "isEqualTo",
                        "value": "alerts"
                      }
                    ],
                    "name": "query - Monitor & Security - Active Alerts"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "### NoShow - End - Monitor & Security - Active Alerts"
                    },
                    "conditionalVisibility": {
                      "parameterName": "noshow",
                      "comparison": "isEqualTo",
                      "value": "noshow"
                    },
                    "name": "text - NoShow - End Active Alerts"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "### NoShow - Begin Monitor & Security - Alerting Resources"
                    },
                    "conditionalVisibility": {
                      "parameterName": "noshow",
                      "comparison": "isEqualTo",
                      "value": "noshow"
                    },
                    "name": "text - NoShow - Begin Alerting Resources"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "resources\r\n| where type has 'microsoft.insights/'\r\n     or type has 'microsoft.alertsmanagement/smartdetectoralertrules'\r\n    or type has 'microsoft.portal/dashboards'\r\n| where type != 'microsoft.insights/components'\r\n| extend type = case(\r\n \ttype == 'microsoft.insights/workbooks', \"Workbooks\",\r\n\ttype == 'microsoft.insights/activitylogalerts', \"Activity Log Alerts\",\r\n\ttype == 'microsoft.insights/scheduledqueryrules', \"Log Search Alerts\",\r\n\ttype == 'microsoft.insights/actiongroups', \"Action Groups\",\r\n\ttype == 'microsoft.insights/metricalerts', \"Metric Alerts\",\r\n\ttype =~ 'microsoft.alertsmanagement/smartdetectoralertrules','Smart Detection Rules',\r\n    type =~ 'microsoft.portal/dashboards', 'Portal Dashboards',\r\n\tstrcat(\"Not Translated: \", type))\r\n| extend Enabled = case(\r\n\ttype =~ 'Smart Detection Rules', properties.state,\r\n\ttype != 'Smart Detection Rules', properties.enabled,\r\n\tstrcat(\"Not Translated: \", type))\r\n| extend WorkbookType = iif(type =~ 'Workbooks', properties.category, ' ')\r\n| extend Details = pack_all()\r\n| project name, type, subscriptionId, location, resourceGroup, Enabled, WorkbookType, Details",
                      "size": 2,
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources",
                      "crossComponentResources": [
                        "{Subscriptions}"
                      ],
                      "gridSettings": {
                        "formatters": [
                          {
                            "columnMatch": "$gen_group",
                            "formatter": 13,
                            "formatOptions": {
                              "linkTarget": null,
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "name",
                            "formatter": 5
                          },
                          {
                            "columnMatch": "subscriptionId",
                            "formatter": 5
                          },
                          {
                            "columnMatch": "Details",
                            "formatter": 7,
                            "formatOptions": {
                              "linkTarget": "CellDetails",
                              "linkLabel": "🔍 View Details",
                              "linkIsContextBlade": true
                            }
                          },
                          {
                            "columnMatch": "id",
                            "formatter": 5
                          }
                        ],
                        "filter": true,
                        "hierarchySettings": {
                          "treeType": 1,
                          "groupBy": [
                            "subscriptionId"
                          ],
                          "expandTopLevel": true,
                          "finalBy": "name"
                        }
                      }
                    },
                    "conditionalVisibilities": [
                      {
                        "parameterName": "selectedTab",
                        "comparison": "isEqualTo",
                        "value": "monitor"
                      },
                      {
                        "parameterName": "monitor",
                        "comparison": "isEqualTo",
                        "value": "alertresources"
                      }
                    ],
                    "name": "query - Monitor & Security - Alerting Resources"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "### NoShow - End - Monitor & Security - Alerting Resources"
                    },
                    "conditionalVisibility": {
                      "parameterName": "noshow",
                      "comparison": "isEqualTo",
                      "value": "noshow"
                    },
                    "name": "text - NoShow - End Alerting Resources"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "### NoShow - Begin - Monitor & Security - App Monitoring"
                    },
                    "conditionalVisibility": {
                      "parameterName": "noshow",
                      "comparison": "isEqualTo",
                      "value": "noshow"
                    },
                    "name": "text - NoShow - Begin App Monitoring"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "where type =~ 'microsoft.insights/components'\r\n| extend RetentionInDays = properties.RetentionInDays\r\n| extend IngestionMode = properties.IngestionMode\r\n| extend Details = pack_all()\r\n| project Resource=id, location, resourceGroup, subscriptionId, IngestionMode, RetentionInDays, Details",
                      "size": 2,
                      "exportedParameters": [
                        {
                          "fieldName": "Resource",
                          "parameterName": "appinsight",
                          "parameterType": 5
                        }
                      ],
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources",
                      "crossComponentResources": [
                        "{Subscriptions}"
                      ],
                      "gridSettings": {
                        "formatters": [
                          {
                            "columnMatch": "$gen_group",
                            "formatter": 13,
                            "formatOptions": {
                              "linkTarget": "Resource",
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "Resource",
                            "formatter": 5
                          },
                          {
                            "columnMatch": "subscriptionId",
                            "formatter": 5
                          },
                          {
                            "columnMatch": "Details",
                            "formatter": 7,
                            "formatOptions": {
                              "linkTarget": "CellDetails",
                              "linkLabel": "🔍 View Details",
                              "linkIsContextBlade": true
                            }
                          },
                          {
                            "columnMatch": "id",
                            "formatter": 5
                          },
                          {
                            "columnMatch": "name",
                            "formatter": 5
                          }
                        ],
                        "filter": true,
                        "hierarchySettings": {
                          "treeType": 1,
                          "groupBy": [
                            "subscriptionId"
                          ],
                          "expandTopLevel": true,
                          "finalBy": "Resource"
                        }
                      }
                    },
                    "conditionalVisibilities": [
                      {
                        "parameterName": "selectedTab",
                        "comparison": "isEqualTo",
                        "value": "monitor"
                      },
                      {
                        "parameterName": "monitor",
                        "comparison": "isEqualTo",
                        "value": "apm"
                      }
                    ],
                    "name": "query - Monitor & Security - App Monitoring"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "### NoShow - End - Monitor & Security - App Monitoring"
                    },
                    "conditionalVisibility": {
                      "parameterName": "noshow",
                      "comparison": "isEqualTo",
                      "value": "noshow"
                    },
                    "name": "text - NoShow - End App Monitoring"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "### NoShow - Begin - Monitor & Security - Log Analytics"
                    },
                    "conditionalVisibility": {
                      "parameterName": "noshow",
                      "comparison": "isEqualTo",
                      "value": "noshow"
                    },
                    "name": "text - NoShow - Begin - App Monitoring"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "where type =~ 'microsoft.operationalinsights/workspaces'\r\n| extend Sku = properties.sku.name\r\n| extend RetentionInDays = properties.retentionInDays\r\n| extend Details = pack_all()\r\n| project Workspace=id, resourceGroup, location, subscriptionId, Sku, RetentionInDays, Details",
                      "size": 0,
                      "exportedParameters": [
                        {
                          "fieldName": "workspace",
                          "parameterName": "workspace",
                          "parameterType": 5
                        }
                      ],
                      "showExportToExcel": true,
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources",
                      "crossComponentResources": [
                        "{Subscriptions}"
                      ],
                      "gridSettings": {
                        "formatters": [
                          {
                            "columnMatch": "$gen_group",
                            "formatter": 13,
                            "formatOptions": {
                              "linkTarget": "Resource",
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "Workspace",
                            "formatter": 5
                          },
                          {
                            "columnMatch": "subscriptionId",
                            "formatter": 5
                          },
                          {
                            "columnMatch": "Details",
                            "formatter": 7,
                            "formatOptions": {
                              "linkTarget": "CellDetails",
                              "linkLabel": "🔍 View Details",
                              "linkIsContextBlade": true
                            }
                          }
                        ],
                        "filter": true,
                        "hierarchySettings": {
                          "treeType": 1,
                          "groupBy": [
                            "subscriptionId"
                          ],
                          "expandTopLevel": true,
                          "finalBy": "Workspace"
                        }
                      },
                      "sortBy": []
                    },
                    "conditionalVisibilities": [
                      {
                        "parameterName": "selectedTab",
                        "comparison": "isEqualTo",
                        "value": "monitor"
                      },
                      {
                        "parameterName": "monitor",
                        "comparison": "isEqualTo",
                        "value": "loganalytics"
                      }
                    ],
                    "name": "query - Monitoring Security Overview - Copy"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "### Log Analytics workspaces with enabled Solutions\r\n\r\n💡 Select workspace to see data tables and resources logging to that workspace\r\n"
                    },
                    "conditionalVisibilities": [
                      {
                        "parameterName": "selectedTab",
                        "comparison": "isEqualTo",
                        "value": "monitor"
                      },
                      {
                        "parameterName": "monitor",
                        "comparison": "isEqualTo",
                        "value": "loganalytics"
                      }
                    ],
                    "name": "text - Monitor & Security - workspace details"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "resources\r\n| where type == \"microsoft.operationsmanagement/solutions\"\r\n| project Solution=plan.name, Workspace=tolower(tostring(properties.workspaceResourceId)), subscriptionId\r\n\t| join kind=leftouter(\r\n\t\tresources\r\n\t\t| where type =~ 'microsoft.operationalinsights/workspaces'\r\n\t\t| project Workspace=tolower(tostring(id)),subscriptionId) on Workspace\r\n| summarize Solutions = strcat_array(make_list(Solution), \",\") by Workspace, subscriptionId\r\n| extend AzureSecurityCenter = iif(Solutions has 'Security','Enabled','Not Enabled')\r\n| extend AzureSecurityCenterFree = iif(Solutions has 'SecurityCenterFree','Enabled','Not Enabled')\r\n| extend AzureSentinel = iif(Solutions has \"SecurityInsights\",'Enabled','Not Enabled')\r\n| extend AzureMonitorVMs = iif(Solutions has \"VMInsights\",'Enabled','Not Enabled')\r\n| extend ServiceDesk = iif(Solutions has \"ITSM Connector\",'Enabled','Not Enabled')\r\n| extend AzureAutomation = iif(Solutions has \"AzureAutomation\",'Enabled','Not Enabled')\r\n| extend ChangeTracking = iif(Solutions has 'ChangeTracking','Enabled','Not Enabled')\r\n| extend UpdateManagement = iif(Solutions has 'Updates','Enabled','Not Enabled')\r\n| extend UpdateCompliance = iif(Solutions has 'WaaSUpdateInsights','Enabled','Not Enabled')\r\n| extend AzureMonitorContainers = iif(Solutions has 'ContainerInsights','Enabled','Not Enabled')\r\n| extend KeyVaultAnalytics = iif(Solutions has 'KeyVaultAnalytics','Enabled','Not Enabled')\r\n| extend SQLHealthCheck = iif(Solutions has 'SQLAssessment','Enabled','Not Enabled')",
                      "size": 0,
                      "exportedParameters": [
                        {
                          "fieldName": "Workspace",
                          "parameterName": "workspace",
                          "parameterType": 5
                        }
                      ],
                      "showExportToExcel": true,
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources",
                      "crossComponentResources": [
                        "{Subscriptions}"
                      ],
                      "gridSettings": {
                        "formatters": [
                          {
                            "columnMatch": "$gen_group",
                            "formatter": 13,
                            "formatOptions": {
                              "linkTarget": "Resource",
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "Workspace",
                            "formatter": 5
                          },
                          {
                            "columnMatch": "subscriptionId",
                            "formatter": 5
                          },
                          {
                            "columnMatch": "Solutions",
                            "formatter": 5
                          },
                          {
                            "columnMatch": "AzureSecurityCenter",
                            "formatter": 18,
                            "formatOptions": {
                              "thresholdsOptions": "icons",
                              "thresholdsGrid": [
                                {
                                  "operator": "==",
                                  "thresholdValue": "Not Enabled",
                                  "representation": "disabled",
                                  "text": "{0}{1}"
                                },
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "Available",
                                  "text": "{0}{1}"
                                }
                              ]
                            }
                          },
                          {
                            "columnMatch": "AzureSecurityCenterFree",
                            "formatter": 18,
                            "formatOptions": {
                              "thresholdsOptions": "icons",
                              "thresholdsGrid": [
                                {
                                  "operator": "==",
                                  "thresholdValue": "Not Enabled",
                                  "representation": "disabled",
                                  "text": "{0}{1}"
                                },
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "Available",
                                  "text": "{0}{1}"
                                }
                              ]
                            }
                          },
                          {
                            "columnMatch": "AzureSentinel",
                            "formatter": 18,
                            "formatOptions": {
                              "thresholdsOptions": "icons",
                              "thresholdsGrid": [
                                {
                                  "operator": "==",
                                  "thresholdValue": "Not Enabled",
                                  "representation": "disabled",
                                  "text": "{0}{1}"
                                },
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "Available",
                                  "text": "{0}{1}"
                                }
                              ]
                            }
                          },
                          {
                            "columnMatch": "AzureMonitorVMs",
                            "formatter": 18,
                            "formatOptions": {
                              "thresholdsOptions": "icons",
                              "thresholdsGrid": [
                                {
                                  "operator": "==",
                                  "thresholdValue": "Not Enabled",
                                  "representation": "disabled",
                                  "text": "{0}{1}"
                                },
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "Available",
                                  "text": "{0}{1}"
                                }
                              ]
                            }
                          },
                          {
                            "columnMatch": "ServiceDesk",
                            "formatter": 18,
                            "formatOptions": {
                              "thresholdsOptions": "icons",
                              "thresholdsGrid": [
                                {
                                  "operator": "==",
                                  "thresholdValue": "Not Enabled",
                                  "representation": "disabled",
                                  "text": "{0}{1}"
                                },
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "Available",
                                  "text": "{0}{1}"
                                }
                              ]
                            }
                          },
                          {
                            "columnMatch": "AzureAutomation",
                            "formatter": 18,
                            "formatOptions": {
                              "thresholdsOptions": "icons",
                              "thresholdsGrid": [
                                {
                                  "operator": "==",
                                  "thresholdValue": "Not Enabled",
                                  "representation": "disabled",
                                  "text": "{0}{1}"
                                },
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "Available",
                                  "text": "{0}{1}"
                                }
                              ]
                            }
                          },
                          {
                            "columnMatch": "ChangeTracking",
                            "formatter": 18,
                            "formatOptions": {
                              "thresholdsOptions": "icons",
                              "thresholdsGrid": [
                                {
                                  "operator": "==",
                                  "thresholdValue": "Not Enabled",
                                  "representation": "disabled",
                                  "text": "{0}{1}"
                                },
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "Available",
                                  "text": "{0}{1}"
                                }
                              ]
                            }
                          },
                          {
                            "columnMatch": "UpdateManagement",
                            "formatter": 18,
                            "formatOptions": {
                              "thresholdsOptions": "icons",
                              "thresholdsGrid": [
                                {
                                  "operator": "==",
                                  "thresholdValue": "Not Enabled",
                                  "representation": "disabled",
                                  "text": "{0}{1}"
                                },
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "Available",
                                  "text": "{0}{1}"
                                }
                              ]
                            }
                          },
                          {
                            "columnMatch": "UpdateCompliance",
                            "formatter": 18,
                            "formatOptions": {
                              "thresholdsOptions": "icons",
                              "thresholdsGrid": [
                                {
                                  "operator": "==",
                                  "thresholdValue": "Not Enabled",
                                  "representation": "disabled",
                                  "text": "{0}{1}"
                                },
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "Available",
                                  "text": "{0}{1}"
                                }
                              ]
                            }
                          },
                          {
                            "columnMatch": "AzureMonitorContainers",
                            "formatter": 18,
                            "formatOptions": {
                              "thresholdsOptions": "icons",
                              "thresholdsGrid": [
                                {
                                  "operator": "==",
                                  "thresholdValue": "Not Enabled",
                                  "representation": "disabled",
                                  "text": "{0}{1}"
                                },
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "Available",
                                  "text": "{0}{1}"
                                }
                              ]
                            }
                          },
                          {
                            "columnMatch": "KeyVaultAnalytics",
                            "formatter": 18,
                            "formatOptions": {
                              "thresholdsOptions": "icons",
                              "thresholdsGrid": [
                                {
                                  "operator": "==",
                                  "thresholdValue": "Not Enabled",
                                  "representation": "disabled",
                                  "text": "{0}{1}"
                                },
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "Available",
                                  "text": "{0}{1}"
                                }
                              ]
                            }
                          },
                          {
                            "columnMatch": "SQLHealthCheck",
                            "formatter": 18,
                            "formatOptions": {
                              "thresholdsOptions": "icons",
                              "thresholdsGrid": [
                                {
                                  "operator": "==",
                                  "thresholdValue": "Not Enabled",
                                  "representation": "disabled",
                                  "text": "{0}{1}"
                                },
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "Available",
                                  "text": "{0}{1}"
                                }
                              ]
                            }
                          }
                        ],
                        "filter": true,
                        "hierarchySettings": {
                          "treeType": 1,
                          "groupBy": [
                            "subscriptionId"
                          ],
                          "expandTopLevel": true,
                          "finalBy": "Workspace"
                        }
                      },
                      "sortBy": []
                    },
                    "conditionalVisibilities": [
                      {
                        "parameterName": "selectedTab",
                        "comparison": "isEqualTo",
                        "value": "monitor"
                      },
                      {
                        "parameterName": "monitor",
                        "comparison": "isEqualTo",
                        "value": "loganalytics"
                      }
                    ],
                    "name": "query - Monitoring Security Overview"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "\r\n\r\n💡 Workspace table usage for selected workspace on the left, resources reported to selected workspace on the right."
                    },
                    "conditionalVisibilities": [
                      {
                        "parameterName": "selectedTab",
                        "comparison": "isEqualTo",
                        "value": "monitor"
                      },
                      {
                        "parameterName": "monitor",
                        "comparison": "isEqualTo",
                        "value": "loganalytics"
                      }
                    ],
                    "name": "text - Monitor & Security - workspace table usage"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "Usage\r\n| summarize Size = sum(Quantity) by ['Table Name'] = DataType\r\n| sort by Size desc",
                      "size": 2,
                      "noDataMessageStyle": 5,
                      "timeContext": {
                        "durationMs": 86400000
                      },
                      "exportedParameters": [
                        {
                          "fieldName": "workspace",
                          "parameterName": "workspace",
                          "parameterType": 5
                        }
                      ],
                      "showExportToExcel": true,
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "crossComponentResources": [
                        "{workspace}"
                      ],
                      "gridSettings": {
                        "formatters": [
                          {
                            "columnMatch": "Size",
                            "formatter": 3,
                            "formatOptions": {
                              "palette": "orange",
                              "customColumnWidthSetting": "341px"
                            },
                            "numberFormat": {
                              "unit": 38,
                              "options": {
                                "style": "decimal"
                              }
                            }
                          }
                        ],
                        "rowLimit": 500,
                        "filter": true
                      },
                      "sortBy": []
                    },
                    "conditionalVisibilities": [
                      {
                        "parameterName": "selectedTab",
                        "comparison": "isEqualTo",
                        "value": "monitor"
                      },
                      {
                        "parameterName": "monitor",
                        "comparison": "isEqualTo",
                        "value": "loganalytics"
                      }
                    ],
                    "customWidth": "50",
                    "name": "query - Monitoring Security - Workspace Usage - Copy"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "search * | distinct _ResourceId, SubscriptionId",
                      "size": 2,
                      "noDataMessageStyle": 5,
                      "timeContext": {
                        "durationMs": 86400000
                      },
                      "exportedParameters": [
                        {
                          "fieldName": "workspace",
                          "parameterName": "workspace",
                          "parameterType": 5
                        }
                      ],
                      "showExportToExcel": true,
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "crossComponentResources": [
                        "{workspace}"
                      ],
                      "gridSettings": {
                        "formatters": [
                          {
                            "columnMatch": "$gen_group",
                            "formatter": 13,
                            "formatOptions": {
                              "linkTarget": null,
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "_ResourceId",
                            "formatter": 5
                          },
                          {
                            "columnMatch": "SubscriptionId",
                            "formatter": 5
                          }
                        ],
                        "rowLimit": 500,
                        "filter": true,
                        "hierarchySettings": {
                          "treeType": 1,
                          "groupBy": [
                            "SubscriptionId"
                          ],
                          "expandTopLevel": true,
                          "finalBy": "_ResourceId"
                        }
                      },
                      "sortBy": []
                    },
                    "conditionalVisibilities": [
                      {
                        "parameterName": "selectedTab",
                        "comparison": "isEqualTo",
                        "value": "monitor"
                      },
                      {
                        "parameterName": "monitor",
                        "comparison": "isEqualTo",
                        "value": "loganalytics"
                      }
                    ],
                    "customWidth": "50",
                    "name": "query - Monitoring Security - Workspace Usage"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "### NoShow - End - Monitor & Security - Log Analytics"
                    },
                    "conditionalVisibility": {
                      "parameterName": "noshow",
                      "comparison": "isEqualTo",
                      "value": "noshow"
                    },
                    "name": "text - NoShow - End - App Monitoring"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "### NoShow - Begin - Monitor & Security - Security"
                    },
                    "conditionalVisibility": {
                      "parameterName": "noshow",
                      "comparison": "isEqualTo",
                      "value": "noshow"
                    },
                    "name": "text - NoShow - Begin - App Monitoring - Security"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "### Azure Security Center Secure Store by Subscription"
                    },
                    "conditionalVisibilities": [
                      {
                        "parameterName": "selectedTab",
                        "comparison": "isEqualTo",
                        "value": "monitor"
                      },
                      {
                        "parameterName": "monitor",
                        "comparison": "isEqualTo",
                        "value": "security"
                      }
                    ],
                    "name": "text - Monitor & Security - Secure Score Text"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "securityresources\r\n| where type == \"microsoft.security/securescores\"\r\n| extend subscriptionSecureScore = round(100 * bin((todouble(properties.score.current))/ todouble(properties.score.max), 0.001))\r\n| where subscriptionSecureScore > 0\r\n| project subscriptionSecureScore, subscriptionId\r\n| order by subscriptionSecureScore asc",
                      "size": 0,
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources",
                      "crossComponentResources": [
                        "{Subscriptions}"
                      ],
                      "gridSettings": {
                        "formatters": [
                          {
                            "columnMatch": "$gen_group",
                            "formatter": 13,
                            "formatOptions": {
                              "linkTarget": null,
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "subscriptionSecureScore",
                            "formatter": 8,
                            "formatOptions": {
                              "min": 0,
                              "max": 100,
                              "palette": "redGreen"
                            },
                            "numberFormat": {
                              "unit": 1,
                              "options": {
                                "style": "decimal",
                                "useGrouping": false
                              }
                            }
                          }
                        ],
                        "hierarchySettings": {
                          "treeType": 1,
                          "groupBy": [
                            "subscriptionId"
                          ],
                          "expandTopLevel": true,
                          "finalBy": "subscriptionSecureScore"
                        }
                      }
                    },
                    "conditionalVisibilities": [
                      {
                        "parameterName": "selectedTab",
                        "comparison": "isEqualTo",
                        "value": "monitor"
                      },
                      {
                        "parameterName": "monitor",
                        "comparison": "isEqualTo",
                        "value": "security"
                      }
                    ],
                    "name": "query - Monitor & Security - Security Scores"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "### Azure Security Center Secure Controls Score by Controls\r\n\r\nlists all security controls, the amount of unhealthy resources, their current score and their max score"
                    },
                    "conditionalVisibilities": [
                      {
                        "parameterName": "selectedTab",
                        "comparison": "isEqualTo",
                        "value": "monitor"
                      },
                      {
                        "parameterName": "monitor",
                        "comparison": "isEqualTo",
                        "value": "security"
                      }
                    ],
                    "name": "text - Monitor & Security - Secure Score Text - Copy"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "SecurityResources \r\n| where type == 'microsoft.security/securescores/securescorecontrols' \r\n| extend SecureControl = properties.displayName, unhealthy = properties.unhealthyResourceCount, currentscore = properties.score.current, maxscore = properties.score.max, subscriptionId\r\n| project SecureControl , unhealthy, currentscore, maxscore, subscriptionId",
                      "size": 3,
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources",
                      "crossComponentResources": [
                        "{Subscriptions}"
                      ],
                      "gridSettings": {
                        "formatters": [
                          {
                            "columnMatch": "$gen_group",
                            "formatter": 13,
                            "formatOptions": {
                              "linkTarget": null,
                              "showIcon": true,
                              "customColumnWidthSetting": "45ch"
                            }
                          },
                          {
                            "columnMatch": "SecureControl",
                            "formatter": 5
                          },
                          {
                            "columnMatch": "unhealthy",
                            "formatter": 8,
                            "formatOptions": {
                              "min": 0,
                              "palette": "greenRed"
                            }
                          },
                          {
                            "columnMatch": "currentscore",
                            "formatter": 8,
                            "formatOptions": {
                              "palette": "redGreen"
                            },
                            "numberFormat": {
                              "unit": 1,
                              "options": {
                                "style": "decimal"
                              }
                            }
                          },
                          {
                            "columnMatch": "maxscore",
                            "formatter": 8,
                            "formatOptions": {
                              "palette": "blue"
                            }
                          },
                          {
                            "columnMatch": "subscriptionId",
                            "formatter": 5
                          },
                          {
                            "columnMatch": "subscriptionSecureScore",
                            "formatter": 8,
                            "formatOptions": {
                              "min": 0,
                              "max": 100,
                              "palette": "redGreen"
                            },
                            "numberFormat": {
                              "unit": 1,
                              "options": {
                                "style": "decimal",
                                "useGrouping": false
                              }
                            }
                          }
                        ],
                        "hierarchySettings": {
                          "treeType": 1,
                          "groupBy": [
                            "subscriptionId"
                          ],
                          "expandTopLevel": true,
                          "finalBy": "SecureControl"
                        }
                      }
                    },
                    "conditionalVisibilities": [
                      {
                        "parameterName": "selectedTab",
                        "comparison": "isEqualTo",
                        "value": "monitor"
                      },
                      {
                        "parameterName": "monitor",
                        "comparison": "isEqualTo",
                        "value": "security"
                      }
                    ],
                    "name": "query - Monitor & Security - Security Scores - Copy"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "### NoShow - End - Monitor & Security - Security"
                    },
                    "conditionalVisibility": {
                      "parameterName": "noshow",
                      "comparison": "isEqualTo",
                      "value": "noshow"
                    },
                    "name": "text - NoShow - End - App Monitoring - Security - Copy"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "## End Monitoring & Security\r\n\r\n## Begin Tagged Resoruces"
                    },
                    "conditionalVisibility": {
                      "parameterName": "noshow",
                      "comparison": "isEqualTo",
                      "value": "noshow"
                    },
                    "name": "text - NoShow End Monitoring"
                  },
                  {
                    "type": 9,
                    "content": {
                      "version": "KqlParameterItem/1.0",
                      "crossComponentResources": [
                        "{Subscriptions}"
                      ],
                      "parameters": [
                        {
                          "id": "f89867f4-907a-49cd-add8-bded49c43bed",
                          "version": "KqlParameterItem/1.0",
                          "name": "Environment",
                          "type": 5,
                          "isRequired": true,
                          "multiSelect": true,
                          "quote": "'",
                          "delimiter": ",",
                          "query": "resources | where tags.Environment != '' | distinct tostring(tags.Environment)",
                          "crossComponentResources": [
                            "{Subscriptions}"
                          ],
                          "value": [
                            "value::all"
                          ],
                          "typeSettings": {
                            "additionalResourceOptions": [
                              "value::1",
                              "value::all"
                            ],
                            "showDefault": false
                          },
                          "timeContext": {
                            "durationMs": 86400000
                          },
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources"
                        },
                        {
                          "id": "ef32b148-7ea7-4af4-aaf7-b6a87f2d00d7",
                          "version": "KqlParameterItem/1.0",
                          "name": "Application",
                          "type": 5,
                          "isRequired": true,
                          "multiSelect": true,
                          "quote": "'",
                          "delimiter": ",",
                          "query": "resources \r\n| where tags.Environment in~ ({Environment}) or '*' in~ ({Environment})\r\n| where tags.Application != '' | distinct tostring(tags.Application)  ",
                          "crossComponentResources": [
                            "{Subscriptions}"
                          ],
                          "value": [],
                          "typeSettings": {
                            "additionalResourceOptions": [
                              "value::1",
                              "value::all"
                            ],
                            "showDefault": false
                          },
                          "timeContext": {
                            "durationMs": 86400000
                          },
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources"
                        }
                      ],
                      "style": "pills",
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources"
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "tags"
                    },
                    "name": "parameters - Tagged Resources"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "## Showing Resources for {Environment} and Application(s) {Application}"
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "tags"
                    },
                    "name": "text - Show Text for Tagged Selections"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "resources\r\n| where type != 'microsoft.network/networkinterfaces'\r\n| where type != 'microsoft.compute/disks'\r\n| where tags.Environment in~ ({Environment}) or '*' in~ ({Environment})\r\n| where tags.Application in~ ({Application}) or '*' in~ ({Application})\r\n| extend type = case(\r\ntype =~ 'microsoft.network/networksecuritygroups', \"NSGs\", \r\ntype =~ \"microsoft.network/publicipaddresses\", \"Public IPs\", \r\ntype =~ 'microsoft.network/virtualnetworks', \"vNets\",\r\ntype =~ 'microsoft.network/networkwatchers/connectionmonitors', \"Connection Monitors\",\r\ntype =~ 'microsoft.network/privatednszones', \"Private DNS\",\r\ntype =~ 'microsoft.network/virtualnetworkgateways', \"vNet Gateways\",\r\ntype =~ 'microsoft.network/connections', \"Connections\",\r\ntype =~ 'microsoft.network/networkwatchers', \"Network Watchers\",\r\ntype =~ 'microsoft.network/privateendpoints', \"Private Endpoints\",\r\ntype =~ 'microsoft.network/localnetworkgateways', \"Local Network Gateways\",\r\ntype =~ 'microsoft.network/privatednszones/virtualnetworklinks', \"vNet Links\",\r\ntype =~ 'microsoft.web/serverfarms', \"App Service Plans\",\r\nkind == 'functionapp', \"Azure Functions\", \r\nkind == \"api\", \"API Apps\", \r\ntype =~ 'microsoft.web/sites', \"App Services\",\r\ntype =~ \"microsoft.compute/virtualmachines\", \"Azure Compute\",\r\ntype =~ \"microsoft.logic/workflows\", \"LogicApps\",\r\ntype =~ 'microsoft.keyvault/vaults', \"Key Vaults\",\r\ntype =~ 'microsoft.keyvault/vaults', \"Hybrid Compute\",\r\ntype =~ 'microsoft.storage/storageaccounts', \"Storage Accounts\",\r\ntype =~ 'microsoft.compute/availabilitysets', 'Availability Sets',\r\ntype =~ 'microsoft.insights/components','Application Insights',\r\ntype =~ 'microsoft.desktopvirtualization/applicationgroups', 'WVD Application Groups',\r\ntype =~ 'microsoft.desktopvirtualization/workspaces', 'WVD Workspaces',\r\ntype =~ 'microsoft.desktopvirtualization/hostpools', 'WVD Hostpools',\r\nstrcat(\"Not Translated: \", type))\r\n| summarize count() by type\r\n\r\n\r\n",
                      "size": 0,
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources",
                      "crossComponentResources": [
                        "{Subscriptions}"
                      ],
                      "visualization": "tiles",
                      "tileSettings": {
                        "titleContent": {
                          "columnMatch": "type",
                          "formatter": 1
                        },
                        "leftContent": {
                          "columnMatch": "count_",
                          "formatter": 12,
                          "formatOptions": {
                            "palette": "auto"
                          },
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "maximumSignificantDigits": 3,
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        "showBorder": true
                      }
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "tags"
                    },
                    "name": "query - Tagged Resources"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "resources\r\n| where type != 'microsoft.network/networkinterfaces'\r\n| where type != 'microsoft.compute/disks'\r\n| where tags.Environment in~ ({Environment}) or '*' in~ ({Environment})\r\n| where tags.Application in~ ({Application}) or '*' in~ ({Application})\r\n| extend type = case(\r\ntype =~ 'microsoft.network/networksecuritygroups', \"NSGs\", \r\ntype =~ \"microsoft.network/publicipaddresses\", \"Public IPs\", \r\ntype =~ 'microsoft.network/virtualnetworks', \"vNets\",\r\ntype =~ 'microsoft.network/networkwatchers/connectionmonitors', \"Connection Monitors\",\r\ntype =~ 'microsoft.network/privatednszones', \"Private DNS\",\r\ntype =~ 'microsoft.network/virtualnetworkgateways', \"vNet Gateways\",\r\ntype =~ 'microsoft.network/connections', \"Connections\",\r\ntype =~ 'microsoft.network/networkwatchers', \"Network Watchers\",\r\ntype =~ 'microsoft.network/privateendpoints', \"Private Endpoints\",\r\ntype =~ 'microsoft.network/localnetworkgateways', \"Local Network Gateways\",\r\ntype =~ 'microsoft.network/privatednszones/virtualnetworklinks', \"vNet Links\",\r\ntype =~ 'microsoft.web/serverfarms', \"App Service Plans\",\r\nkind == 'functionapp', \"Azure Functions\", \r\nkind == \"api\", \"API Apps\", \r\ntype =~ 'microsoft.web/sites', \"App Services\",\r\ntype =~ \"microsoft.compute/virtualmachines\", \"Azure Compute\",\r\ntype =~ \"microsoft.logic/workflows\", \"LogicApps\",\r\ntype =~ 'microsoft.keyvault/vaults', \"Key Vaults\",\r\ntype =~ 'microsoft.keyvault/vaults', \"Hybrid Compute\",\r\ntype =~ 'microsoft.storage/storageaccounts', \"Storage Accounts\",\r\ntype =~ 'microsoft.compute/availabilitysets', 'Availability Sets',\r\ntype =~ 'microsoft.insights/components','Application Insights',\r\ntype =~ 'microsoft.desktopvirtualization/applicationgroups', 'WVD Application Groups',\r\ntype =~ 'microsoft.desktopvirtualization/workspaces', 'WVD Workspaces',\r\ntype =~ 'microsoft.desktopvirtualization/hostpools', 'WVD Hostpools',\r\nstrcat(\"Not Translated: \", type))\r\n| extend Details = pack_all()\r\n| project id, subscriptionId, type, location, resourceGroup, Details\r\n\r\n\r\n",
                      "size": 0,
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources",
                      "crossComponentResources": [
                        "{Subscriptions}"
                      ],
                      "visualization": "table",
                      "gridSettings": {
                        "formatters": [
                          {
                            "columnMatch": "$gen_group",
                            "formatter": 13,
                            "formatOptions": {
                              "linkTarget": "Resource",
                              "linkIsContextBlade": false,
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "id",
                            "formatter": 5
                          },
                          {
                            "columnMatch": "subscriptionId",
                            "formatter": 5
                          },
                          {
                            "columnMatch": "Details",
                            "formatter": 7,
                            "formatOptions": {
                              "linkTarget": "CellDetails",
                              "linkLabel": "🔍 View Details",
                              "linkIsContextBlade": true
                            }
                          },
                          {
                            "columnMatch": "tenantId",
                            "formatter": 5
                          }
                        ],
                        "hierarchySettings": {
                          "treeType": 1,
                          "groupBy": [
                            "subscriptionId"
                          ],
                          "expandTopLevel": true,
                          "finalBy": "id"
                        }
                      },
                      "tileSettings": {
                        "titleContent": {
                          "columnMatch": "type",
                          "formatter": 1
                        },
                        "leftContent": {
                          "columnMatch": "count_",
                          "formatter": 12,
                          "formatOptions": {
                            "palette": "auto"
                          },
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "maximumSignificantDigits": 3,
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        "showBorder": true
                      }
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "tags"
                    },
                    "name": "query - Tagged Resources - Copy"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "Resources\r\n| where tags.Environment in~ ({Environment}) or '*' in~ ({Environment})\r\n| where tags.Application in~ ({Application}) or '*' in~ ({Application})\r\n| summarize count() by type",
                      "size": 0,
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources",
                      "crossComponentResources": [
                        "{Subscriptions}"
                      ]
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "tabs"
                    },
                    "name": "query - Tagged Resources Summary"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "## NoShow - End Tagged Resources\r\n\r\n\r\n## NoShow - Begin Untagged Resources"
                    },
                    "conditionalVisibility": {
                      "parameterName": "noShow",
                      "comparison": "isEqualTo",
                      "value": "noShow"
                    },
                    "name": "text - NoShow Begin Untagged Resources"
                  },
                  {
                    "type": 9,
                    "content": {
                      "version": "KqlParameterItem/1.0",
                      "crossComponentResources": [
                        "{Subscriptions}"
                      ],
                      "parameters": [
                        {
                          "id": "2ca6744f-0d53-48a0-ad15-95f6dbe5aa9d",
                          "version": "KqlParameterItem/1.0",
                          "name": "ResourceType",
                          "type": 7,
                          "isRequired": true,
                          "multiSelect": true,
                          "quote": "'",
                          "delimiter": ",",
                          "query": "resources | where tags == ''\r\n| distinct type",
                          "crossComponentResources": [
                            "{Subscriptions}"
                          ],
                          "value": [
                            "value::all"
                          ],
                          "typeSettings": {
                            "additionalResourceOptions": [
                              "value::1",
                              "value::all"
                            ],
                            "showDefault": false
                          },
                          "timeContext": {
                            "durationMs": 86400000
                          },
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources"
                        }
                      ],
                      "style": "pills",
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources"
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "notag"
                    },
                    "name": "parameters - Untagged Resource Type"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "resources | where tags == ''\r\n| where type in~ ({ResourceType}) or '*' in~ ({ResourceType})\r\n| project Name=id, subscriptionId\r\n",
                      "size": 3,
                      "showExportToExcel": true,
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources",
                      "crossComponentResources": [
                        "{Subscriptions}"
                      ],
                      "gridSettings": {
                        "formatters": [
                          {
                            "columnMatch": "$gen_group",
                            "formatter": 13,
                            "formatOptions": {
                              "linkTarget": "Resource",
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "Name",
                            "formatter": 5
                          },
                          {
                            "columnMatch": "subscriptionId",
                            "formatter": 5
                          }
                        ],
                        "rowLimit": 1000,
                        "filter": true,
                        "hierarchySettings": {
                          "treeType": 1,
                          "groupBy": [
                            "subscriptionId"
                          ],
                          "expandTopLevel": true,
                          "finalBy": "Name"
                        }
                      }
                    },
                    "conditionalVisibility": {
                      "parameterName": "selectedTab",
                      "comparison": "isEqualTo",
                      "value": "notag"
                    },
                    "name": "query - Untagged Resources"
                  }
                ],
                "fallbackResourceIds": [
                  "Azure Monitor"
                ],
                "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
              }
            }
          ]
        },
        "workspaceId": {
          "value": "[@_res.arm.workspace.id_@]"
        }
      }
    },
    { // Depend on mgt workspace
      "name": "res.arm.workspace"
    }
  ]
}

